(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (return_statement (return) (binary_expression (identifier) (==) (number_literal)) (;))) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (binary_expression (identifier) (>) (number_literal)) (&&) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (number_literal) (])) (==) (subscript_expression (identifier) ([) (number_literal) (]))) (||) (binary_expression (subscript_expression (identifier) ([) (number_literal) (])) (==) (char_literal (') (character) (')))) ())))) (;)) (comment) (comment) (comment) (comment) (comment) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (>) (number_literal)) (&&) (binary_expression (subscript_expression (identifier) ([) (number_literal) (])) (==) (char_literal (') (character) (')))) ())) (return_statement (return) (binary_expression (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (identifier) (+) (number_literal)) ()))) (||) (parenthesized_expression (() (binary_expression (identifier) (&&) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (+) (number_literal)) (,) (identifier) ())))) ()))) (;)) (else_clause (else) (return_statement (return) (binary_expression (identifier) (&&) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (+) (number_literal)) (,) (binary_expression (identifier) (+) (number_literal)) ())))) (;)))) (}))))