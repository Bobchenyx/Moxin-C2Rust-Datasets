(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (,) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (return_statement (return) (conditional_expression (binary_expression (identifier) (==) (number_literal)) (?) (true) (:) (false)) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (number_literal)) (||) (binary_expression (subscript_expression (identifier) ([) (number_literal) (])) (!=) (char_literal (') (character) (')))) ())) (return_statement (return) (false) (;))) (return_statement (return) (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (identifier) (+) (number_literal)) ()))) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (number_literal) (])) (==) (char_literal (') (character) ('))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (number_literal)) (||) (binary_expression (subscript_expression (identifier) ([) (number_literal) (])) (!=) (char_literal (') (character) (')))) ())) (return_statement (return) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (+) (number_literal)) (,) (binary_expression (identifier) (+) (number_literal)) ()))) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (return_statement (return) (true) (;))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (identifier)) (;)) (binary_expression (identifier) (>=) (number_literal)) (;) (update_expression (identifier) (--)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (call_expression (identifier) (argument_list (() (binary_expression (identifier) (+) (identifier)) (,) (binary_expression (identifier) (+) (number_literal)) ()))) ())) (return_statement (return) (true) (;))) (}))) (return_statement (return) (false) (;)) (}))) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (>=) (number_literal)) (&&) (binary_expression (subscript_expression (identifier) ([) (number_literal) (])) (==) (char_literal (') (character) (')))) ())) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (<) (identifier)) (&&) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (subscript_expression (identifier) ([) (number_literal) (])))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (identifier)) (;)) (binary_expression (identifier) (>=) (number_literal)) (;) (update_expression (identifier) (--)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (call_expression (identifier) (argument_list (() (binary_expression (identifier) (+) (identifier)) (,) (binary_expression (identifier) (+) (number_literal)) ()))) ())) (return_statement (return) (true) (;))) (}))) (return_statement (return) (false) (;)) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (number_literal) (])) (==) (subscript_expression (identifier) ([) (number_literal) (]))) ())) (return_statement (return) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (+) (number_literal)) (,) (binary_expression (identifier) (+) (number_literal)) ()))) (;))))) (return_statement (return) (false) (;)) (}))))