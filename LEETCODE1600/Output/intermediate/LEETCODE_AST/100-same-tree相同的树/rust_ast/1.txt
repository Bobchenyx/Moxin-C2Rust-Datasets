(source_file (use_declaration (use) (scoped_identifier (scoped_identifier (identifier) (::) (identifier)) (::) (identifier)) (;)) (use_declaration (use) (scoped_identifier (scoped_identifier (identifier) (::) (identifier)) (::) (identifier)) (;)) (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (>))) (>)))) (,) (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (>))) (>)))) ())) (->) (primitive_type) (block ({) (expression_statement (match_expression (match) (tuple_expression (() (identifier) (,) (identifier) ())) (match_block ({) (match_arm (match_pattern (tuple_pattern (() (identifier) (,) (identifier) ()))) (=>) (boolean_literal (true)) (,)) (match_arm (match_pattern (or_pattern (tuple_pattern (() (identifier) (,) (_) ())) (|) (tuple_pattern (() (_) (,) (identifier) ())))) (=>) (boolean_literal (false)) (,)) (match_arm (match_pattern (tuple_pattern (() (tuple_struct_pattern (identifier) (() (identifier) ())) (,) (tuple_struct_pattern (identifier) (() (identifier) ())) ()))) (=>) (block ({) (let_declaration (let) (tuple_pattern (() (identifier) (,) (identifier) ())) (=) (tuple_expression (() (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (,) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) ())) (;)) (line_comment (//)) (let_declaration (let) (tuple_pattern (() (identifier) (,) (identifier) ())) (=) (tuple_expression (() (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (,) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) ())) (;)) (line_comment (//)) (expression_statement (if_expression (if) (binary_expression (field_expression (identifier) (.) (field_identifier)) (==) (field_expression (identifier) (.) (field_identifier))) (block ({) (binary_expression (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (call_expression (field_expression (field_expression (identifier) (.) (field_identifier)) (.) (field_identifier)) (arguments (() ()))) (,) (call_expression (field_expression (field_expression (identifier) (.) (field_identifier)) (.) (field_identifier)) (arguments (() ()))) ()))) (&&) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (call_expression (field_expression (field_expression (identifier) (.) (field_identifier)) (.) (field_identifier)) (arguments (() ()))) (,) (call_expression (field_expression (field_expression (identifier) (.) (field_identifier)) (.) (field_identifier)) (arguments (() ()))) ())))) (})) (else_clause (else) (block ({) (boolean_literal (false)) (}))))) (}))) (})))) (}))) (}))))