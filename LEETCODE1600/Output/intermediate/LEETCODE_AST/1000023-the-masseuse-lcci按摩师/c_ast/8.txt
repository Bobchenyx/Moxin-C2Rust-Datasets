(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (array_declarator (identifier) ([) (number_literal) (])) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<) (number_literal)) ())) (compound_statement ({) (return_statement (return) (number_literal) (;)) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (compound_statement ({) (return_statement (return) (subscript_expression (identifier) ([) (number_literal) (])) (;)) (}))))) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (subscript_expression (identifier) ([) (number_literal) (]))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (conditional_expression (binary_expression (subscript_expression (identifier) ([) (number_literal) (])) (>) (subscript_expression (identifier) ([) (number_literal) (]))) (?) (subscript_expression (identifier) ([) (number_literal) (])) (:) (subscript_expression (identifier) ([) (number_literal) (])))) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (+) (subscript_expression (identifier) ([) (identifier) (])))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (conditional_expression (binary_expression (identifier) (>) (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (]))) (?) (identifier) (:) (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (return_statement (return) (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (;)) (}))))