(translation_unit (preproc_include (#include) (system_lib_string)) (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (identifier)) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (null (NULL))) (;)) (while_statement (while) (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (number_literal) (*) (parenthesized_expression (() (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) ()))) ()))))) (;)) (comment) (comment) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (while_statement (while) (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (identifier)) (||) (binary_expression (pointer_expression (*) (identifier)) (==) (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (-) (number_literal)) ()))))) ())) (comment) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (pointer_expression (*) (identifier)) (==) (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ())))) (&&) (binary_expression (identifier) (!=) (binary_expression (identifier) (+) (identifier)))) ())) (expression_statement (update_expression (identifier) (++)) (;)) (else_clause (else) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (pointer_expression (*) (identifier))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>=) (number_literal)) ())) (comment) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (/) (number_literal))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (binary_expression (identifier) (%) (number_literal)) (/) (number_literal))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (binary_expression (binary_expression (identifier) (%) (number_literal)) (%) (number_literal)) (/) (number_literal))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (%) (number_literal))) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (binary_expression (char_literal (') (character) (')) (+) (identifier))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (binary_expression (char_literal (') (character) (')) (+) (identifier))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (binary_expression (char_literal (') (character) (')) (+) (identifier))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (binary_expression (char_literal (') (character) (')) (+) (identifier))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (assignment_expression (identifier) (+=) (number_literal)) (;)) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>=) (number_literal)) ())) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (/) (number_literal))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (binary_expression (identifier) (%) (number_literal)) (/) (number_literal))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (%) (number_literal))) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (binary_expression (char_literal (') (character) (')) (+) (identifier))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (binary_expression (char_literal (') (character) (')) (+) (identifier))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (binary_expression (char_literal (') (character) (')) (+) (identifier))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (assignment_expression (identifier) (+=) (number_literal)) (;)) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>=) (number_literal)) ())) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (/) (number_literal))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (%) (number_literal))) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (binary_expression (char_literal (') (character) (')) (+) (identifier))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (binary_expression (char_literal (') (character) (')) (+) (identifier))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (assignment_expression (identifier) (+=) (number_literal)) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (binary_expression (char_literal (') (character) (')) (+) (identifier))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (assignment_expression (identifier) (+=) (number_literal)) (;)) (})))))))) (})))) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (pointer_expression (*) (identifier)) (!=) (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (-) (number_literal)) ())))) (&&) (binary_expression (pointer_expression (*) (identifier)) (!=) (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ()))))) ())) (comment) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (pointer_expression (*) (identifier))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (binary_expression (char_literal (') (character) (')) (+) (identifier))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (assignment_expression (identifier) (+=) (number_literal)) (;)) (})) (else_clause (else) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)))))) (comment) (comment) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (char_literal (') (escape_sequence) ('))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>=) (identifier)) ())) (return_statement (return) (identifier) (;)) (comment) (else_clause (else) (return_statement (return) (binary_expression (identifier) (-) (identifier)) (;)))) (}))))