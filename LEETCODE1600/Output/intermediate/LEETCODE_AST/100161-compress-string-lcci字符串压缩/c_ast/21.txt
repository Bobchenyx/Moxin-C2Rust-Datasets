(translation_unit (function_definition (type_identifier) (identifier) (compound_statement ({) (labeled_statement (statement_identifier) (:) (ERROR (type_identifier) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (identifier)) ())))) (compound_statement ({) (declaration (type_identifier) (init_declarator (identifier) (=) (string_literal (") ("))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<=) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ())))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (]))) ())) (expression_statement (update_expression (identifier) (++)) (;)) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (+) (call_expression (identifier) (argument_list (() (identifier) ()))))) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (})))) (}))) (return_statement (return) (conditional_expression (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ()))) (>=) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ())))) (?) (identifier) (:) (identifier)) (;)) (}))) (}))) (expression_statement (;)))