(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (identifier)) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (binary_expression (binary_expression (identifier) (+) (identifier)) (-) (number_literal))) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (pointer_expression (*) (identifier))) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (pointer_expression (*) (identifier))) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (identifier)) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (update_expression (identifier) (--)) (;)) (}))) (}))) (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (call_expression (identifier) (argument_list (() (binary_expression (binary_expression (number_literal) (*) (identifier)) (+) (number_literal)) ())))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (binary_expression (binary_expression (number_literal) (*) (identifier)) (+) (number_literal)) ()))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (identifier)) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (binary_expression (identifier) (+) (number_literal))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (<=) (binary_expression (identifier) (+) (identifier))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (pointer_expression (*) (identifier)) (==) (number_literal)) (||) (binary_expression (pointer_expression (*) (identifier)) (!=) (pointer_expression (*) (identifier)))) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (identifier) (++)) (])) (=) (pointer_expression (*) (identifier))) (;)) (comment) (declaration (primitive_type) (array_declarator (identifier) ([) (number_literal) (])) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (number_literal) ()))) (;)) (while_statement (while) (parenthesized_expression (() (identifier) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (call_expression (identifier) (argument_list (() (identifier) ()))) (])) (=) (binary_expression (binary_expression (identifier) (%) (number_literal)) (+) (char_literal (') (character) (')))) (;)) (expression_statement (assignment_expression (identifier) (/=) (number_literal)) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (identifier) (+) (identifier)) (,) (identifier) ()))) (;)) (expression_statement (assignment_expression (identifier) (+=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (})) (else_clause (else) (expression_statement (update_expression (identifier) (++)) (;)))) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (return_statement (return) (identifier) (;)) (else_clause (else) (return_statement (return) (identifier) (;)))) (}))))