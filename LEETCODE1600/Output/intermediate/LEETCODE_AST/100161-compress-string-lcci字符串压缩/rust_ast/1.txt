(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (type_identifier)) ())) (->) (type_identifier) (block ({) (expression_statement (if_expression (if) (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (==) (integer_literal)) (block ({) (expression_statement (return_expression (return) (identifier)) (;)) (})))) (let_declaration (let) (mutable_specifier) (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (;)) (let_declaration (let) (identifier) (=) (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (:) (primitive_type) (=) (identifier) (;)) (let_declaration (let) (mutable_specifier) (identifier) (:) (primitive_type) (=) (integer_literal) (;)) (let_declaration (let) (mutable_specifier) (identifier) (:) (type_identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (;)) (expression_statement (for_expression (for) (identifier) (in) (identifier) (block ({) (line_comment (//)) (expression_statement (if_expression (if) (binary_expression (identifier) (!=) (identifier)) (block ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (reference_expression (&) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ())))))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (reference_expression (&) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ())))))) (;)) (expression_statement (assignment_expression (identifier) (=) (integer_literal)) (;)) (})) (else_clause (else) (block ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (integer_literal))) (;)) (}))))) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (line_comment (//)) (})))) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (reference_expression (&) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ())))))) (;)) (line_comment (//)) (expression_statement (if_expression (if) (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (>=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ())))) (block ({) (expression_statement (return_expression (return) (identifier)) (;)) (})))) (expression_statement (return_expression (return) (identifier)) (;)) (}))) (}))))