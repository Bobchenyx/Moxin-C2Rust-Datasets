(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (type_identifier)) ())) (->) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (block ({) (function_item (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>)))) ())) (->) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (block ({) (expression_statement (if_expression (if) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (block ({) (macro_invocation (identifier) (!) (token_tree ([) (string_literal (") (")) (.) (identifier) (token_tree (() ())) (]))) (})) (else_clause (else) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (macro_invocation (identifier) (!) (token_tree ([) (]))) (;)) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ())))) (block ({) (expression_statement (for_expression (for) (mut_pattern (mutable_specifier) (identifier)) (in) (call_expression (field_expression (call_expression (identifier) (arguments (() (call_expression (generic_function (field_expression (call_expression (field_expression (call_expression (field_expression (call_expression (field_expression (index_expression (identifier) ([) (range_expression (..) (identifier)) (])) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() (call_expression (field_expression (index_expression (identifier) ([) (range_expression (binary_expression (identifier) (+) (integer_literal)) (..)) (])) (.) (field_identifier)) (arguments (() ()))) ()))) (.) (field_identifier)) (arguments (() (closure_expression (closure_parameters (|) (reference_pattern (&) (identifier)) (|)) (identifier)) ()))) (.) (field_identifier)) (::) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (>))) (arguments (() ()))) ()))) (.) (field_identifier)) (arguments (() ()))) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (index_expression (identifier) ([) (identifier) (])) ()))) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (identifier) ()))) (;)) (})))) (})))) (identifier) (}))))) (}))) (let_declaration (let) (identifier) (=) (call_expression (generic_function (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (::) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (>))) (arguments (() ()))) (;)) (call_expression (field_expression (call_expression (field_expression (call_expression (identifier) (arguments (() (identifier) ()))) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (}))) (}))))