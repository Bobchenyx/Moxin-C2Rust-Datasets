(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (identifier)) ()))))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (++) (identifier)) ()) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (number_literal)) (;))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (++) (identifier)) ()) (if_statement (if) (parenthesized_expression (() (binary_expression (update_expression (++) (subscript_expression (identifier) ([) (subscript_expression (identifier) ([) (identifier) (])) (]))) (>) (number_literal)) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (return_statement (return) (subscript_expression (identifier) ([) (identifier) (])) (;)) (})))) (return_statement (return) (number_literal) (;)) (}))) (comment) (comment))