(source_file (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (mutable_specifier) (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>)))) ())) (->) (primitive_type) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (unary_expression (-) (integer_literal)) (;)) (expression_statement (if_expression (if) (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (==) (integer_literal)) (block ({) (expression_statement (return_expression (return) (unary_expression (-) (integer_literal))) (;)) (})))) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ())))) (block ({) (let_declaration (let) (identifier) (=) (type_cast_expression (index_expression (identifier) ([) (identifier) (])) (as) (primitive_type)) (;)) (expression_statement (if_expression (if) (binary_expression (binary_expression (index_expression (identifier) ([) (identifier) (])) (==) (index_expression (identifier) ([) (identifier) (]))) (&&) (binary_expression (identifier) (!=) (identifier))) (block ({) (expression_statement (assignment_expression (identifier) (=) (index_expression (identifier) ([) (identifier) (]))) (;)) (expression_statement (break_expression (break)) (;)) (})) (else_clause (else) (block ({) (let_declaration (let) (identifier) (=) (index_expression (identifier) ([) (identifier) (])) (;)) (expression_statement (assignment_expression (index_expression (identifier) ([) (identifier) (])) (=) (index_expression (identifier) ([) (identifier) (]))) (;)) (expression_statement (assignment_expression (index_expression (identifier) ([) (identifier) (])) (=) (identifier)) (;)) (}))))) (})))) (identifier) (}))) (}))))