(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (preproc_if (#if) (number_literal) (
) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (||) (parenthesized_expression (() (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (number_literal)) ())) ()))) ())) (compound_statement ({) (return_statement (return) (false) (;)) (}))) (#endif)) (preproc_if (#if) (number_literal) (
) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (pointer_expression (*) (identifier)) (==) (number_literal)) (||) (binary_expression (identifier) (==) (number_literal))) ())) (return_statement (return) (false) (;))) (#endif)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (pointer_expression (*) (identifier)) (-) (number_literal))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (false)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (&&) (parenthesized_expression (() (binary_expression (identifier) (>=) (number_literal)) ()))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (==) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (true)) (;)) (break_statement (break) (;)) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (>) (identifier)) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (--)) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (})))))) (}))) (return_statement (return) (identifier) (;)) (}))))