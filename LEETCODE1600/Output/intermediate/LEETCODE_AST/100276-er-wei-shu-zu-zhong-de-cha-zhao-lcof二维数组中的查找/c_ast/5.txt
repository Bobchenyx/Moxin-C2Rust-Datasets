(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (==) (number_literal)) (||) (binary_expression (identifier) (==) (number_literal))) (||) (binary_expression (subscript_expression (identifier) ([) (number_literal) (])) (==) (number_literal))) ())) (return_statement (return) (false) (;))) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (-) (number_literal))) (;)) (comment) (while_statement (while) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (<) (identifier)) (&&) (binary_expression (identifier) (>=) (number_literal))) ())) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (==) (identifier)) ())) (return_statement (return) (true) (;)) (comment) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (>) (identifier)) ())) (expression_statement (update_expression (identifier) (--)) (;)) (comment) (else_clause (else) (expression_statement (update_expression (identifier) (++)) (;))))))) (return_statement (return) (false) (;)) (}))))