(translation_unit (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (identifier) (;)) (declaration (primitive_type) (identifier) (,) (identifier) (;)) (declaration (primitive_type) (init_declarator (array_declarator (identifier) ([) (number_literal) (])) (=) (initializer_list ({) (number_literal) (}))) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (identifier)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (number_literal)) (==) (identifier)) ())) (return_statement (return) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (number_literal))) (;))) (while_statement (while) (parenthesized_expression (() (binary_expression (char_literal (') (escape_sequence) (')) (!=) (subscript_expression (identifier) ([) (identifier) (]))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (char_literal (') (character) (')) (==) (subscript_expression (identifier) ([) (identifier) (]))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (binary_expression (identifier) (*) (number_literal)))) (;)) (for_statement (for) (() (comma_expression (assignment_expression (identifier) (=) (identifier)) (,) (assignment_expression (identifier) (=) (identifier))) (;) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (>=) (identifier)) (&&) (binary_expression (identifier) (>=) (number_literal))) ())) (;) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (char_literal (') (character) (')) (==) (subscript_expression (identifier) ([) (identifier) (]))) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (identifier) (--)) (])) (=) (char_literal (') (character) ('))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (identifier) (--)) (])) (=) (char_literal (') (character) ('))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (identifier) (--)) (])) (=) (char_literal (') (character) ('))) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (identifier) (--)) (])) (=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (})))) (expression_statement (update_expression (identifier) (--)) (;)) (}))) (return_statement (return) (identifier) (;)) (}))))