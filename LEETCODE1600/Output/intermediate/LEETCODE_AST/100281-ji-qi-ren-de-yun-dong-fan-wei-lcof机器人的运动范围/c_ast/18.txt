(translation_unit (preproc_def (#define) (identifier) (preproc_arg)) (type_definition (typedef) (struct_specifier (struct) (field_declaration_list ({) (field_declaration (primitive_type) (field_identifier) (;)) (field_declaration (primitive_type) (field_identifier) (;)) (}))) (type_identifier) (;)) (type_definition (typedef) (struct_specifier (struct) (field_declaration_list ({) (field_declaration (type_identifier) (pointer_declarator (*) (array_declarator (field_identifier) ([) (binary_expression (identifier) (*) (identifier)) (]))) (;)) (field_declaration (primitive_type) (field_identifier) (;)) (field_declaration (primitive_type) (field_identifier) (;)) (}))) (type_identifier) (;)) (declaration (type_identifier) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ())))) (;)) (declaration (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (;)) (declaration (type_identifier) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() ())))) (;)) (declaration (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (;)) (declaration (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (;)) (declaration (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (;)) (declaration (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (;)) (declaration (type_identifier) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ())))) (;)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (array_declarator (array_declarator (identifier) ([) (identifier) (])) ([) (identifier) (])) (=) (initializer_list ({) (false) (}))) (;)) (comment) (declaration (primitive_type) (identifier) (,) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (call_expression (identifier) (argument_list (() ())))) (;)) (comment) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (call_expression (identifier) (argument_list (() (number_literal) (,) (number_literal) ())))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ()))) (;)) (comment) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (field_expression (identifier) (->) (field_identifier)) (])) ([) (field_expression (identifier) (->) (field_identifier)) (])) (=) (true)) (;)) (while_statement (while) (parenthesized_expression (() (unary_expression (!) (call_expression (identifier) (argument_list (() (identifier) ())))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (comment) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (comment) (comment) (while_statement (while) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (!=) (identifier)) ())) (compound_statement ({) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (comment) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (field_expression (identifier) (->) (field_identifier)) (+) (number_literal)) (<) (identifier)) (&&) (unary_expression (!) (subscript_expression (subscript_expression (identifier) ([) (binary_expression (field_expression (identifier) (->) (field_identifier)) (+) (number_literal)) (])) ([) (field_expression (identifier) (->) (field_identifier)) (])))) ())) (compound_statement ({) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (call_expression (identifier) (argument_list (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (+) (number_literal)) (,) (field_expression (identifier) (->) (field_identifier)) ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (<=) (identifier)) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ()))) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (field_expression (identifier) (->) (field_identifier)) (])) ([) (field_expression (identifier) (->) (field_identifier)) (])) (=) (true)) (;)) (}))) (}))) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (field_expression (identifier) (->) (field_identifier)) (+) (number_literal)) (<) (identifier)) (&&) (unary_expression (!) (subscript_expression (subscript_expression (identifier) ([) (field_expression (identifier) (->) (field_identifier)) (])) ([) (binary_expression (field_expression (identifier) (->) (field_identifier)) (+) (number_literal)) (])))) ())) (compound_statement ({) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) (,) (binary_expression (field_expression (identifier) (->) (field_identifier)) (+) (number_literal)) ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (<=) (identifier)) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ()))) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (field_expression (identifier) (->) (field_identifier)) (])) ([) (field_expression (identifier) (->) (field_identifier)) (])) (=) (true)) (;)) (}))) (}))) (}))) (}))) (return_statement (return) (identifier) (;)) (}))) (comment) (function_definition (type_identifier) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ())))) (compound_statement ({) (declaration (type_identifier) (pointer_declarator (*) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (cast_expression (() (type_descriptor (type_identifier) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (sizeof_expression (sizeof) (parenthesized_expression (() (identifier) ()))) ()))))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (identifier)) (;)) (return_statement (return) (identifier) (;)) (}))) (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (return_statement (return) (binary_expression (binary_expression (binary_expression (parenthesized_expression (() (binary_expression (identifier) (/) (number_literal)) ())) (+) (parenthesized_expression (() (binary_expression (identifier) (%) (number_literal)) ()))) (+) (parenthesized_expression (() (binary_expression (identifier) (/) (number_literal)) ()))) (+) (parenthesized_expression (() (binary_expression (identifier) (%) (number_literal)) ()))) (;)) (}))) (comment) (function_definition (type_identifier) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() ())))) (compound_statement ({) (declaration (type_identifier) (pointer_declarator (*) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (cast_expression (() (type_descriptor (type_identifier) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (sizeof_expression (sizeof) (parenthesized_expression (() (identifier) ()))) ()))))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (number_literal)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (number_literal)) (;)) (return_statement (return) (identifier) (;)) (}))) (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (return_statement (return) (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (field_expression (identifier) (->) (field_identifier)) (-) (field_expression (identifier) (->) (field_identifier))) (+) (identifier)) ())) (%) (identifier)) (;)) (}))) (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (return_statement (return) (binary_expression (field_expression (identifier) (->) (field_identifier)) (==) (field_expression (identifier) (->) (field_identifier))) (;)) (}))) (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (return_statement (return) (binary_expression (binary_expression (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (+) (number_literal)) ())) (%) (identifier)) (==) (field_expression (identifier) (->) (field_identifier))) (;)) (}))) (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (+) (number_literal)) ())) (%) (identifier)) (!=) (field_expression (identifier) (->) (field_identifier))) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (field_expression (identifier) (->) (field_identifier)) (])) (=) (identifier)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (binary_expression (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (+) (number_literal)) ())) (%) (identifier))) (;)) (}))) (}))) (comment) (function_definition (type_identifier) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (!=) (field_expression (identifier) (->) (field_identifier))) ())) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (binary_expression (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (+) (number_literal)) ())) (%) (identifier))) (;)) (return_statement (return) (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) (;)) (}))) (return_statement (return) (null (NULL)) (;)) (}))))