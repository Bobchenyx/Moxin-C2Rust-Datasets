(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (primitive_type)) (,) (parameter (identifier) (:) (primitive_type)) (,) (parameter (identifier) (:) (primitive_type)) ())) (->) (primitive_type) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (>))) (=) (macro_invocation (identifier) (!) (token_tree ([) (identifier) (!) (token_tree ([) (integer_literal) (;) (identifier) (as) (primitive_type) (])) (;) (identifier) (as) (primitive_type) (]))) (;)) (line_comment (//)) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (identifier)) (block ({) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (identifier)) (block ({) (let_declaration (let) (identifier) (=) (binary_expression (binary_expression (binary_expression (binary_expression (binary_expression (binary_expression (identifier) (%) (integer_literal)) (+) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (/) (integer_literal)) ())) (%) (integer_literal))) (+) (binary_expression (identifier) (/) (integer_literal))) (+) (binary_expression (identifier) (%) (integer_literal))) (+) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (/) (integer_literal)) ())) (%) (integer_literal))) (+) (binary_expression (identifier) (/) (integer_literal))) (;)) (expression_statement (if_expression (if) (binary_expression (identifier) (<=) (identifier)) (block ({) (expression_statement (assignment_expression (index_expression (index_expression (identifier) ([) (type_cast_expression (identifier) (as) (primitive_type)) (])) ([) (type_cast_expression (identifier) (as) (primitive_type)) (])) (=) (integer_literal)) (;)) (})))) (})))) (})))) (line_comment (//)) (let_declaration (let) (mutable_specifier) (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (>))) (=) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() ()))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (expression_statement (assignment_expression (index_expression (index_expression (identifier) ([) (integer_literal) (])) ([) (integer_literal) (])) (=) (integer_literal)) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (macro_invocation (identifier) (!) (token_tree ([) (integer_literal) (,) (integer_literal) (]))) ()))) (;)) (line_comment (//)) (expression_statement (loop_expression (loop) (block ({) (expression_statement (if_expression (if) (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (==) (integer_literal)) (block ({) (expression_statement (break_expression (break)) (;)) (})))) (let_declaration (let) (identifier) (=) (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (;)) (expression_statement (if_expression (if) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (reference_expression (&) (parenthesized_expression (() (binary_expression (index_expression (identifier) ([) (integer_literal) (])) (+) (integer_literal)) ()))) (,) (reference_expression (&) (index_expression (identifier) ([) (integer_literal) (]))) (,) (reference_expression (&) (mutable_specifier) (identifier)) ()))) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (macro_invocation (identifier) (!) (token_tree ([) (identifier) (token_tree ([) (integer_literal) (])) (+) (integer_literal) (,) (identifier) (token_tree ([) (integer_literal) (])) (]))) ()))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (integer_literal))) (;)) (})))) (expression_statement (if_expression (if) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (reference_expression (&) (parenthesized_expression (() (binary_expression (index_expression (identifier) ([) (integer_literal) (])) (-) (integer_literal)) ()))) (,) (reference_expression (&) (index_expression (identifier) ([) (integer_literal) (]))) (,) (reference_expression (&) (mutable_specifier) (identifier)) ()))) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (macro_invocation (identifier) (!) (token_tree ([) (identifier) (token_tree ([) (integer_literal) (])) (-) (integer_literal) (,) (identifier) (token_tree ([) (integer_literal) (])) (]))) ()))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (integer_literal))) (;)) (})))) (expression_statement (if_expression (if) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (reference_expression (&) (index_expression (identifier) ([) (integer_literal) (]))) (,) (reference_expression (&) (parenthesized_expression (() (binary_expression (index_expression (identifier) ([) (integer_literal) (])) (+) (integer_literal)) ()))) (,) (reference_expression (&) (mutable_specifier) (identifier)) ()))) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (macro_invocation (identifier) (!) (token_tree ([) (identifier) (token_tree ([) (integer_literal) (])) (,) (identifier) (token_tree ([) (integer_literal) (])) (+) (integer_literal) (]))) ()))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (integer_literal))) (;)) (})))) (expression_statement (if_expression (if) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (reference_expression (&) (index_expression (identifier) ([) (integer_literal) (]))) (,) (reference_expression (&) (parenthesized_expression (() (binary_expression (index_expression (identifier) ([) (integer_literal) (])) (-) (integer_literal)) ()))) (,) (reference_expression (&) (mutable_specifier) (identifier)) ()))) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (macro_invocation (identifier) (!) (token_tree ([) (identifier) (token_tree ([) (integer_literal) (])) (,) (identifier) (token_tree ([) (integer_literal) (])) (-) (integer_literal) (]))) ()))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (integer_literal))) (;)) (})))) (})))) (identifier) (}))) (line_comment (//)) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (reference_type (&) (primitive_type))) (,) (parameter (identifier) (:) (reference_type (&) (primitive_type))) (,) (parameter (identifier) (:) (reference_type (&) (mutable_specifier) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (>))))) ())) (->) (primitive_type) (block ({) (expression_statement (if_expression (if) (binary_expression (binary_expression (binary_expression (binary_expression (binary_expression (unary_expression (*) (identifier)) (>=) (integer_literal)) (&&) (binary_expression (unary_expression (*) (identifier)) (>=) (integer_literal))) (&&) (binary_expression (unary_expression (*) (identifier)) (<) (type_cast_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (as) (primitive_type)))) (&&) (binary_expression (unary_expression (*) (identifier)) (<) (type_cast_expression (call_expression (field_expression (index_expression (identifier) ([) (integer_literal) (])) (.) (field_identifier)) (arguments (() ()))) (as) (primitive_type)))) (&&) (binary_expression (index_expression (index_expression (identifier) ([) (type_cast_expression (unary_expression (*) (identifier)) (as) (primitive_type)) (])) ([) (type_cast_expression (unary_expression (*) (identifier)) (as) (primitive_type)) (])) (==) (integer_literal))) (block ({) (expression_statement (assignment_expression (index_expression (index_expression (identifier) ([) (type_cast_expression (unary_expression (*) (identifier)) (as) (primitive_type)) (])) ([) (type_cast_expression (unary_expression (*) (identifier)) (as) (primitive_type)) (])) (=) (integer_literal)) (;)) (expression_statement (return_expression (return) (boolean_literal (true))) (;)) (})))) (boolean_literal (false)) (}))) (}))))