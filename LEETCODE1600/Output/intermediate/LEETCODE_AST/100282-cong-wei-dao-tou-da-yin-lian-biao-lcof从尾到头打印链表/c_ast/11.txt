(translation_unit (comment) (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (pointer_expression (*) (identifier))) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (pointer_expression (*) (identifier))) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (identifier)) (;)) (}))) (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (number_literal)) ()))))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (number_literal)) ()))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (number_literal)) (;)) (return_statement (return) (identifier) (;)) (}))) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (while_statement (while) (parenthesized_expression (() (identifier) ())) (comment) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (identifier) (++)) (])) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (}))) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (identifier)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (binary_expression (identifier) (<) (identifier)) (;) (comma_expression (update_expression (++) (identifier)) (,) (update_expression (--) (identifier))) ()) (comment) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (pointer_expression (&) (subscript_expression (identifier) ([) (identifier) (]))) (,) (pointer_expression (&) (subscript_expression (identifier) ([) (identifier) (]))) ()))) (;)) (}))) (return_statement (return) (identifier) (;)) (}))))