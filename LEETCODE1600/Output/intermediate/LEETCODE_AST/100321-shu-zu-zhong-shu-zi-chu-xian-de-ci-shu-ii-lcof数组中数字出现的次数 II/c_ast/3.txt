(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_qualifier (const)) (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (type_qualifier (const)) (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (sized_type_specifier (long)) (init_declarator (identifier) (=) (pointer_expression (*) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (identifier)))) (;)) (declaration (sized_type_specifier (long)) (init_declarator (identifier) (=) (pointer_expression (*) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (identifier)))) (;)) (return_statement (return) (binary_expression (identifier) (-) (identifier)) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (,) (identifier) ()))) (;)) (declaration (primitive_type) (identifier) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (compound_statement ({) (return_statement (return) (subscript_expression (identifier) ([) (number_literal) (])) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (number_literal) (])) (!=) (subscript_expression (identifier) ([) (number_literal) (]))) ())) (compound_statement ({) (return_statement (return) (subscript_expression (identifier) ([) (number_literal) (])) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (!=) (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (]))) ())) (compound_statement ({) (return_statement (return) (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (;)) (}))) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (binary_expression (identifier) (-) (number_literal))) (;) (assignment_expression (identifier) (+=) (number_literal)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (!=) (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (]))) (&&) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (!=) (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])))) ())) (compound_statement ({) (return_statement (return) (subscript_expression (identifier) ([) (identifier) (])) (;)) (}))) (}))) (return_statement (return) (number_literal) (;)) (}))))