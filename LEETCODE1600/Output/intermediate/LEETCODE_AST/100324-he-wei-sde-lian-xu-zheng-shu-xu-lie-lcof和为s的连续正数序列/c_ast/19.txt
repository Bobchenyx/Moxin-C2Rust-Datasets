(translation_unit (comment) (function_definition (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) ()))))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (unary_expression (!) (identifier)) (||) (unary_expression (!) (identifier))) ())) (return_statement (return) (null (NULL)) (;))) (declaration (primitive_type) (identifier) (,) (identifier) (,) (identifier) (,) (identifier) (,) (identifier) (,) (identifier) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (number_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (-) (number_literal)) ())) (/) (number_literal))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (cast_expression (() (type_descriptor (primitive_type)) ()) (call_expression (identifier) (argument_list (() (binary_expression (number_literal) (*) (identifier)) ())))) (-) (number_literal))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ())) (/) (number_literal))) (;)) (comment) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (identifier))) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*) (abstract_pointer_declarator (*)))) ()) (call_expression (identifier) (argument_list (() (binary_expression (parenthesized_expression (() (binary_expression (identifier) (-) (identifier)) ())) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()))) ()))))) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (parenthesized_expression (() (binary_expression (identifier) (-) (identifier)) ())) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ()))) ()))))) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (<=) (identifier)) ())) (compound_statement ({) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (assignment_expression (identifier) (+=) (identifier)) (;)) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (-=) (identifier)) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (pointer_expression (*) (identifier)) (])) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (identifier) (-) (identifier)) (+) (number_literal)) ())) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ()))) ()))))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<=) (binary_expression (identifier) (-) (identifier))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (pointer_expression (*) (identifier)) (])) ([) (identifier) (])) (=) (binary_expression (identifier) (+) (identifier))) (;)) (}))) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (pointer_expression (*) (identifier)) (])) (=) (binary_expression (binary_expression (identifier) (-) (identifier)) (+) (number_literal))) (;)) (comment) (expression_statement (update_expression (++) (pointer_expression (*) (identifier))) (;)) (expression_statement (assignment_expression (identifier) (-=) (binary_expression (binary_expression (identifier) (*) (number_literal)) (+) (number_literal))) (;)) (expression_statement (assignment_expression (identifier) (+=) (binary_expression (identifier) (+) (number_literal))) (;)) (expression_statement (assignment_expression (identifier) (+=) (number_literal)) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (})))))) (}))) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (identifier)) (;)) (comment) (return_statement (return) (identifier) (;)) (}))))