(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (primitive_type)) (,) (parameter (identifier) (:) (primitive_type)) ())) (->) (primitive_type) (block ({) (call_expression (field_expression (parenthesized_expression (() (range_expression (identifier) (..) (binary_expression (identifier) (+) (integer_literal))) ())) (.) (field_identifier)) (arguments (() (integer_literal) (,) (closure_expression (closure_parameters (|) (identifier) (,) (identifier) (|)) (binary_expression (identifier) (+) (identifier))) ()))) (}))) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (primitive_type)) ())) (->) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (>))) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (>))) (=) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() ()))) (;)) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (/) (integer_literal)) (+) (integer_literal)) ()))) (block ({) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (parenthesized_expression (() (binary_expression (identifier) (-) (identifier)) ()))) (block ({) (let_declaration (let) (identifier) (=) (type_cast_expression (identifier) (as) (primitive_type)) (;)) (let_declaration (let) (identifier) (=) (type_cast_expression (identifier) (as) (primitive_type)) (;)) (expression_statement (if_expression (if) (parenthesized_expression (() (binary_expression (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (identifier) (,) (binary_expression (identifier) (+) (identifier)) ()))) (==) (identifier)) ())) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (call_expression (field_expression (parenthesized_expression (() (range_expression (identifier) (..) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (+) (identifier)) (+) (integer_literal)) ()))) ())) (.) (field_identifier)) (arguments (() ()))) ()))) (;)) (})) (else_clause (else) (if_expression (if) (parenthesized_expression (() (binary_expression (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (identifier) (,) (binary_expression (identifier) (+) (identifier)) ()))) (>) (identifier)) ())) (block ({) (expression_statement (break_expression (break)) (;)) (})))))) (})))) (})))) (identifier) (}))) (}))))