(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (comment) (return_statement (return) (number_literal) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (field_expression (identifier) (->) (field_identifier)) (==) (null (NULL))) (&&) (binary_expression (field_expression (identifier) (->) (field_identifier)) (==) (null (NULL)))) ())) (comment) (return_statement (return) (identifier) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (!=) (null (NULL))) ())) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) (,) (binary_expression (identifier) (+) (number_literal)) ())))) (;))) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (!=) (null (NULL))) ())) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) (,) (binary_expression (identifier) (+) (number_literal)) ())))) (;))) (return_statement (return) (conditional_expression (binary_expression (identifier) (>) (identifier)) (?) (identifier) (:) (identifier)) (;)) (comment) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (comment) (return_statement (return) (true) (;))) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) (,) (number_literal) ())))) (,) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) (,) (number_literal) ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (call_expression (identifier) (argument_list (() (binary_expression (identifier) (-) (identifier)) ()))) (>) (number_literal)) ())) (return_statement (return) (false) (;))) (return_statement (return) (binary_expression (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) ()))) (&&) (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) ())))) (;)) (comment) (}))))