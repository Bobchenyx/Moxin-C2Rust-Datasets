(translation_unit (declaration (type_identifier) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (identifier) (;)) (declaration (struct_specifier (struct) (type_identifier) (field_declaration_list ({) (field_declaration (primitive_type) (field_identifier) (;)) (field_declaration (primitive_type) (field_identifier) (;)) (field_declaration (primitive_type) (field_identifier) (;)) (}))) (identifier) (,) (pointer_declarator (*) (identifier)) (;)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (identifier)) (;)) (declaration (type_identifier) (identifier) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (identifier)) (;)) (binary_expression (identifier) (>=) (identifier)) (;) (update_expression (identifier) (--)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) (<) (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (identifier)) (;)) (expression_statement (update_expression (identifier) (--)) (;)) (}))) (}))) (expression_statement (assignment_expression (identifier) (=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (identifier)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (-) (identifier)) (==) (binary_expression (identifier) (-) (number_literal))) ())) (return_statement (return) (;)) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (-) (identifier)) (>) (binary_expression (identifier) (-) (number_literal))) ())) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (binary_expression (identifier) (-) (number_literal)) (,) (identifier) ()))) (;)) (else_clause (else) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (identifier) (+) (number_literal)) (,) (identifier) (,) (binary_expression (binary_expression (identifier) (-) (parenthesized_expression (() (binary_expression (identifier) (-) (identifier)) ()))) (-) (number_literal)) ()))) (;)))))) (}))) (function_definition (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) ()))))) (compound_statement ({) (declaration (type_identifier) (init_declarator (identifier) (=) (cast_expression (() (type_descriptor (type_identifier)) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (parenthesized_expression (() (identifier) ()))) (*) (identifier)) ()))))) (;)) (declaration (primitive_type) (identifier) (,) (identifier) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) (=) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (number_literal) (]))) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) (=) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (number_literal) (]))) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) (=) (binary_expression (binary_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) (*) (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier))) (+) (binary_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) (*) (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier))))) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (binary_expression (identifier) (-) (number_literal)) (,) (identifier) ()))) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (identifier))) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*) (abstract_pointer_declarator (*)))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ())) (*) (identifier)) ()))))) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (identifier)) ()))))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (number_literal)) ()))))) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (number_literal) (])) (=) (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier))) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (number_literal) (])) (=) (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier))) (;)) (expression_statement (assignment_expression (subscript_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) ([) (identifier) (])) (=) (number_literal)) (;)) (}))) (return_statement (return) (identifier) (;)) (}))))