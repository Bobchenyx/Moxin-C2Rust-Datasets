(translation_unit (comment) (comment) (function_definition (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) ()))))) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (number_literal)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (compound_statement ({) (return_statement (return) (null (NULL)) (;)) (}))) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (identifier))) (=) (cast_expression (() (type_descriptor (struct_specifier (struct) (type_identifier)) (abstract_pointer_declarator (*) (abstract_pointer_declarator (*)))) ()) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (*) (sizeof_expression (sizeof) (() (type_descriptor (struct_specifier (struct) (type_identifier)) (abstract_pointer_declarator (*))) ()))) ()))))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (identifier)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (identifier))) (=) (null (NULL))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (<=) (identifier)) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (compound_statement ({) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (number_literal)) ())) (compound_statement ({) (comment) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (number_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*) (abstract_pointer_declarator (*)))) ()) (call_expression (identifier) (argument_list (() (binary_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()))) ()))))) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ()))) ()))))) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (+=) (number_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*) (abstract_pointer_declarator (*)))) ()) (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()))) ()))))) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (pointer_expression (*) (identifier)) (,) (binary_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ()))) ()))))) (;)) (})))) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (pointer_expression (*) (identifier)) (-) (number_literal)) (])) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ()))) ()))))) (;)) (expression_statement (assignment_expression (subscript_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) ([) (binary_expression (pointer_expression (*) (identifier)) (-) (number_literal)) (])) (=) (identifier)) (;)) (}))) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (identifier)) (=) (subscript_expression (identifier) ([) (update_expression (identifier) (++)) (]))) (;)) (comment) (expression_statement (update_expression (identifier) (--)) (;)) (comment) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (pointer_expression (*) (identifier)) (-) (number_literal)) (])) ([) (update_expression (++) (identifier)) (])) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (!=) (null (NULL))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (binary_expression (identifier) (-) (number_literal))) ())) (compound_statement ({) (comment) (expression_statement (assignment_expression (identifier) (=) (cast_expression (() (type_descriptor (struct_specifier (struct) (type_identifier)) (abstract_pointer_declarator (*) (abstract_pointer_declarator (*)))) ()) (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (parenthesized_expression (() (assignment_expression (identifier) (+=) (number_literal)) ())) (*) (sizeof_expression (sizeof) (() (type_descriptor (struct_specifier (struct) (type_identifier)) (abstract_pointer_declarator (*))) ()))) ()))))) (;)) (}))) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (++) (identifier)) (])) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (comment) (expression_statement (update_expression (identifier) (++)) (;)) (comment) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (!=) (null (NULL))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (binary_expression (identifier) (-) (number_literal))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (cast_expression (() (type_descriptor (struct_specifier (struct) (type_identifier)) (abstract_pointer_declarator (*) (abstract_pointer_declarator (*)))) ()) (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (parenthesized_expression (() (assignment_expression (identifier) (+=) (number_literal)) ())) (*) (sizeof_expression (sizeof) (() (type_descriptor (struct_specifier (struct) (type_identifier)) (abstract_pointer_declarator (*))) ()))) ()))))) (;)) (}))) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (++) (identifier)) (])) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (compound_statement ({) (comment) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (comment) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (}))) (}))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (expression_statement (assignment_expression (identifier) (=) (null (NULL))) (;)) (return_statement (return) (identifier) (;)) (}))))