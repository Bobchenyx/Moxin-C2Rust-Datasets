(translation_unit (type_definition (typedef) (struct_specifier (struct) (field_declaration_list ({) (field_declaration (primitive_type) (field_identifier) (;)) (field_declaration (primitive_type) (field_identifier) (;)) (field_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (field_identifier)) (;)) (}))) (type_identifier) (;)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (compound_statement ({) (return_statement (return) (number_literal) (;)) (}))) (expression_statement (update_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (++)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) (,) (identifier) ())))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) (,) (identifier) ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>) (identifier)) ())) (compound_statement ({) (return_statement (return) (binary_expression (identifier) (+) (number_literal)) (;)) (})) (else_clause (else) (compound_statement ({) (return_statement (return) (binary_expression (identifier) (+) (number_literal)) (;)) (})))) (}))) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (null (NULL))) (;)) (declaration (primitive_type) (identifier) (;)) (declaration (primitive_type) (identifier) (;)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (cast_expression (() (type_descriptor (type_identifier) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (parenthesized_expression (() (identifier) ()))) (*) (identifier)) ()))))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (compound_statement ({) (return_statement (return) (number_literal) (;)) (}))) (expression_statement (cast_expression (() (type_descriptor (primitive_type)) ()) (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (binary_expression (sizeof_expression (sizeof) (parenthesized_expression (() (identifier) ()))) (*) (identifier)) ())))) (;)) (return_statement (return) (number_literal) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (!=) (null (NULL))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (expression_statement (assignment_expression (identifier) (=) (null (NULL))) (;)) (}))) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() ()))) (compound_statement ({) (return_statement (return) (binary_expression (identifier) (-) (identifier)) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) (=) (identifier)) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (pointer_declarator (*) (identifier))))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (identifier) (;)) (declaration (primitive_type) (identifier) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*) (abstract_pointer_declarator (*)))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ())) (*) (identifier)) ()))))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (null (NULL))) ())) (compound_statement ({) (return_statement (return) (number_literal) (;)) (}))) (expression_statement (cast_expression (() (type_descriptor (primitive_type)) ()) (call_expression (identifier) (argument_list (() (pointer_expression (*) (identifier)) (,) (number_literal) (,) (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ())) (*) (identifier)) ())))) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (identifier)) ()))))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (number_literal) (])) (==) (null (NULL))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (pointer_expression (*) (identifier)) ()))) (;)) (return_statement (return) (number_literal) (;)) (}))) (expression_statement (cast_expression (() (type_descriptor (primitive_type)) ()) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (number_literal) (])) (,) (number_literal) (,) (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (identifier)) ())))) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) ([) (identifier) (])) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (identifier)) ()))))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) ([) (identifier) (])) (==) (null (NULL))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (break_statement (break) (;)) (}))) (expression_statement (cast_expression (() (type_descriptor (primitive_type)) ()) (call_expression (identifier) (argument_list (() (subscript_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) ([) (identifier) (])) (,) (number_literal) (,) (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (identifier)) ())))) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (compound_statement ({) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) ([) (identifier) (])) (!=) (null (NULL))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (subscript_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) ([) (identifier) (])) ()))) (;)) (}))) (}))) (expression_statement (call_expression (identifier) (argument_list (() (pointer_expression (*) (identifier)) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (number_literal) (])) ()))) (;)) (return_statement (return) (number_literal) (;)) (}))) (return_statement (return) (number_literal) (;)) (}))) (comment) (function_definition (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) ()))))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (pointer_expression (&) (identifier)) ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (number_literal)) (;)) (return_statement (return) (null (NULL)) (;)) (}))) (declaration (type_identifier) (identifier) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (+) (number_literal)) ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (!=) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (number_literal)) (;)) (return_statement (return) (null (NULL)) (;)) (}))) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (identifier)) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (identifier))) (=) (null (NULL))) (;)) (comment) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (pointer_expression (&) (identifier)) (,) (identifier) (,) (identifier) (,) (identifier) ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (!=) (number_literal)) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() ()))) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (number_literal)) (;)) (return_statement (return) (null (NULL)) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (number_literal) (,) (field_expression (identifier) (->) (field_identifier)) (,) (identifier) ()))) (;)) (expression_statement (cast_expression (() (type_descriptor (primitive_type)) ()) (call_expression (identifier) (argument_list (() (pointer_expression (&) (identifier)) (,) (number_literal) (,) (sizeof_expression (sizeof) (parenthesized_expression (() (identifier) ()))) ())))) (;)) (comment) (while_statement (while) (parenthesized_expression (() (binary_expression (call_expression (identifier) (argument_list (() ()))) (!=) (number_literal)) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (pointer_expression (&) (identifier)) ()))) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (field_expression (identifier) (.) (field_identifier)) (])) ([) (subscript_expression (subscript_expression (identifier) ([) (number_literal) (])) ([) (field_expression (identifier) (.) (field_identifier)) (])) (])) (=) (field_expression (identifier) (.) (field_identifier))) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (number_literal) (])) ([) (field_expression (identifier) (.) (field_identifier)) (])) (+=) (number_literal)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (field_expression (identifier) (.) (field_identifier)) (->) (field_identifier)) (!=) (null (NULL))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (field_expression (identifier) (.) (field_identifier)) (+) (number_literal)) (,) (field_expression (field_expression (field_expression (identifier) (.) (field_identifier)) (->) (field_identifier)) (->) (field_identifier)) (,) (field_expression (field_expression (identifier) (.) (field_identifier)) (->) (field_identifier)) ()))) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (field_expression (identifier) (.) (field_identifier)) (->) (field_identifier)) (!=) (null (NULL))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (field_expression (identifier) (.) (field_identifier)) (+) (number_literal)) (,) (field_expression (field_expression (field_expression (identifier) (.) (field_identifier)) (->) (field_identifier)) (->) (field_identifier)) (,) (field_expression (field_expression (identifier) (.) (field_identifier)) (->) (field_identifier)) ()))) (;)) (}))) (}))) (return_statement (return) (identifier) (;)) (}))))