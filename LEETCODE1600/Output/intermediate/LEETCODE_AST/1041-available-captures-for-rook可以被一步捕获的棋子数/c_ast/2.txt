(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (comment) (declaration (primitive_type) (identifier) (,) (identifier) (,) (init_declarator (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (binary_expression (identifier) (<) (identifier)) (&&) (unary_expression (!) (identifier))) (;) (update_expression (++) (identifier)) ()) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (binary_expression (identifier) (<) (subscript_expression (identifier) ([) (identifier) (]))) (&&) (unary_expression (!) (identifier))) (;) (update_expression (++) (identifier)) ()) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (==) (char_literal (') (character) ('))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (}))))) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (binary_expression (identifier) (-) (identifier)) (>=) (number_literal)) (;) (update_expression (++) (identifier)) ()) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (binary_expression (identifier) (-) (identifier)) (])) (!=) (char_literal (') (character) ('))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (binary_expression (identifier) (-) (identifier)) (])) (==) (char_literal (') (character) ('))) ())) (expression_statement (update_expression (++) (identifier)) (;))) (break_statement (break) (;)) (})))) (comment) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (binary_expression (identifier) (+) (identifier)) (<) (subscript_expression (identifier) ([) (identifier) (]))) (;) (update_expression (++) (identifier)) ()) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (binary_expression (identifier) (+) (identifier)) (])) (!=) (char_literal (') (character) ('))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (binary_expression (identifier) (+) (identifier)) (])) (==) (char_literal (') (character) ('))) ())) (expression_statement (update_expression (++) (identifier)) (;))) (break_statement (break) (;)) (})))) (comment) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (binary_expression (identifier) (-) (identifier)) (>=) (number_literal)) (;) (update_expression (++) (identifier)) ()) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (identifier)) (])) ([) (identifier) (])) (!=) (char_literal (') (character) ('))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (identifier)) (])) ([) (identifier) (])) (==) (char_literal (') (character) ('))) ())) (expression_statement (update_expression (++) (identifier)) (;))) (break_statement (break) (;)) (})))) (comment) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (binary_expression (identifier) (+) (identifier)) (<) (identifier)) (;) (update_expression (++) (identifier)) ()) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (identifier)) (])) ([) (identifier) (])) (!=) (char_literal (') (character) ('))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (identifier)) (])) ([) (identifier) (])) (==) (char_literal (') (character) ('))) ())) (expression_statement (update_expression (++) (identifier)) (;))) (break_statement (break) (;)) (})))) (return_statement (return) (identifier) (;)) (}))))