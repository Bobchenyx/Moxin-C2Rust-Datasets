(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (pointer_expression (*) (identifier))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (==) (char_literal (') (character) ('))) ())) (compound_statement ({) (comment) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (binary_expression (identifier) (>=) (number_literal)) (;) (update_expression (identifier) (--)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (==) (char_literal (') (character) ('))) ())) (break_statement (break) (;)) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (==) (char_literal (') (character) ('))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (break_statement (break) (;)) (}))))) (}))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (+) (number_literal))) (;)) (binary_expression (identifier) (<) (pointer_expression (*) (identifier))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (==) (char_literal (') (character) ('))) ())) (break_statement (break) (;)) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (==) (char_literal (') (character) ('))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (break_statement (break) (;)) (}))))) (}))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (binary_expression (identifier) (>=) (number_literal)) (;) (update_expression (identifier) (--)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (==) (char_literal (') (character) ('))) ())) (break_statement (break) (;)) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (==) (char_literal (') (character) ('))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (break_statement (break) (;)) (}))))) (}))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (+) (number_literal))) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (==) (char_literal (') (character) ('))) ())) (break_statement (break) (;)) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (==) (char_literal (') (character) ('))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (break_statement (break) (;)) (}))))) (}))) (return_statement (return) (identifier) (;)) (}))) (}))) (}))) (return_statement (return) (identifier) (;)) (}))) (comment) (declaration (type_identifier) (ERROR (identifier) (:) (identifier) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (ERROR (,) (identifier) (:)) (array_declarator (identifier) ([) (subscript_expression (identifier) ([) (identifier) (])) (]))) ())) (ERROR (->) (primitive_type) (:)) (identifier)) (,)) (identifier) (,) (init_declarator (identifier) (=) (number_literal)) (,) (ERROR (number_literal) (,) (number_literal)) (identifier) (,) (init_declarator (identifier) (=) (ERROR ([)) (number_literal)) (,) (ERROR (number_literal) (,) (number_literal) (,) (number_literal) (]) (,) ([) (number_literal) (,) (number_literal) (,) (number_literal) (,) (number_literal) (]) (ERROR) (identifier) (identifier) (identifier) (identifier) (array_declarator (array_declarator (function_declarator (identifier) (parameter_list (() (ERROR (number_literal)) ())) (ERROR (:) (for)) (identifier) (identifier) (call_expression (identifier) (argument_list (() (number_literal) ()))) (ERROR (:) (if)) (identifier)) ([) (identifier) (])) ([) (identifier) (])) (==) (") (identifier) (") (:)) (identifier) (,) (init_declarator (identifier) (=) (identifier)) (,) (ERROR (identifier) (ERROR) (identifier) (identifier) (identifier) (identifier)) (init_declarator (function_declarator (identifier) (parameter_list (() (ERROR (number_literal)) ())) (ERROR (:) (preproc_directive)) (identifier) (identifier)) (=) (ERROR (number_literal) (identifier) (identifier) (:)) (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (binary_expression (identifier) (*) (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (ERROR (identifier)) (=) (binary_expression (identifier) (+) (binary_expression (identifier) (*) (subscript_expression (identifier) ([) (identifier) (]))))))))) (ERROR (ERROR) (identifier) (ERROR)) (;)) (declaration (type_identifier) (identifier) (;)) (ERROR (binary_expression (binary_expression (binary_expression (binary_expression (binary_expression (identifier) (<) (ERROR (number_literal) (identifier)) (identifier)) (>=) (ERROR (number_literal) (identifier)) (identifier)) (<) (ERROR (number_literal) (identifier)) (identifier)) (>=) (ERROR (number_literal) (identifier)) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (]))) (==) (string_literal (") (string_content) ("))) (:)) (preproc_call (preproc_directive) (preproc_arg)) (ERROR (break) (identifier) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (==) (string_literal (") (string_content) ("))) (:) (identifier) (+=) (ERROR (number_literal) (identifier)) (assignment_expression (identifier) (+=) (number_literal))) (preproc_call (preproc_directive) (preproc_arg)) (return_statement (return) (identifier) (;)))