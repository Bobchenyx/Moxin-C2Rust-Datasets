(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (>)))) ())) (->) (primitive_type) (block ({) (let_declaration (let) (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (=) (macro_invocation (identifier) (!) (token_tree ([) (-) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (]))) (;)) (let_declaration (let) (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (=) (macro_invocation (identifier) (!) (token_tree ([) (integer_literal) (,) (integer_literal) (,) (-) (integer_literal) (,) (integer_literal) (]))) (;)) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (integer_literal)) (block ({) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (integer_literal)) (block ({) (expression_statement (if_expression (if) (binary_expression (index_expression (index_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (==) (char_literal)) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (integer_literal)) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (type_cast_expression (identifier) (as) (primitive_type)) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (type_cast_expression (identifier) (as) (primitive_type)) (;)) (expression_statement (loop_expression (loop) (block ({) (expression_statement (compound_assignment_expr (identifier) (+=) (index_expression (identifier) ([) (identifier) (]))) (;)) (expression_statement (compound_assignment_expr (identifier) (+=) (index_expression (identifier) ([) (identifier) (]))) (;)) (expression_statement (if_expression (if) (binary_expression (binary_expression (binary_expression (binary_expression (binary_expression (identifier) (<) (integer_literal)) (||) (binary_expression (identifier) (>=) (integer_literal))) (||) (binary_expression (identifier) (<) (integer_literal))) (||) (binary_expression (identifier) (>=) (integer_literal))) (||) (binary_expression (index_expression (index_expression (identifier) ([) (type_cast_expression (identifier) (as) (primitive_type)) (])) ([) (type_cast_expression (identifier) (as) (primitive_type)) (])) (==) (char_literal))) (block ({) (expression_statement (break_expression (break)) (;)) (})))) (expression_statement (if_expression (if) (binary_expression (index_expression (index_expression (identifier) ([) (type_cast_expression (identifier) (as) (primitive_type)) (])) ([) (type_cast_expression (identifier) (as) (primitive_type)) (])) (==) (char_literal)) (block ({) (expression_statement (compound_assignment_expr (identifier) (+=) (integer_literal)) (;)) (expression_statement (break_expression (break)) (;)) (})))) (})))) (})))) (expression_statement (return_expression (return) (identifier)) (;)) (})))) (})))) (})))) (expression_statement (return_expression (return) (integer_literal)) (;)) (}))) (}))))