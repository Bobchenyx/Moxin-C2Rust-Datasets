(source_file (const_item (const) (identifier) (:) (primitive_type) (=) (type_cast_expression (char_literal) (as) (primitive_type)) (;)) (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>)))) ())) (->) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (macro_invocation (identifier) (!) (token_tree ([) (]))) (;)) (expression_statement (for_expression (for) (identifier) (in) (identifier) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (array_expression ([) (integer_literal) (;) (integer_literal) (])) (;)) (expression_statement (for_expression (for) (identifier) (in) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (block ({) (let_declaration (let) (identifier) (=) (type_cast_expression (parenthesized_expression (() (binary_expression (type_cast_expression (identifier) (as) (primitive_type)) (-) (identifier)) ())) (as) (primitive_type)) (;)) (expression_statement (compound_assignment_expr (index_expression (identifier) ([) (identifier) (])) (+=) (integer_literal)) (;)) (})))) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) ()))) (;)) (})))) (let_declaration (let) (mutable_specifier) (identifier) (=) (macro_invocation (identifier) (!) (token_tree ([) (]))) (;)) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (integer_literal)) (block ({) (let_declaration (let) (identifier) (=) (call_expression (field_expression (call_expression (field_expression (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() (closure_expression (closure_parameters (|) (reference_pattern (&) (identifier)) (|)) (index_expression (identifier) ([) (identifier) (]))) ()))) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (;)) (expression_statement (for_expression (for) (_) (in) (range_expression (integer_literal) (..) (identifier)) (block ({) (let_declaration (let) (identifier) (=) (type_cast_expression (identifier) (as) (primitive_type)) (;)) (let_declaration (let) (identifier) (=) (call_expression (field_expression (parenthesized_expression (() (type_cast_expression (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ())) (as) (primitive_type)) ())) (.) (field_identifier)) (arguments (() ()))) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) ()))) (;)) (})))) (})))) (identifier) (}))) (}))))