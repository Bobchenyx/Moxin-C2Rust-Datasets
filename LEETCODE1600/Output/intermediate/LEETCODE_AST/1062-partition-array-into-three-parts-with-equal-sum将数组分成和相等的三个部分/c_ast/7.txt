(translation_unit (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (subscript_expression (identifier) ([) (identifier) (]))) (,) (init_declarator (identifier) (=) (subscript_expression (identifier) ([) (identifier) (]))) (,) (init_declarator (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (identifier) (;) (binary_expression (identifier) (<=) (identifier)) (;) (update_expression (identifier) (++)) ()) (expression_statement (assignment_expression (identifier) (+=) (subscript_expression (identifier) ([) (identifier) (]))) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (%) (number_literal)) (!=) (number_literal)) ())) (comment) (return_statement (return) (false) (;))) (expression_statement (assignment_expression (identifier) (/=) (number_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (-) (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ()))) (>) (number_literal)) (&&) (binary_expression (identifier) (!=) (identifier))) ())) (expression_statement (assignment_expression (identifier) (+=) (subscript_expression (identifier) ([) (update_expression (++) (identifier)) (]))) (;))) (while_statement (while) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (parenthesized_expression (() (binary_expression (identifier) (-) (number_literal)) ())) (-) (identifier)) (>) (number_literal)) (&) (binary_expression (identifier) (!=) (identifier))) ())) (expression_statement (assignment_expression (identifier) (+=) (subscript_expression (identifier) ([) (update_expression (--) (identifier)) (]))) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (identifier)) (&&) (binary_expression (identifier) (==) (identifier))) ())) (return_statement (return) (true) (;))) (return_statement (return) (false) (;)) (}))))