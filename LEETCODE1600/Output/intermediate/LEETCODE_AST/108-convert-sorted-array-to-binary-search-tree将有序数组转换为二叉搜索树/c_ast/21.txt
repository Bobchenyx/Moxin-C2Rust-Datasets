(translation_unit (function_definition (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ())))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (return_statement (return) (number_literal) (;))) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (identifier)) (=) (call_expression (identifier) (argument_list (() (sizeof_expression (sizeof) (() (type_descriptor (struct_specifier (struct) (type_identifier))) ())) ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<=) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (number_literal)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (number_literal)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (subscript_expression (identifier) ([) (number_literal) (]))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (compound_statement ({) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (identifier)) (=) (call_expression (identifier) (argument_list (() (sizeof_expression (sizeof) (() (type_descriptor (struct_specifier (struct) (type_identifier))) ())) ())))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (number_literal)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (subscript_expression (identifier) ([) (number_literal) (]))) (;)) (return_statement (return) (identifier) (;)) (}))) (})) (else_clause (else) (compound_statement ({) (declaration (primitive_type) (identifier) (;)) (declaration (primitive_type) (array_declarator (identifier) ([) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (-) (number_literal)) ())) (/) (number_literal)) (])) (;)) (declaration (primitive_type) (array_declarator (identifier) ([) (binary_expression (identifier) (/) (number_literal)) (])) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (-) (number_literal)) ())) (/) (number_literal))) (;) (update_expression (identifier) (++)) ()) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (subscript_expression (identifier) ([) (identifier) (]))) (;))) (for_statement (for) (() (assignment_expression (identifier) (=) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ())) (/) (number_literal))) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ())) (/) (number_literal))) (])) (=) (subscript_expression (identifier) ([) (identifier) (]))) (;))) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (subscript_expression (identifier) ([) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (-) (number_literal)) ())) (/) (number_literal)) (]))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (-) (number_literal)) ())) (/) (number_literal)) ())))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (identifier) (/) (number_literal)) ())))) (;)) (})))) (return_statement (return) (identifier) (;)) (}))))