(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (number_literal)) (||) (binary_expression (identifier) (==) (number_literal))) ())) (return_statement (return) (number_literal) (;))) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (pointer_expression (&) (subscript_expression (identifier) ([) (number_literal) (])))) (,) (init_declarator (pointer_declarator (*) (identifier)) (=) (pointer_expression (&) (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])))) (,) (init_declarator (identifier) (=) (conditional_expression (binary_expression (pointer_expression (*) (identifier)) (<) (pointer_expression (*) (identifier))) (?) (pointer_expression (*) (identifier)) (:) (pointer_expression (*) (identifier)))) (,) (init_declarator (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (,) (init_declarator (identifier) (=) (binary_expression (identifier) (*) (identifier))) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (-) (number_literal)) ())) (compound_statement ({) (expression_statement (update_expression (--) (identifier)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (pointer_expression (*) (identifier))) ())) (compound_statement ({) (expression_statement (update_expression (++) (identifier)) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (update_expression (--) (identifier)) (;)) (})))) (expression_statement (assignment_expression (identifier) (=) (conditional_expression (binary_expression (pointer_expression (*) (identifier)) (<) (pointer_expression (*) (identifier))) (?) (pointer_expression (*) (identifier)) (:) (pointer_expression (*) (identifier)))) (;)) (expression_statement (assignment_expression (identifier) (=) (conditional_expression (binary_expression (identifier) (>) (binary_expression (identifier) (*) (identifier))) (?) (identifier) (:) (binary_expression (identifier) (*) (identifier)))) (;)) (expression_statement (update_expression (--) (identifier)) (;)) (}))) (return_statement (return) (identifier) (;)) (}))))