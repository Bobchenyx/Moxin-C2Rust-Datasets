(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>)))) (,) (parameter (identifier) (:) (type_identifier)) ())) (->) (primitive_type) (block ({) (use_declaration (use) (scoped_identifier (scoped_identifier (identifier) (::) (identifier)) (::) (identifier)) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() ()))) (;)) (expression_statement (for_expression (for) (identifier) (in) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (block ({) (let_declaration (let) (identifier) (=) (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (identifier) ()))) (.) (field_identifier)) (arguments (() (integer_literal) ()))) (;)) (expression_statement (compound_assignment_expr (unary_expression (*) (identifier)) (+=) (integer_literal)) (;)) (})))) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (let_declaration (let) (mutable_specifier) (identifier) (:) (primitive_type) (;)) (expression_statement (for_expression (for) (identifier) (in) (identifier) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (;)) (expression_statement (assignment_expression (identifier) (=) (boolean_literal (true))) (;)) (expression_statement (for_expression (for) (identifier) (in) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (block ({) (expression_statement (match_expression (match) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (identifier) ()))) (match_block ({) (match_arm (match_pattern (tuple_struct_pattern (identifier) (() (identifier) ())) (if) (binary_expression (unary_expression (*) (identifier)) (>) (integer_literal))) (=>) (compound_assignment_expr (unary_expression (*) (identifier)) (-=) (integer_literal)) (,)) (match_arm (match_pattern (_)) (=>) (block ({) (expression_statement (assignment_expression (identifier) (=) (boolean_literal (false))) (;)) (break_expression (break)) (}))) (})))) (})))) (expression_statement (if_expression (if) (identifier) (block ({) (expression_statement (compound_assignment_expr (identifier) (+=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ())))) (;)) (})))) (})))) (type_cast_expression (identifier) (as) (primitive_type)) (}))) (}))))