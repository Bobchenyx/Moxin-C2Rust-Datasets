(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (call_expression (identifier) (argument_list (() (number_literal) ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (compound_statement ({) (return_statement (return) (number_literal) (;)) (}))) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (call_expression (identifier) (argument_list (() (binary_expression (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (identifier)) (*) (identifier)) ())))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (binary_expression (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (identifier)) (*) (identifier)) ()))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ()))) ()))) (;)) (while_statement (while) (parenthesized_expression (() (unary_expression (!) (call_expression (identifier) (argument_list (() (identifier) ())))) ())) (compound_statement ({) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (binary_expression (field_expression (identifier) (->) (field_identifier)) (*) (identifier)) (+) (field_expression (identifier) (->) (field_identifier))) (])) (=) (number_literal)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (field_expression (identifier) (->) (field_identifier))) ()))) (+) (field_expression (identifier) (->) (field_identifier))) ()))) (==) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (field_expression (identifier) (->) (field_identifier)) (,) (field_expression (identifier) (->) (field_identifier)) ())))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (break_statement (break) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (field_expression (identifier) (->) (field_identifier)) (-) (number_literal)) (>=) (number_literal)) (&&) (binary_expression (subscript_expression (identifier) ([) (binary_expression (binary_expression (binary_expression (field_expression (identifier) (->) (field_identifier)) (*) (identifier)) (+) (field_expression (identifier) (->) (field_identifier))) (-) (number_literal)) (])) (!=) (number_literal))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) (,) (binary_expression (field_expression (identifier) (->) (field_identifier)) (-) (number_literal)) ()))) ()))) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (field_expression (identifier) (->) (field_identifier)) (+) (number_literal)) (<) (identifier)) (&&) (binary_expression (subscript_expression (identifier) ([) (binary_expression (binary_expression (binary_expression (field_expression (identifier) (->) (field_identifier)) (*) (identifier)) (+) (field_expression (identifier) (->) (field_identifier))) (+) (number_literal)) (])) (!=) (number_literal))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) (,) (binary_expression (field_expression (identifier) (->) (field_identifier)) (+) (number_literal)) ()))) ()))) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (field_expression (identifier) (->) (field_identifier)) (-) (number_literal)) (>=) (number_literal)) (&&) (binary_expression (subscript_expression (identifier) ([) (binary_expression (binary_expression (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (-) (number_literal)) ())) (*) (identifier)) (+) (field_expression (identifier) (->) (field_identifier))) (])) (!=) (number_literal))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (call_expression (identifier) (argument_list (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (-) (number_literal)) (,) (field_expression (identifier) (->) (field_identifier)) ()))) ()))) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (field_expression (identifier) (->) (field_identifier)) (+) (number_literal)) (<) (identifier)) (&&) (binary_expression (subscript_expression (identifier) ([) (binary_expression (binary_expression (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (+) (number_literal)) ())) (*) (identifier)) (+) (field_expression (identifier) (->) (field_identifier))) (])) (!=) (number_literal))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (call_expression (identifier) (argument_list (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (+) (number_literal)) (,) (field_expression (identifier) (->) (field_identifier)) ()))) ()))) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) ()))) ())) (compound_statement ({) (return_statement (return) (number_literal) (;)) (}))) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (++) (identifier)) ()) (compound_statement ({) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (subscript_expression (identifier) ([) (identifier) (]))) (;) (update_expression (++) (identifier)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (+) (identifier)) ()))) (==) (number_literal)) ())) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) (,) (identifier) ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (}))) (}))) (}))) (}))) (return_statement (return) (identifier) (;)) (}))))