(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (primitive_type)) ())) (->) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (>))) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (type_cast_expression (identifier) (as) (primitive_type)) ()))) (;)) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (type_cast_expression (identifier) (as) (primitive_type))) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (=) (call_expression (field_expression (call_expression (field_expression (parenthesized_expression (() (range_expression (integer_literal) (..) (binary_expression (identifier) (+) (integer_literal))) ())) (.) (field_identifier)) (arguments (() (closure_expression (closure_parameters (|) (_) (|)) (integer_literal)) ()))) (.) (field_identifier)) (arguments (() ()))) (;)) (expression_statement (if_expression (if) (binary_expression (identifier) (>) (integer_literal)) (block ({) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (identifier)) (block ({) (let_declaration (let) (identifier) (:) (reference_type (&) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>)))) (=) (reference_expression (&) (index_expression (identifier) ([) (binary_expression (identifier) (-) (integer_literal)) (]))) (;)) (expression_statement (assignment_expression (index_expression (identifier) ([) (identifier) (])) (=) (binary_expression (index_expression (identifier) ([) (binary_expression (identifier) (-) (integer_literal)) (])) (+) (index_expression (identifier) ([) (identifier) (])))) (;)) (})))) (})))) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (identifier) ()))) (;)) (})))) (identifier) (}))) (}))))