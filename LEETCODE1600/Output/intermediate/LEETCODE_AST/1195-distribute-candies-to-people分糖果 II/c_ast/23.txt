(translation_unit (comment) (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (identifier)) ()))))) (;)) (expression_statement (cast_expression (() (type_descriptor (primitive_type)) ()) (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (identifier)) ())))) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (identifier)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (cast_expression (() (type_descriptor (primitive_type)) ()) (parenthesized_expression (() (binary_expression (call_expression (identifier) (argument_list (() (binary_expression (binary_expression (number_literal) (*) (cast_expression (() (type_descriptor (sized_type_specifier (long) (long))) ()) (identifier))) (+) (number_literal)) ()))) (-) (number_literal)) ()))) (/) (parenthesized_expression (() (binary_expression (number_literal) (*) (identifier)) ())))) (;)) (declaration (primitive_type) (identifier) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (binary_expression (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (binary_expression (identifier) (+) (number_literal)) (+) (identifier)) (+) (number_literal)) (+) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (-) (number_literal)) ())) (*) (identifier))) ())) (*) (identifier)) (/) (number_literal))) (;)) (}))) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (-) (binary_expression (binary_expression (binary_expression (identifier) (*) (identifier)) (*) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (*) (identifier)) (+) (number_literal)) ()))) (/) (number_literal)))) (;)) (if_statement (if) (parenthesized_expression (() (unary_expression (!) (identifier)) ())) (return_statement (return) (identifier) (;))) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>) (binary_expression (binary_expression (binary_expression (identifier) (*) (identifier)) (+) (identifier)) (+) (number_literal))) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (+=) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (*) (identifier)) (+) (identifier)) (+) (number_literal)) ()))) (;)) (expression_statement (assignment_expression (identifier) (-=) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (*) (identifier)) (+) (identifier)) (+) (number_literal)) ()))) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (+=) (identifier)) (;)) (break_statement (break) (;)) (})))) (}))) (return_statement (return) (identifier) (;)) (}))))