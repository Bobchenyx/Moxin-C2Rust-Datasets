(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (mutable_specifier) (identifier) (:) (primitive_type)) (,) (parameter (identifier) (:) (primitive_type)) ())) (->) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (block ({) (function_item (fn) (identifier) (parameters (() (parameter (identifier) (:) (primitive_type)) (,) (parameter (identifier) (:) (primitive_type)) ())) (->) (primitive_type) (block ({) (expression_statement (if_expression (if) (parenthesized_expression (() (binary_expression (identifier) (<=) (identifier)) ())) (block ({) (identifier) (})) (else_clause (else) (block ({) (identifier) (}))))) (}))) (let_declaration (let) (tuple_pattern (() (mut_pattern (mutable_specifier) (identifier)) (,) (identifier) (,) (identifier) ())) (=) (tuple_expression (() (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() ()))) (,) (binary_expression (identifier) (*) (identifier)) (,) (binary_expression (binary_expression (identifier) (*) (parenthesized_expression (() (binary_expression (identifier) (+) (integer_literal)) ()))) (/) (integer_literal)) ())) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (expression_statement (while_expression (while) (parenthesized_expression (() (binary_expression (identifier) (>=) (binary_expression (binary_expression (identifier) (*) (identifier)) (+) (identifier))) ())) (block ({) (expression_statement (compound_assignment_expr (identifier) (-=) (binary_expression (binary_expression (identifier) (*) (identifier)) (+) (identifier))) (;)) (expression_statement (compound_assignment_expr (identifier) (+=) (integer_literal)) (;)) (})))) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (identifier)) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (binary_expression (binary_expression (binary_expression (identifier) (*) (parenthesized_expression (() (binary_expression (identifier) (+) (integer_literal)) ()))) (+) (binary_expression (binary_expression (binary_expression (identifier) (*) (parenthesized_expression (() (binary_expression (identifier) (-) (integer_literal)) ()))) (/) (integer_literal)) (*) (identifier))) (-) (call_expression (identifier) (arguments (() (unary_expression (-) (call_expression (identifier) (arguments (() (binary_expression (binary_expression (binary_expression (identifier) (*) (identifier)) (+) (identifier)) (+) (integer_literal)) (,) (identifier) ())))) (,) (integer_literal) ())))) ()))) (;)) (expression_statement (compound_assignment_expr (identifier) (-=) (binary_expression (binary_expression (binary_expression (identifier) (*) (identifier)) (+) (identifier)) (+) (integer_literal))) (;)) (})))) (identifier) (}))) (}))))