(translation_unit (preproc_include (#include) (system_lib_string)) (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ())))) (compound_statement ({) (switch_statement (switch) (parenthesized_expression (() (identifier) ())) (compound_statement ({) (case_statement (case) (number_literal) (:) (compound_statement ({) (return_statement (return) (string_literal (") (string_content) (")) (;)) (})) (break_statement (break) (;))) (case_statement (case) (number_literal) (:) (compound_statement ({) (return_statement (return) (string_literal (") (string_content) (")) (;)) (})) (break_statement (break) (;))) (case_statement (case) (number_literal) (:) (compound_statement ({) (return_statement (return) (string_literal (") (string_content) (")) (;)) (})) (break_statement (break) (;))) (case_statement (case) (number_literal) (:) (compound_statement ({) (return_statement (return) (string_literal (") (string_content) (")) (;)) (})) (break_statement (break) (;))) (case_statement (case) (number_literal) (:) (compound_statement ({) (return_statement (return) (string_literal (") (string_content) (")) (;)) (})) (break_statement (break) (;))) (case_statement (case) (number_literal) (:) (compound_statement ({) (return_statement (return) (string_literal (") (string_content) (")) (;)) (})) (break_statement (break) (;))) (case_statement (case) (number_literal) (:) (compound_statement ({) (return_statement (return) (string_literal (") (string_content) (")) (;)) (})) (break_statement (break) (;))) (case_statement (case) (number_literal) (:) (compound_statement ({) (return_statement (return) (string_literal (") (string_content) (")) (;)) (})) (break_statement (break) (;))) (case_statement (case) (number_literal) (:) (compound_statement ({) (return_statement (return) (string_literal (") (string_content) (")) (;)) (})) (break_statement (break) (;))) (case_statement (case) (number_literal) (:) (compound_statement ({) (return_statement (return) (string_literal (") (string_content) (")) (;)) (})) (break_statement (break) (;))) (case_statement (case) (number_literal) (:) (compound_statement ({) (return_statement (return) (string_literal (") (string_content) (")) (;)) (})) (break_statement (break) (;))) (case_statement (case) (number_literal) (:) (compound_statement ({) (return_statement (return) (string_literal (") (string_content) (")) (;)) (})) (break_statement (break) (;))) (case_statement (case) (number_literal) (:) (compound_statement ({) (return_statement (return) (string_literal (") (string_content) (")) (;)) (}))) (case_statement (default) (:) (return_statement (return) (string_literal (") (string_content) (")) (;)) (break_statement (break) (;))) (}))) (}))) (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ())))) (compound_statement ({) (declaration (primitive_type) (init_declarator (array_declarator (identifier) ([) (])) (=) (initializer_list ({) (number_literal) (,) (number_literal) (,) (number_literal) (,) (number_literal) (,) (number_literal) (,) (number_literal) (,) (number_literal) (,) (number_literal) (,) (number_literal) (,) (number_literal) (,) (number_literal) (,) (number_literal) (,) (number_literal) (}))) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (call_expression (identifier) (argument_list (() (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (,) (number_literal) ())))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (number_literal)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (>=) (subscript_expression (identifier) ([) (identifier) (]))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (-) (subscript_expression (identifier) ([) (identifier) (])))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ())))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ()))) (;)) (}))) (}))) (return_statement (return) (identifier) (;)) (}))))