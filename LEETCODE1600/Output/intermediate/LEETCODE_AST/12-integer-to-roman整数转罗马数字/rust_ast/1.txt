(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (primitive_type)) ())) (->) (type_identifier) (block ({) (let_declaration (let) (identifier) (:) (array_type ([) (primitive_type) (;) (integer_literal) (])) (=) (array_expression ([) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (])) (;)) (let_declaration (let) (identifier) (:) (array_type ([) (reference_type (&) (primitive_type)) (;) (integer_literal) (])) (=) (array_expression ([) (string_literal (") (string_content) (")) (,) (string_literal (") (string_content) (")) (,) (string_literal (") (string_content) (")) (,) (string_literal (") (string_content) (")) (,) (string_literal (") (string_content) (")) (,) (string_literal (") (string_content) (")) (,) (string_literal (") (string_content) (")) (,) (string_literal (") (string_content) (")) (,) (string_literal (") (string_content) (")) (,) (string_literal (") (string_content) (")) (,) (string_literal (") (string_content) (")) (,) (string_literal (") (string_content) (")) (,) (string_literal (") (string_content) (")) (])) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() ()))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (identifier) (;)) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (integer_literal)) (block ({) (expression_statement (while_expression (while) (binary_expression (identifier) (>=) (index_expression (identifier) ([) (identifier) (]))) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (index_expression (identifier) ([) (identifier) (])) ()))) (;)) (expression_statement (compound_assignment_expr (identifier) (-=) (index_expression (identifier) ([) (identifier) (]))) (;)) (})))) (})))) (identifier) (}))) (}))))