(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (identifier))) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*) (abstract_pointer_declarator (*)))) ()) (call_expression (identifier) (argument_list (() (identifier) (,) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*) (abstract_pointer_declarator (*)))) ())) ()))))) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) (,) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) ()))))) (;)) (}))) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) (,) (number_literal) (,) (number_literal) (,) (subscript_expression (subscript_expression (identifier) ([) (number_literal) (])) ([) (number_literal) (])) (,) (identifier) ())))) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ()))) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (!=) (number_literal)) ())) (compound_statement ({) (return_statement (return) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (binary_expression (identifier) (-) (number_literal))) ())) (compound_statement ({) (return_statement (return) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (;)) (}))) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) (,) (binary_expression (identifier) (+) (number_literal)) (,) (identifier) (,) (binary_expression (identifier) (+) (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) ([) (identifier) (]))) (,) (identifier) ())))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) (,) (binary_expression (identifier) (+) (number_literal)) (,) (binary_expression (identifier) (+) (number_literal)) (,) (binary_expression (identifier) (+) (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) ([) (binary_expression (identifier) (+) (number_literal)) (]))) (,) (identifier) ())))) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (=) (conditional_expression (binary_expression (identifier) (>) (identifier)) (?) (binary_expression (identifier) (+) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (]))) (:) (binary_expression (identifier) (+) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (]))))) (;)) (return_statement (return) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (;)) (}))))