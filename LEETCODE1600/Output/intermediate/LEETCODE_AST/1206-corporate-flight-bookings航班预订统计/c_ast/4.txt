(translation_unit (comment) (preproc_def (#define) (identifier) (preproc_arg)) (comment) (preproc_def (#define) (identifier) (preproc_arg)) (type_definition (typedef) (struct_specifier (struct) (field_declaration_list ({) (field_declaration (type_identifier) (field_identifier) (;)) (comment) (field_declaration (type_identifier) (field_identifier) (;)) (field_declaration (primitive_type) (field_identifier) (;)) (field_declaration (primitive_type) (field_identifier) (;)) (}))) (type_identifier) (;)) (type_definition (typedef) (struct_specifier (struct) (field_declaration_list ({) (field_declaration (type_identifier) (array_declarator (field_identifier) ([) (identifier) (])) (;)) (}))) (type_identifier) (;)) (comment) (comment) (comment) (preproc_function_def (#define) (identifier) (preproc_params (() (identifier) (,) (identifier) (,) (identifier) (,) (identifier) (,) (identifier) ())) (preproc_arg)) (preproc_function_def (#define) (identifier) (preproc_params (() (identifier) (,) (identifier) (,) (identifier) (,) (identifier) ())) (preproc_arg)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (sizeof_expression (sizeof) (parenthesized_expression (() (identifier) ()))) ()))) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (expression_statement (assignment_expression (field_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) (.) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) (.) (field_identifier)) (=) (identifier)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (identifier)) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (compound_statement ({) (expression_statement (assignment_expression (field_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) (.) (field_identifier)) (=) (number_literal)) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (field_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) (.) (field_identifier)) (=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (})))) (return_statement (return) (;)) (}))) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ())) (>>) (number_literal))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (binary_expression (identifier) (<<) (number_literal)) (,) (identifier) (,) (identifier) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (binary_expression (binary_expression (identifier) (<<) (number_literal)) (|) (number_literal)) (,) (binary_expression (identifier) (+) (number_literal)) (,) (identifier) ()))) (;)) (comment) (return_statement (return) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (type_identifier) (identifier)) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (<=) (field_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) (.) (field_identifier))) (&&) (binary_expression (field_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) (.) (field_identifier)) (<=) (identifier))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (field_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) (.) (field_identifier)) (,) (field_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) (.) (field_identifier)) (,) (identifier) ()))) (;)) (return_statement (return) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (field_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) (.) (field_identifier)) (,) (field_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) (.) (field_identifier)) ()))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (binary_expression (identifier) (<<) (number_literal)) (])) (.) (field_identifier)) (>=) (identifier)) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (identifier) (<<) (number_literal)) (,) (identifier) (,) (identifier) (,) (identifier) ()))) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (binary_expression (binary_expression (identifier) (<<) (number_literal)) (|) (number_literal)) (])) (.) (field_identifier)) (<=) (identifier)) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (binary_expression (identifier) (<<) (number_literal)) (|) (number_literal)) (,) (identifier) (,) (identifier) (,) (identifier) ()))) (;)) (}))) (comment) (return_statement (return) (;)) (}))) (function_definition (type_identifier) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (identifier) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (<=) (field_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) (.) (field_identifier))) (&&) (binary_expression (field_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) (.) (field_identifier)) (<=) (identifier))) ())) (compound_statement ({) (return_statement (return) (field_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) (.) (field_identifier)) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (field_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) (.) (field_identifier)) (,) (field_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) (.) (field_identifier)) ()))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (binary_expression (identifier) (<<) (number_literal)) (])) (.) (field_identifier)) (>=) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (identifier) (<<) (number_literal)) (,) (identifier) (,) (identifier) ())))) (;)) (expression_statement (assignment_expression (identifier) (+=) (identifier)) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (binary_expression (binary_expression (identifier) (<<) (number_literal)) (|) (number_literal)) (])) (.) (field_identifier)) (<=) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (binary_expression (identifier) (<<) (number_literal)) (|) (number_literal)) (,) (identifier) (,) (identifier) ())))) (;)) (expression_statement (assignment_expression (identifier) (+=) (identifier)) (;)) (}))) (return_statement (return) (identifier) (;)) (}))) (preproc_function_def (#define) (identifier) (preproc_params (() (identifier) (,) (identifier) (,) (identifier) (,) (identifier) ())) (preproc_arg)) (preproc_function_def (#define) (identifier) (preproc_params (() (identifier) (,) (identifier) (,) (identifier) (,) (identifier) ())) (preproc_arg)) (preproc_function_def (#define) (identifier) (preproc_params (() (identifier) (,) (identifier) (,) (identifier) ())) (preproc_arg)) (declaration (type_identifier) (identifier) (;)) (comment) (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (==) (null (NULL))) (||) (binary_expression (identifier) (==) (number_literal))) (||) (binary_expression (identifier) (==) (null (NULL)))) ())) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (number_literal)) (;)) (return_statement (return) (null (NULL)) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (pointer_expression (&) (identifier)) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (pointer_expression (&) (identifier)) (,) (null (NULL)) (,) (number_literal) (,) (identifier) ()))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (++) (identifier)) ()) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (pointer_expression (&) (identifier)) (,) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (number_literal) (])) (,) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (number_literal) (])) (,) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (number_literal) (])) ()))) (;)) (}))) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (identifier)) ()))))) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (identifier)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<=) (identifier)) (;) (update_expression (++) (identifier)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (=) (call_expression (identifier) (argument_list (() (pointer_expression (&) (identifier)) (,) (identifier) (,) (identifier) ())))) (;)) (}))) (return_statement (return) (identifier) (;)) (}))))