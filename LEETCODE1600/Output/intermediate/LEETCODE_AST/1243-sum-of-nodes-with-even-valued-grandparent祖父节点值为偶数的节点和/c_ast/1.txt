(translation_unit (comment) (type_definition (typedef) (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (type_identifier)) (;)) (preproc_def (#define) (identifier) (preproc_arg)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (compound_statement ({) (return_statement (return) (number_literal) (;)) (comment) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (!=) (null (NULL))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (field_expression (identifier) (->) (field_identifier)) (->) (field_identifier)) (!=) (null (NULL))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (field_expression (field_expression (field_expression (identifier) (->) (field_identifier)) (->) (field_identifier)) (->) (field_identifier))) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (field_expression (identifier) (->) (field_identifier)) (->) (field_identifier)) (!=) (null (NULL))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (field_expression (field_expression (field_expression (identifier) (->) (field_identifier)) (->) (field_identifier)) (->) (field_identifier))) (;)) (}))) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (!=) (null (NULL))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (field_expression (identifier) (->) (field_identifier)) (->) (field_identifier)) (!=) (null (NULL))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (field_expression (field_expression (field_expression (identifier) (->) (field_identifier)) (->) (field_identifier)) (->) (field_identifier))) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (field_expression (identifier) (->) (field_identifier)) (->) (field_identifier)) (!=) (null (NULL))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (field_expression (field_expression (field_expression (identifier) (->) (field_identifier)) (->) (field_identifier)) (->) (field_identifier))) (;)) (}))) (}))) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (compound_statement ({) (return_statement (return) (number_literal) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (field_expression (identifier) (->) (field_identifier)) (%) (number_literal)) (==) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (}))) (expression_statement (assignment_expression (identifier) (+=) (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) ())))) (;)) (expression_statement (assignment_expression (identifier) (+=) (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) ())))) (;)) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (identifier) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (return_statement (return) (identifier) (;)) (}))))