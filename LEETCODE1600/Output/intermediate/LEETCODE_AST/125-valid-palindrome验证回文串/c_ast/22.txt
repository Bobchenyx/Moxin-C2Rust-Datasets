(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (char_literal (') (character) (')) (<=) (subscript_expression (identifier) ([) (identifier) (]))) (<=) (char_literal (') (character) ('))) ())) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ())))) (;))) (}))) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (comment) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (identifier)) (;)) (comment) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (binary_expression (binary_expression (identifier) (+) (identifier)) (-) (number_literal))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (true)) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (char_literal (') (character) (')) (<=) (pointer_expression (*) (identifier))) (&&) (binary_expression (pointer_expression (*) (identifier)) (<=) (char_literal (') (character) (')))) ())) (||) (parenthesized_expression (() (binary_expression (binary_expression (char_literal (') (character) (')) (<=) (pointer_expression (*) (identifier))) (&&) (binary_expression (pointer_expression (*) (identifier)) (<=) (char_literal (') (character) (')))) ()))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (char_literal (') (character) (')) (<=) (pointer_expression (*) (identifier))) (&&) (binary_expression (pointer_expression (*) (identifier)) (<=) (char_literal (') (character) (')))) ())) (||) (parenthesized_expression (() (binary_expression (binary_expression (char_literal (') (character) (')) (<=) (pointer_expression (*) (identifier))) (&&) (binary_expression (pointer_expression (*) (identifier)) (<=) (char_literal (') (character) (')))) ()))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (pointer_expression (*) (identifier))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (update_expression (identifier) (--)) (;)) (continue_statement (continue) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (false)) (;)) (break_statement (break) (;)) (})))) (})) (else_clause (else) (compound_statement ({) (expression_statement (update_expression (identifier) (--)) (;)) (continue_statement (continue) (;)) (})))) (})) (else_clause (else) (expression_statement (update_expression (identifier) (++)) (;)))) (}))) (return_statement (return) (identifier) (;)) (}))))