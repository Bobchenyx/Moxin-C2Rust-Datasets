(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (type_identifier)) ())) (->) (primitive_type) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() ()))) (;)) (expression_statement (for_expression (for) (identifier) (in) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (block ({) (expression_statement (if_expression (if) (binary_expression (binary_expression (identifier) (>=) (char_literal)) (&&) (binary_expression (identifier) (<=) (char_literal))) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (type_cast_expression (parenthesized_expression (() (binary_expression (type_cast_expression (identifier) (as) (primitive_type)) (-) (integer_literal)) ())) (as) (primitive_type)) ()))) (;)) (})) (else_clause (else) (if_expression (if) (binary_expression (binary_expression (binary_expression (identifier) (>=) (char_literal)) (&&) (binary_expression (identifier) (<=) (char_literal))) (||) (binary_expression (binary_expression (identifier) (>=) (char_literal)) (&&) (binary_expression (identifier) (<=) (char_literal)))) (block ({) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (identifier) ()))) (})))))) (})))) (let_declaration (let) (tuple_pattern (() (mut_pattern (mutable_specifier) (identifier)) (,) (mut_pattern (mutable_specifier) (identifier)) ())) (=) (tuple_expression (() (type_cast_expression (integer_literal) (as) (primitive_type)) (,) (binary_expression (type_cast_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (as) (primitive_type)) (-) (integer_literal)) ())) (;)) (expression_statement (while_expression (while) (parenthesized_expression (() (binary_expression (identifier) (<=) (identifier)) ())) (block ({) (expression_statement (if_expression (if) (binary_expression (index_expression (identifier) ([) (type_cast_expression (identifier) (as) (primitive_type)) (])) (==) (index_expression (identifier) ([) (type_cast_expression (identifier) (as) (primitive_type)) (]))) (block ({) (expression_statement (compound_assignment_expr (identifier) (+=) (integer_literal)) (;)) (expression_statement (compound_assignment_expr (identifier) (-=) (integer_literal)) (;)) (expression_statement (continue_expression (continue)) (;)) (})) (else_clause (else) (block ({) (expression_statement (return_expression (return) (boolean_literal (false))) (;)) (}))))) (})))) (boolean_literal (true)) (}))) (}))))