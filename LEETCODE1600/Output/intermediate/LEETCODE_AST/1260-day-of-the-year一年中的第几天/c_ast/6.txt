(translation_unit (comment) (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (<=) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (binary_expression (binary_expression (identifier) (*) (number_literal)) (+) (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (update_expression (identifier) (++))) ())))) (-) (number_literal))) (;)) (}))) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (comment) (declaration (primitive_type) (init_declarator (array_declarator (identifier) ([) (])) (=) (initializer_list ({) (number_literal) (,) (number_literal) (,) (number_literal) (,) (number_literal) (,) (number_literal) (,) (number_literal) (,) (number_literal) (,) (number_literal) (,) (number_literal) (,) (number_literal) (,) (number_literal) (,) (number_literal) (}))) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (number_literal) ())))) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (parenthesized_expression (() (binary_expression (identifier) (-) (number_literal)) ()))) ())))) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (number_literal) ())))) (;)) (expression_statement (assignment_expression (identifier) (+=) (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (number_literal) ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (>) (number_literal)) (&&) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (%) (number_literal)) (==) (number_literal)) (&&) (binary_expression (binary_expression (identifier) (%) (number_literal)) (!=) (number_literal))) ())) (||) (binary_expression (binary_expression (identifier) (%) (number_literal)) (==) (number_literal))) ()))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (number_literal)) (;)) (}))) (return_statement (return) (identifier) (;)) (}))))