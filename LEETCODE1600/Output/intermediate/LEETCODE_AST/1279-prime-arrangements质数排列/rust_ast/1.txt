(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (primitive_type)) ())) (->) (primitive_type) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (macro_invocation (identifier) (!) (token_tree ([) (boolean_literal (true)) (;) (identifier) (as) (primitive_type) (]))) (;)) (expression_statement (assignment_expression (index_expression (identifier) ([) (integer_literal) (])) (=) (boolean_literal (false))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (binary_expression (identifier) (-) (integer_literal)) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (expression_statement (while_expression (while) (binary_expression (binary_expression (identifier) (*) (identifier)) (<=) (type_cast_expression (identifier) (as) (primitive_type))) (block ({) (expression_statement (if_expression (if) (index_expression (identifier) ([) (binary_expression (identifier) (-) (integer_literal)) (])) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (binary_expression (identifier) (*) (identifier)) (;)) (expression_statement (while_expression (while) (binary_expression (identifier) (<=) (type_cast_expression (identifier) (as) (primitive_type))) (block ({) (expression_statement (if_expression (if) (index_expression (identifier) ([) (binary_expression (identifier) (-) (integer_literal)) (])) (block ({) (expression_statement (assignment_expression (index_expression (identifier) ([) (binary_expression (identifier) (-) (integer_literal)) (])) (=) (boolean_literal (false))) (;)) (expression_statement (compound_assignment_expr (identifier) (-=) (integer_literal)) (;)) (})))) (expression_statement (compound_assignment_expr (identifier) (+=) (identifier)) (;)) (})))) (})))) (expression_statement (compound_assignment_expr (identifier) (+=) (integer_literal)) (;)) (})))) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..=) (identifier)) (block ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (binary_expression (identifier) (*) (type_cast_expression (identifier) (as) (primitive_type))) (%) (integer_literal))) (;)) (})))) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..=) (parenthesized_expression (() (binary_expression (identifier) (-) (identifier)) ()))) (block ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (binary_expression (identifier) (*) (type_cast_expression (identifier) (as) (primitive_type))) (%) (integer_literal))) (;)) (})))) (type_cast_expression (identifier) (as) (primitive_type)) (}))) (}))))