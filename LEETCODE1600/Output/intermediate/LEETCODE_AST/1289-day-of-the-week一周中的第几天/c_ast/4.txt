(translation_unit (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ())))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (number_literal)) (||) (binary_expression (identifier) (==) (number_literal))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (number_literal)) (;)) (expression_statement (update_expression (identifier) (--)) (;)) (}))) (switch_statement (switch) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (binary_expression (binary_expression (binary_expression (identifier) (+) (binary_expression (number_literal) (*) (identifier))) (+) (binary_expression (binary_expression (number_literal) (*) (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ()))) (/) (number_literal))) (+) (identifier)) (+) (binary_expression (identifier) (/) (number_literal))) (-) (binary_expression (identifier) (/) (number_literal))) (+) (binary_expression (identifier) (/) (number_literal))) ())) (%) (number_literal)) ())) (compound_statement ({) (case_statement (case) (number_literal) (:) (compound_statement ({) (return_statement (return) (string_literal (") (string_content) (")) (;)) (}))) (case_statement (case) (number_literal) (:) (compound_statement ({) (return_statement (return) (string_literal (") (string_content) (")) (;)) (}))) (case_statement (case) (number_literal) (:) (compound_statement ({) (return_statement (return) (string_literal (") (string_content) (")) (;)) (}))) (case_statement (case) (number_literal) (:) (compound_statement ({) (return_statement (return) (string_literal (") (string_content) (")) (;)) (}))) (case_statement (case) (number_literal) (:) (compound_statement ({) (return_statement (return) (string_literal (") (string_content) (")) (;)) (}))) (case_statement (case) (number_literal) (:) (compound_statement ({) (return_statement (return) (string_literal (") (string_content) (")) (;)) (}))) (case_statement (default) (:) (compound_statement ({) (return_statement (return) (string_literal (") (string_content) (")) (;)) (}))) (}))) (return_statement (return) (string_literal (") (")) (;)) (}))))