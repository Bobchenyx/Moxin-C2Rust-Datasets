(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (!=) (char_literal (') (escape_sequence) ('))) ())) (compound_statement ({) (switch_statement (switch) (parenthesized_expression (() (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) ())) (compound_statement ({) (case_statement (case) (char_literal (') (character) (')) (:) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (number_literal))) (;)) (break_statement (break) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (number_literal))) (;)) (break_statement (break) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (number_literal))) (;)) (break_statement (break) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (number_literal))) (;)) (break_statement (break) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (number_literal))) (;)) (break_statement (break) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (number_literal))) (;)) (break_statement (break) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (number_literal))) (;)) (break_statement (break) (;))) (}))) (expression_statement (update_expression (identifier) (++)) (;)) (comment) (}))) (while_statement (while) (parenthesized_expression (() (binary_expression (binary_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (!=) (char_literal (') (escape_sequence) ('))) (&&) (binary_expression (identifier) (<) (identifier))) ())) (compound_statement ({) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (==) (char_literal (') (character) ('))) (&&) (binary_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (+) (identifier)) (+) (number_literal)) ()))) (==) (char_literal (') (character) (')))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (==) (char_literal (') (character) ('))) (&&) (binary_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (+) (identifier)) (+) (number_literal)) ()))) (==) (char_literal (') (character) (')))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (==) (char_literal (') (character) ('))) (&&) (binary_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (+) (identifier)) (+) (number_literal)) ()))) (==) (char_literal (') (character) (')))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (==) (char_literal (') (character) ('))) (&&) (binary_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (+) (identifier)) (+) (number_literal)) ()))) (==) (char_literal (') (character) (')))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (==) (char_literal (') (character) ('))) (&&) (binary_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (+) (identifier)) (+) (number_literal)) ()))) (==) (char_literal (') (character) (')))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (==) (char_literal (') (character) ('))) (&&) (binary_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (+) (identifier)) (+) (number_literal)) ()))) (==) (char_literal (') (character) (')))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (return_statement (return) (identifier) (;)) (}))))