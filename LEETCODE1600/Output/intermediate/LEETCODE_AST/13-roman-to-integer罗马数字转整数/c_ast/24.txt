(translation_unit (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (switch_statement (switch) (parenthesized_expression (() (identifier) ())) (compound_statement ({) (case_statement (case) (char_literal (') (character) (')) (:) (return_statement (return) (number_literal) (;))) (comment) (case_statement (case) (char_literal (') (character) (')) (:) (return_statement (return) (number_literal) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (return_statement (return) (number_literal) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (return_statement (return) (number_literal) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (return_statement (return) (number_literal) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (return_statement (return) (number_literal) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (return_statement (return) (number_literal) (;))) (case_statement (default) (:) (return_statement (return) (number_literal) (;))) (}))) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (identifier) (,) (identifier) (,) (identifier) (,) (identifier) (,) (init_declarator (identifier) (=) (number_literal)) (;)) (while_statement (while) (parenthesized_expression (() (subscript_expression (identifier) ([) (identifier) (])) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (comment) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (binary_expression (identifier) (-) (number_literal))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ())))) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (number_literal)) (||) (binary_expression (identifier) (==) (number_literal))) ())) (return_statement (return) (number_literal) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>=) (identifier)) ())) (expression_statement (assignment_expression (identifier) (+=) (identifier)) (;)) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (parenthesized_expression (() (binary_expression (identifier) (-) (identifier)) ()))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<) (binary_expression (identifier) (-) (number_literal))) ())) (expression_statement (update_expression (identifier) (++)) (;)) (else_clause (else) (break_statement (break) (;)))) (})))) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ())))) (;)) (expression_statement (assignment_expression (identifier) (+=) (identifier)) (;)) (}))) (return_statement (return) (identifier) (;)) (}))))