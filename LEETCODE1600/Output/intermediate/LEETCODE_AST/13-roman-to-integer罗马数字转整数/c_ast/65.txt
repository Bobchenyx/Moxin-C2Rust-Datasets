(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (,) (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (+) (number_literal)) ()))))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (call_expression (identifier) (argument_list (() (identifier) ())))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (switch_statement (switch) (parenthesized_expression (() (subscript_expression (identifier) ([) (identifier) (])) ())) (compound_statement ({) (case_statement (case) (char_literal (') (character) (')) (:) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (number_literal)) (;)) (break_statement (break) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (number_literal)) (;)) (break_statement (break) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (number_literal)) (;)) (break_statement (break) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (number_literal)) (;)) (break_statement (break) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (number_literal)) (;)) (break_statement (break) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (number_literal)) (;)) (break_statement (break) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (number_literal)) (;)) (break_statement (break) (;))) (}))) (}))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (+) (number_literal))) (;) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (number_literal)) (&&) (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (]))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) (==) (number_literal)) (||) (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) (==) (number_literal))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) (-) (subscript_expression (identifier) ([) (identifier) (]))) ()))) (;)) (expression_statement (assignment_expression (identifier) (+=) (number_literal)) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (})))) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (number_literal)) (&&) (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (]))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) (==) (number_literal)) (||) (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) (==) (number_literal))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (binary_expression (number_literal) (+) (identifier)) (])) (-) (subscript_expression (identifier) ([) (identifier) (]))) ()))) (;)) (expression_statement (assignment_expression (identifier) (+=) (number_literal)) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (})))) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (number_literal)) (&&) (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (]))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) (==) (number_literal)) (||) (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) (==) (number_literal))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) (-) (subscript_expression (identifier) ([) (identifier) (]))) ()))) (;)) (expression_statement (assignment_expression (identifier) (+=) (number_literal)) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (})))) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (})))))))) (}))) (return_statement (return) (identifier) (;)) (}))))