(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (primitive_type)) ())) (->) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (let_declaration (let) (mutable_specifier) (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (=) (macro_invocation (identifier) (!) (token_tree ([) (integer_literal) (;) (identifier) (as) (primitive_type) (]))) (;)) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (parenthesized_expression (() (binary_expression (identifier) (-) (integer_literal)) ()))) (block ({) (expression_statement (assignment_expression (index_expression (identifier) ([) (type_cast_expression (identifier) (as) (primitive_type)) (])) (=) (binary_expression (identifier) (+) (integer_literal))) (;)) (line_comment (//)) (expression_statement (compound_assignment_expr (identifier) (+=) (index_expression (identifier) ([) (type_cast_expression (identifier) (as) (primitive_type)) (]))) (;)) (})))) (expression_statement (assignment_expression (index_expression (identifier) ([) (binary_expression (type_cast_expression (identifier) (as) (primitive_type)) (-) (integer_literal)) (])) (=) (binary_expression (integer_literal) (-) (identifier))) (;)) (line_comment (//)) (parenthesized_expression (() (identifier) ())) (}))) (}))))