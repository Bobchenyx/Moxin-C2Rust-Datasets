(translation_unit (type_definition (typedef) (struct_specifier (struct) (field_declaration_list ({) (field_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (field_identifier)) (;)) (field_declaration (primitive_type) (field_identifier) (;)) (comment) (field_declaration (primitive_type) (field_identifier) (;)) (comment) (}))) (type_identifier) (;)) (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (number_literal)) (;)) (return_statement (return) (null (NULL)) (;)) (}))) (declaration (type_qualifier (const)) (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (identifier)) ())))) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (number_literal)) (;)) (declaration (type_identifier) (array_declarator (identifier) ([) (identifier) (])) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (binary_expression (sizeof_expression (sizeof) (parenthesized_expression (() (identifier) ()))) (*) (identifier)) ()))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) (=) (identifier)) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (!=) (number_literal)) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (field_expression (field_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (.) (field_identifier)) (->) (field_identifier)) (==) (null (NULL))) (||) (binary_expression (field_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (.) (field_identifier)) (!=) (number_literal))) ())) (compound_statement ({) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (field_expression (field_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (.) (field_identifier)) (->) (field_identifier)) (==) (null (NULL))) (||) (binary_expression (field_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (.) (field_identifier)) (!=) (number_literal))) ())) (compound_statement ({) (comment) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (++)) (])) (=) (field_expression (field_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (.) (field_identifier)) (->) (field_identifier))) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (.) (field_identifier)) (=) (number_literal)) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (.) (field_identifier)) (=) (number_literal)) (;)) (expression_statement (update_expression (identifier) (--)) (;)) (})) (else_clause (else) (compound_statement ({) (comment) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) (=) (field_expression (field_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (.) (field_identifier)) (->) (field_identifier))) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (.) (field_identifier)) (=) (number_literal)) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (})))) (})) (else_clause (else) (compound_statement ({) (comment) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) (=) (field_expression (field_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (.) (field_identifier)) (->) (field_identifier))) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (.) (field_identifier)) (=) (number_literal)) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (})))) (}))) (return_statement (return) (identifier) (;)) (}))))