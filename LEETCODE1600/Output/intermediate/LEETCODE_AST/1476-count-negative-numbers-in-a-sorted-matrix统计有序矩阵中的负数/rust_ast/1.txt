(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (>)))) ())) (->) (primitive_type) (block ({) (let_declaration (let) (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (;)) (let_declaration (let) (identifier) (=) (call_expression (field_expression (index_expression (identifier) ([) (integer_literal) (])) (.) (field_identifier)) (arguments (() ()))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (expression_statement (for_expression (for) (identifier) (in) (identifier) (block ({) (expression_statement (match_expression (match) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (closure_expression (closure_parameters (|) (identifier) (|)) (call_expression (field_expression (integer_literal) (.) (field_identifier)) (arguments (() (reference_expression (&) (identifier)) ())))) ()))) (match_block ({) (match_arm (match_pattern (tuple_struct_pattern (identifier) (() (identifier) ()))) (=>) (compound_assignment_expr (identifier) (+=) (binary_expression (identifier) (+) (integer_literal))) (,)) (match_arm (match_pattern (tuple_struct_pattern (identifier) (() (identifier) ()))) (=>) (compound_assignment_expr (identifier) (+=) (identifier)) (,)) (})))) (})))) (type_cast_expression (parenthesized_expression (() (binary_expression (binary_expression (identifier) (*) (identifier)) (-) (identifier)) ())) (as) (primitive_type)) (}))) (}))))