(translation_unit (function_definition (type_identifier) (identifier) (compound_statement ({) (labeled_statement (statement_identifier) (:) (declaration (type_identifier) (ERROR (pointer_declarator (*) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))))) ({) (auto)) (init_declarator (identifier) (=) (identifier)) (;))) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (&&) (identifier)) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (<) (field_expression (identifier) (->) (field_identifier))) ())) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (})))) (expression_statement (assignment_expression (identifier) (=) (pointer_expression (&) (field_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (->) (field_identifier)))) (;)) (}))) (for_statement (for) (() (assignment_expression (pointer_expression (*) (identifier)) (=) (conditional_expression (identifier) (?) (identifier) (:) (identifier))) (;) (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (;) (assignment_expression (identifier) (=) (pointer_expression (&) (field_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (->) (field_identifier)))) ()) (expression_statement (;))) (expression_statement (;)) (expression_statement (;)) (return_statement (return) (identifier) (;)) (}))) (function_definition (type_identifier) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (true) (;) (assignment_expression (identifier) (*=) (number_literal)) ()) (compound_statement ({) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (identifier))) (=) (pointer_expression (&) (identifier))) (,) (init_declarator (pointer_declarator (*) (identifier)) (=) (null (nullptr))) (;)) (for_statement (for) (() (declaration (storage_class_specifier (auto)) (type_identifier) (init_declarator (identifier) (=) (pointer_expression (&) (identifier))) (;)) (pointer_expression (*) (identifier)) (;) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (pointer_expression (&) (field_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (->) (field_identifier)))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (==) (null (nullptr))) ())) (break_statement (break) (;))) (}))) (expression_statement (assignment_expression (identifier) (=) (parenthesized_expression (() (pointer_expression (*) (identifier)) ()))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (null (nullptr))) ())) (break_statement (break) (;))) (declaration (storage_class_specifier (auto)) (type_identifier) (ERROR (=)) (identifier) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (pointer_expression (&) (field_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (->) (field_identifier)))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (==) (null (nullptr))) ())) (break_statement (break) (;))) (}))) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (null (nullptr))) (;)) (declaration (storage_class_specifier (auto)) (type_identifier) (ERROR (=)) (parenthesized_declarator (() (pointer_declarator (*) (identifier)) ())) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (null (nullptr))) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (pointer_expression (*) (identifier)) (,) (identifier) ())))) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (identifier)) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (pointer_expression (*) (identifier)) (==) (identifier)) (&&) (binary_expression (identifier) (==) (null (nullptr)))) ())) (break_statement (break) (;))) (}))) (return_statement (return) (identifier) (;)) (}))) (ERROR (})) (expression_statement (;)))