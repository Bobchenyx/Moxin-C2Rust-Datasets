(translation_unit (comment) (type_definition (typedef) (struct_specifier (struct) (type_identifier)) (type_identifier) (;)) (type_definition (typedef) (struct_specifier (struct) (type_identifier) (field_declaration_list ({) (field_declaration (type_identifier) (pointer_declarator (*) (field_identifier)) (;)) (field_declaration (type_identifier) (pointer_declarator (*) (field_identifier)) (;)) (}))) (type_identifier) (;)) (function_definition (type_identifier) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (unary_expression (!) (identifier)) (||) (unary_expression (!) (field_expression (identifier) (->) (field_identifier)))) ())) (return_statement (return) (compound_literal_expression (() (type_descriptor (type_identifier)) ()) (initializer_list ({) (identifier) (,) (identifier) (}))) (;))) (declaration (type_identifier) (identifier) (,) (identifier) (;)) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (pointer_expression (&) (identifier))) (,) (init_declarator (pointer_declarator (*) (identifier)) (=) (pointer_expression (&) (identifier))) (;)) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (identifier)) (,) (init_declarator (pointer_declarator (*) (identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (declaration (type_identifier) (pointer_declarator (*) (pointer_declarator (*) (identifier))) (;)) (while_statement (while) (parenthesized_expression (() (identifier) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (conditional_expression (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (<) (field_expression (identifier) (->) (field_identifier))) ())) (?) (pointer_expression (&) (identifier)) (:) (conditional_expression (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (>) (field_expression (identifier) (->) (field_identifier))) ())) (?) (pointer_expression (&) (identifier)) (:) (pointer_expression (&) (identifier))))) (;)) (expression_statement (assignment_expression (field_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (->) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (=) (field_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (->) (field_identifier))) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (}))) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (null (NULL)))) (;)) (declaration (type_identifier) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (field_expression (identifier) (.) (field_identifier)) ())))) (;)) (declaration (type_identifier) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (field_expression (identifier) (.) (field_identifier)) ())))) (;)) (declaration (type_identifier) (identifier) (;)) (if_statement (if) (parenthesized_expression (() (field_expression (identifier) (.) (field_identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (field_expression (field_expression (identifier) (.) (field_identifier)) (->) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (field_expression (identifier) (.) (field_identifier))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (field_expression (identifier) (.) (field_identifier))) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (field_expression (identifier) (.) (field_identifier))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (identifier)) (;)) (})))) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (conditional_expression (field_expression (identifier) (.) (field_identifier)) (?) (field_expression (identifier) (.) (field_identifier)) (:) (identifier))) (;)) (return_statement (return) (identifier) (;)) (}))) (function_definition (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (return_statement (return) (field_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (.) (field_identifier)) (;)) (}))))