(translation_unit (comment) (function_definition (type_identifier) (identifier) (compound_statement ({) (labeled_statement (statement_identifier) (:) (declaration (primitive_type) (array_declarator (identifier) ([) (number_literal) (])) (;))) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (>) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (expression_statement (assignment_expression (identifier) (-=) (binary_expression (identifier) (&) (parenthesized_expression (() (unary_expression (-) (identifier)) ())))) (;)) (}))) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (<=) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (+=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (+=) (binary_expression (identifier) (&) (parenthesized_expression (() (unary_expression (-) (identifier)) ())))) (;)) (}))) (}))) (expression_statement (binary_expression (binary_expression (identifier) (<) (identifier)) (>) (call_expression (identifier) (argument_list (() (binary_expression (binary_expression (identifier) (<) (identifier)) (>) (pointer_expression (&) (identifier))) ())))) (;)) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (sizeof_expression (sizeof) (parenthesized_expression (() (identifier) ()))) ()))) (;)) (expression_statement (binary_expression (binary_expression (identifier) (<) (identifier)) (>) (identifier)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (cast_expression (() (type_descriptor (primitive_type)) ()) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ()))))) (;) (update_expression (++) (identifier)) ()) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (+) (number_literal)) (,) (number_literal) ()))) (;)) (}))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (cast_expression (() (type_descriptor (primitive_type)) ()) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ()))))) (;) (update_expression (++) (identifier)) ()) (compound_statement ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() (parenthesized_expression (() (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ()))) ())) ()))) (;)) (}))) (return_statement (return) (identifier) (;)) (})) (}))) (expression_statement (;)))