(translation_unit (type_definition (typedef) (struct_specifier (struct) (field_declaration_list ({) (field_declaration (primitive_type) (field_identifier) (;)) (field_declaration (primitive_type) (array_declarator (field_identifier) ([) (number_literal) (])) (;)) (field_declaration (primitive_type) (field_identifier) (;)) (}))) (type_identifier) (;)) (function_definition (type_identifier) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ())))) (compound_statement ({) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (type_identifier) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (sizeof_expression (sizeof) (parenthesized_expression (() (identifier) ()))) ()))))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (number_literal)) (;)) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (>=) (field_expression (identifier) (->) (field_identifier))) ())) (return_statement (return) (;))) (expression_statement (assignment_expression (subscript_expression (parenthesized_expression (() (field_expression (identifier) (->) (field_identifier)) ())) ([) (field_expression (identifier) (->) (field_identifier)) (])) (=) (identifier)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (+=) (number_literal)) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (==) (number_literal)) ())) (return_statement (return) (number_literal) (;))) (declaration (primitive_type) (init_declarator (identifier) (=) (subscript_expression (parenthesized_expression (() (field_expression (identifier) (->) (field_identifier)) ())) ([) (binary_expression (field_expression (identifier) (->) (field_identifier)) (-) (number_literal)) (]))) (;)) (expression_statement (update_expression (field_expression (identifier) (->) (field_identifier)) (--)) (;)) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (<=) (identifier)) ())) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (<) (field_expression (identifier) (->) (field_identifier))) ())) (expression_statement (comma_expression (assignment_expression (subscript_expression (parenthesized_expression (() (field_expression (identifier) (->) (field_identifier)) ())) ([) (identifier) (])) (+=) (identifier)) (,) (update_expression (identifier) (++))) (;))) (else_clause (else) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (expression_statement (comma_expression (assignment_expression (subscript_expression (parenthesized_expression (() (field_expression (identifier) (->) (field_identifier)) ())) ([) (identifier) (])) (+=) (identifier)) (,) (update_expression (identifier) (++))) (;))))) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (}))))