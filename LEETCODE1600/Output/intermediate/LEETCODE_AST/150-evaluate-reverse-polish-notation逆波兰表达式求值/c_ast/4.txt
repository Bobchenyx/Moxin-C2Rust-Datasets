(translation_unit (preproc_def (#define) (identifier) (preproc_arg)) (declaration (primitive_type) (array_declarator (identifier) ([) (identifier) (])) (;)) (declaration (primitive_type) (pointer_declarator (*) (identifier)) (;)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() ()))) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() ()))) (compound_statement ({) (return_statement (return) (binary_expression (identifier) (==) (identifier)) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (update_expression (identifier) (++))) (=) (identifier)) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() ()))) (compound_statement ({) (return_statement (return) (pointer_expression (*) (parenthesized_expression (() (update_expression (--) (identifier)) ()))) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (return_statement (return) (binary_expression (binary_expression (identifier) (<=) (char_literal (') (character) ('))) (&&) (binary_expression (identifier) (>=) (char_literal (') (character) (')))) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() ()))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (declaration (primitive_type) (array_declarator (identifier) ([) (number_literal) (])) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (number_literal) ()))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (while_statement (while) (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (call_expression (identifier) (argument_list (() (pointer_expression (*) (identifier)) ()))) ())) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (call_expression (identifier) (argument_list (() (identifier) ()))) (])) (=) (pointer_expression (*) (identifier))) (;)) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (char_literal (') (character) ('))) ())) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;))))) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (if_statement (if) (parenthesized_expression (() (call_expression (identifier) (argument_list (() (identifier) ()))) ())) (compound_statement ({) (comment) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (*) (identifier)) ()))) (;)) (})) (else_clause (else) (compound_statement ({) (comment) (expression_statement (call_expression (identifier) (argument_list (() (unary_expression (!) (call_expression (identifier) (argument_list (() ())))) ()))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() ())))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() ())))) (;)) (switch_statement (switch) (parenthesized_expression (() (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (number_literal) (])) ())) (compound_statement ({) (case_statement (case) (char_literal (') (character) (')) (:) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (identifier) (+) (identifier)) ()))) (;)) (break_statement (break) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (identifier) (-) (identifier)) ()))) (;)) (break_statement (break) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (identifier) (*) (identifier)) ()))) (;)) (break_statement (break) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (identifier) (/) (identifier)) ()))) (;)) (break_statement (break) (;))) (case_statement (default) (:) (expression_statement (call_expression (identifier) (argument_list (() (number_literal) ()))) (;)) (break_statement (break) (;))) (}))) (})))) (}))) (expression_statement (call_expression (identifier) (argument_list (() (unary_expression (!) (call_expression (identifier) (argument_list (() ())))) ()))) (;)) (return_statement (return) (call_expression (identifier) (argument_list (() ()))) (;)) (}))))