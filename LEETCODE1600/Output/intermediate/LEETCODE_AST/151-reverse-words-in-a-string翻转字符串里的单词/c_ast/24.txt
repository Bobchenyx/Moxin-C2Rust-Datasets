(translation_unit (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (+) (number_literal)) ())))) (;)) (comment) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (binary_expression (identifier) (+) (number_literal)) ()))) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (binary_expression (binary_expression (identifier) (+) (identifier)) (-) (number_literal))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (>=) (identifier)) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (char_literal (') (character) ('))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>) (number_literal)) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (identifier) (+) (number_literal)) (,) (identifier) ()))) (;)) (comment) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (string_literal (") (string_content) (")) ()))) (;)) (comment) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (}))) (})) (else_clause (else) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (})))) (expression_statement (update_expression (identifier) (--)) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>) (number_literal)) ())) (compound_statement ({) (comment) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (identifier) (+) (number_literal)) (,) (identifier) ()))) (;)) (})) (else_clause (else) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (>) (number_literal)) (&&) (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (==) (char_literal (') (character) (')))) ())) (compound_statement ({) (comment) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (=) (number_literal)) (;)) (}))) (})))) (return_statement (return) (identifier) (;)) (}))))