(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (subscript_expression (identifier) ([) (number_literal) (]))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (*=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (expression_statement (assignment_expression (identifier) (=) (conditional_expression (parenthesized_expression (() (binary_expression (identifier) (>) (identifier)) ())) (?) (identifier) (:) (identifier))) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>) (number_literal)) ())) (compound_statement ({) (return_statement (return) (identifier) (;)) (}))) (declaration (sized_type_specifier (long)) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (identifier))) (=) (cast_expression (() (type_descriptor (sized_type_specifier (long)) (abstract_pointer_declarator (*) (abstract_pointer_declarator (*)))) ()) (call_expression (identifier) (argument_list (() (binary_expression (number_literal) (*) (sizeof_expression (sizeof) (() (type_descriptor (sized_type_specifier (long)) (abstract_pointer_declarator (*))) ()))) ()))))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (cast_expression (() (type_descriptor (sized_type_specifier (long)) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (*) (sizeof_expression (sizeof) (() (type_descriptor (sized_type_specifier (long))) ()))) ()))))) (;)) (comment) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (cast_expression (() (type_descriptor (sized_type_specifier (long)) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (*) (sizeof_expression (sizeof) (() (type_descriptor (sized_type_specifier (long))) ()))) ()))))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ())) (&) (number_literal)) (])) ([) (identifier) (])) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (conditional_expression (parenthesized_expression (() (binary_expression (identifier) (>) (identifier)) ())) (?) (identifier) (:) (identifier))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ())) (&) (number_literal)) (])) ([) (identifier) (])) (=) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (&) (number_literal)) (])) ([) (identifier) (])) (*) (identifier))) (;)) (expression_statement (assignment_expression (identifier) (=) (conditional_expression (parenthesized_expression (() (binary_expression (identifier) (>) (subscript_expression (subscript_expression (identifier) ([) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ())) (&) (number_literal)) (])) ([) (identifier) (]))) ())) (?) (identifier) (:) (subscript_expression (subscript_expression (identifier) ([) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ())) (&) (number_literal)) (])) ([) (identifier) (])))) (;)) (}))) (}))) (return_statement (return) (identifier) (;)) (}))))