(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (mutable_specifier) (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>)))) (,) (parameter (identifier) (:) (primitive_type)) ())) (->) (primitive_type) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (binary_expression (binary_expression (index_expression (identifier) ([) (integer_literal) (])) (+) (index_expression (identifier) ([) (integer_literal) (]))) (+) (index_expression (identifier) ([) (integer_literal) (]))) (;)) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (parenthesized_expression (() (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (-) (integer_literal)) ()))) (block ({) (expression_statement (if_expression (if) (binary_expression (binary_expression (identifier) (!=) (integer_literal)) (&&) (binary_expression (index_expression (identifier) ([) (identifier) (])) (==) (index_expression (identifier) ([) (binary_expression (identifier) (-) (integer_literal)) (])))) (block ({) (expression_statement (continue_expression (continue)) (;)) (})))) (let_declaration (let) (tuple_pattern (() (mut_pattern (mutable_specifier) (identifier)) (,) (mut_pattern (mutable_specifier) (identifier)) ())) (=) (tuple_expression (() (binary_expression (identifier) (+) (integer_literal)) (,) (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (-) (integer_literal)) ())) (;)) (expression_statement (while_expression (while) (binary_expression (identifier) (<) (identifier)) (block ({) (let_declaration (let) (identifier) (=) (binary_expression (binary_expression (index_expression (identifier) ([) (identifier) (])) (+) (index_expression (identifier) ([) (identifier) (]))) (+) (index_expression (identifier) ([) (identifier) (]))) (;)) (expression_statement (if_expression (if) (binary_expression (call_expression (field_expression (parenthesized_expression (() (binary_expression (identifier) (-) (identifier)) ())) (.) (field_identifier)) (arguments (() ()))) (<) (call_expression (field_expression (parenthesized_expression (() (binary_expression (identifier) (-) (identifier)) ())) (.) (field_identifier)) (arguments (() ())))) (block ({) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (})))) (expression_statement (if_expression (if) (binary_expression (identifier) (>) (identifier)) (block ({) (expression_statement (loop_expression (loop) (block ({) (expression_statement (compound_assignment_expr (identifier) (-=) (integer_literal)) (;)) (expression_statement (if_expression (if) (binary_expression (binary_expression (identifier) (<=) (identifier)) (||) (binary_expression (index_expression (identifier) ([) (identifier) (])) (!=) (index_expression (identifier) ([) (binary_expression (identifier) (+) (integer_literal)) (])))) (block ({) (expression_statement (break_expression (break)) (;)) (})))) (})))) (})) (else_clause (else) (if_expression (if) (binary_expression (identifier) (<) (identifier)) (block ({) (expression_statement (loop_expression (loop) (block ({) (expression_statement (compound_assignment_expr (identifier) (+=) (integer_literal)) (;)) (expression_statement (if_expression (if) (binary_expression (binary_expression (identifier) (>=) (identifier)) (||) (binary_expression (index_expression (identifier) ([) (identifier) (])) (!=) (index_expression (identifier) ([) (binary_expression (identifier) (-) (integer_literal)) (])))) (block ({) (expression_statement (break_expression (break)) (;)) (})))) (})))) (})) (else_clause (else) (block ({) (expression_statement (break_expression (break)) (;)) (}))))))) (})))) (})))) (identifier) (}))) (}))))