(translation_unit (comment) (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (parenthesized_expression (() (binary_expression (number_literal) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ()))) ())) ()))))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<=) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (number_literal)) (;)) (return_statement (return) (identifier) (;)) (}))) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (number_literal) (])) (<) (subscript_expression (identifier) ([) (number_literal) (]))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (subscript_expression (identifier) ([) (number_literal) (])) (])) (+) (subscript_expression (identifier) ([) (subscript_expression (identifier) ([) (number_literal) (])) (]))) (>) (identifier)) ())) (compound_statement ({) (expression_statement (update_expression (subscript_expression (identifier) ([) (number_literal) (])) (--)) (;)) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (subscript_expression (identifier) ([) (number_literal) (])) (])) (+) (subscript_expression (identifier) ([) (subscript_expression (identifier) ([) (number_literal) (])) (]))) (<) (identifier)) ())) (compound_statement ({) (expression_statement (update_expression (subscript_expression (identifier) ([) (number_literal) (])) (++)) (;)) (}))))) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (subscript_expression (identifier) ([) (number_literal) (])) (])) (+) (subscript_expression (identifier) ([) (subscript_expression (identifier) ([) (number_literal) (])) (]))) (==) (identifier)) ())) (&&) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (number_literal) (])) (<) (subscript_expression (identifier) ([) (number_literal) (]))) ()))) ())) (compound_statement ({) (expression_statement (update_expression (subscript_expression (identifier) ([) (number_literal) (])) (++)) (;)) (comment) (expression_statement (update_expression (subscript_expression (identifier) ([) (number_literal) (])) (++)) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (number_literal)) (;)) (return_statement (return) (identifier) (;)) (}))) (}))) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (number_literal)) (;)) (return_statement (return) (identifier) (;)) (}))))