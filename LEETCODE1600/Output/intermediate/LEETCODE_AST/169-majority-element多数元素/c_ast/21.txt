(translation_unit (type_definition (typedef) (struct_specifier (struct) (type_identifier) (field_declaration_list ({) (field_declaration (primitive_type) (pointer_declarator (*) (field_identifier)) (;)) (field_declaration (primitive_type) (pointer_declarator (*) (field_identifier)) (;)) (field_declaration (primitive_type) (field_identifier) (;)) (}))) (type_identifier) (;)) (function_definition (type_identifier) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ())))) (compound_statement ({) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (type_identifier) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (sizeof_expression (sizeof) (parenthesized_expression (() (identifier) ()))) ()))))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (identifier)) ()))))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (identifier)) ()))))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (identifier)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) (=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) (=) (number_literal)) (;)) (}))) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (%) (field_expression (identifier) (->) (field_identifier))) ())))) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) (!=) (number_literal)) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) (==) (identifier)) ())) (compound_statement ({) (expression_statement (update_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) (++)) (;)) (return_statement (return) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ())) (%) (field_expression (identifier) (->) (field_identifier)))) (;)) (})))) (}))) (expression_statement (assignment_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) (=) (identifier)) (;)) (expression_statement (update_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) (++)) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (identifier) (;)) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (call_expression (identifier) (argument_list (() (binary_expression (binary_expression (identifier) (/) (number_literal)) (+) (number_literal)) ())))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (subscript_expression (identifier) ([) (identifier) (])) ()))) (;))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (field_expression (identifier) (->) (field_identifier))) (;) (update_expression (identifier) (++)) ()) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) (>) (binary_expression (identifier) (/) (number_literal))) ())) (expression_statement (assignment_expression (identifier) (=) (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (]))) (;)))) (return_statement (return) (identifier) (;)) (}))))