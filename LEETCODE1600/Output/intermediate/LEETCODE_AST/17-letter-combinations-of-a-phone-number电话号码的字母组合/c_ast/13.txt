(translation_unit (function_definition (type_identifier) (identifier) (compound_statement ({) (labeled_statement (statement_identifier) (:) (expression_statement (binary_expression (binary_expression (identifier) (<) (identifier)) (>) (call_expression (identifier) (argument_list (() (identifier) (ERROR (identifier)) ())))) (;))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ())))) (;)) (expression_statement (binary_expression (binary_expression (identifier) (<) (identifier)) (>) (identifier)) (;)) (if_statement (if) (parenthesized_expression (() (unary_expression (!) (identifier)) ())) (return_statement (return) (identifier) (;))) (expression_statement (comma_expression (binary_expression (identifier) (<) (identifier)) (,) (binary_expression (identifier) (>) (identifier))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (char_literal (') (character) (')) (])) (=) (string_literal (") (string_content) ("))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (char_literal (') (character) (')) (])) (=) (string_literal (") (string_content) ("))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (char_literal (') (character) (')) (])) (=) (string_literal (") (string_content) ("))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (char_literal (') (character) (')) (])) (=) (string_literal (") (string_content) ("))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (char_literal (') (character) (')) (])) (=) (string_literal (") (string_content) ("))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (char_literal (') (character) (')) (])) (=) (string_literal (") (string_content) ("))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (char_literal (') (character) (')) (])) (=) (string_literal (") (string_content) ("))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (char_literal (') (character) (')) (])) (=) (string_literal (") (string_content) ("))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (declaration (type_identifier) (init_declarator (identifier) (=) (subscript_expression (identifier) ([) (subscript_expression (identifier) ([) (identifier) (])) (]))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ())))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ())))) (;)) (expression_statement (binary_expression (binary_expression (identifier) (<) (identifier)) (>) (identifier)) (;)) (if_statement (if) (parenthesized_expression (() (unary_expression (!) (identifier)) ())) (compound_statement ({) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (declaration (type_identifier) (identifier) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ()))) (;)) (comment) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() (identifier) ()))) (;)) (}))) (continue_statement (continue) (;)) (}))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (+) (subscript_expression (identifier) ([) (identifier) (]))) ()))) (;)))) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (}))) (return_statement (return) (identifier) (;)) (})) (}))) (expression_statement (;)))