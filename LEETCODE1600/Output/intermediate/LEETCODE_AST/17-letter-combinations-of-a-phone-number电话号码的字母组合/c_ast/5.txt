(translation_unit (comment) (declaration (type_qualifier (const)) (primitive_type) (init_declarator (pointer_declarator (*) (array_declarator (identifier) ([) (number_literal) (]))) (=) (initializer_list ({) (string_literal (") (")) (,) (string_literal (") (")) (,) (string_literal (") (string_content) (")) (,) (string_literal (") (string_content) (")) (,) (string_literal (") (string_content) (")) (,) (string_literal (") (string_content) (")) (,) (string_literal (") (string_content) (")) (,) (string_literal (") (string_content) (")) (,) (string_literal (") (string_content) (")) (,) (string_literal (") (string_content) (")) (}))) (;)) (function_definition (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (-) (char_literal (') (character) (')))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (call_expression (identifier) (argument_list (() (binary_expression (identifier) (+) (number_literal)) ()))) (==) (number_literal)) ())) (compound_statement ({) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (identifier))) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*) (abstract_pointer_declarator (*)))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ())) (*) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ())))) ()))))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ())))) (;) (update_expression (++) (identifier)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (number_literal)) ()))))) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (number_literal) (])) (=) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (]))) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (number_literal) (])) (=) (char_literal (') (escape_sequence) ('))) (;)) (}))) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ())))) (;)) (comment) (return_statement (return) (identifier) (;)) (})) (else_clause (else) (compound_statement ({) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (identifier))) (=) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (+) (number_literal)) (,) (identifier) ())))) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (identifier))) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*) (abstract_pointer_declarator (*)))) ()) (call_expression (identifier) (argument_list (() (binary_expression (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ())) (*) (parenthesized_expression (() (pointer_expression (*) (identifier)) ()))) (*) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ())))) ()))))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (number_literal) (])) ())))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ())))) (;) (update_expression (++) (identifier)) ()) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (*) (identifier))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (parenthesized_expression (() (pointer_expression (*) (identifier)) ()))) (;) (update_expression (++) (identifier)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (identifier)) (])) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ()))) ()))))) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (identifier)) (])) ([) (binary_expression (identifier) (+) (number_literal)) (])) (=) (char_literal (') (escape_sequence) ('))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (identifier)) (])) (+) (number_literal)) (,) (subscript_expression (identifier) ([) (identifier) (])) ()))) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (identifier)) (])) ([) (number_literal) (])) (=) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (]))) (;)) (comment) (comment) (}))) (}))) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (binary_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (*) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ()))))) (;)) (comment) (return_statement (return) (identifier) (;)) (})))) (}))) (function_definition (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (==) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (number_literal)) (;)) (return_statement (return) (null (NULL)) (;)) (}))) (return_statement (return) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ()))) (;)) (ERROR (ERROR)) (}))))