(translation_unit (comment) (preproc_include (#include) (system_lib_string)) (preproc_include (#include) (system_lib_string)) (preproc_include (#include) (system_lib_string)) (preproc_def (#define) (identifier) (preproc_arg)) (preproc_def (#define) (identifier) (preproc_arg)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (identifier))) (=) (null (NULL))) (;)) (declaration (sized_type_specifier (unsigned) (primitive_type)) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (sized_type_specifier (unsigned) (primitive_type)) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (array_declarator (array_declarator (identifier) ([) (number_literal) (])) ([) (number_literal) (])) (=) (initializer_list ({) (string_literal (") (string_content) (")) (,) (comment) (string_literal (") (string_content) (")) (,) (comment) (string_literal (") (string_content) (")) (,) (comment) (string_literal (") (string_content) (")) (,) (comment) (string_literal (") (string_content) (")) (,) (comment) (string_literal (") (string_content) (")) (,) (comment) (string_literal (") (string_content) (")) (,) (comment) (string_literal (") (string_content) (")) (,) (comment) (string_literal (") (string_content) (")) (,) (comment) (string_literal (") (string_content) (")) (,) (comment) (string_literal (") (")) (comment) (}))) (;)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (identifier) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (-) (char_literal (') (character) (')))) (;)) (declaration (sized_type_specifier (unsigned) (primitive_type)) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ())))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (=) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (]))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) (!=) (char_literal (') (escape_sequence) ('))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (identifier) (+) (number_literal)) (,) (identifier) ()))) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) (,) (identifier) (,) (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (+) (number_literal)) ()))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (})))) (expression_statement (cast_expression (() (type_descriptor (primitive_type)) ()) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (+) (identifier)) (,) (number_literal) (,) (binary_expression (binary_expression (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (call_expression (identifier) (argument_list (() (identifier) ())))) (+) (number_literal)) (-) (identifier)) ())))) (;)) (}))) (}))) (comment) (function_definition (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (null (NULL))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (number_literal) (==) (call_expression (identifier) (argument_list (() (identifier) ())))) ())) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (number_literal)) (;)) (return_statement (return) (null (NULL)) (;)) (}))) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (null (NULL))) (;)) (expression_statement (assignment_expression (identifier) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (call_expression (identifier) (argument_list (() (identifier) ())))) (+) (number_literal)) ()))))) (;)) (expression_statement (cast_expression (() (type_descriptor (primitive_type)) ()) (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (binary_expression (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (call_expression (identifier) (argument_list (() (identifier) ())))) (+) (number_literal)) ())))) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (call_expression (identifier) (argument_list (() (identifier) ())))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (*=) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (-) (char_literal (') (character) ('))) (])) ())))) (;)) (}))) (expression_statement (assignment_expression (identifier) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*) (abstract_pointer_declarator (*)))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ())) (*) (identifier)) ()))))) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (identifier)) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (call_expression (identifier) (argument_list (() (identifier) ())))) (+) (number_literal)) ()))))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) (,) (number_literal) (,) (binary_expression (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (call_expression (identifier) (argument_list (() (identifier) ())))) (+) (number_literal)) ()))) (;)) (}))) (expression_statement (assignment_expression (identifier) (*=) (parenthesized_expression (() (binary_expression (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (call_expression (identifier) (argument_list (() (identifier) ())))) (+) (number_literal)) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (identifier) ()))) (;)) (return_statement (return) (identifier) (;)) (}))))