(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (reference_type (&) (mutable_specifier) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))))) (,) (parameter (identifier) (:) (primitive_type)) ())) (block ({) (let_declaration (let) (identifier) (=) (type_cast_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (as) (primitive_type)) (;)) (let_declaration (let) (identifier) (=) (parenthesized_expression (() (binary_expression (identifier) (%) (identifier)) ())) (;)) (let_declaration (let) (identifier) (=) (type_cast_expression (identifier) (as) (primitive_type)) (;)) (expression_statement (for_expression (for) (_) (in) (range_expression (integer_literal) (..) (identifier)) (block ({) (let_declaration (let) (identifier) (=) (index_expression (identifier) ([) (binary_expression (identifier) (-) (integer_literal)) (])) (;)) (expression_statement (for_expression (for) (identifier) (in) (call_expression (field_expression (parenthesized_expression (() (range_expression (integer_literal) (..) (identifier)) ())) (.) (field_identifier)) (arguments (() ()))) (block ({) (expression_statement (assignment_expression (index_expression (identifier) ([) (identifier) (])) (=) (index_expression (identifier) ([) (binary_expression (identifier) (-) (integer_literal)) (]))) (;)) (})))) (expression_statement (assignment_expression (index_expression (identifier) ([) (integer_literal) (])) (=) (identifier)) (;)) (})))) (}))) (}))))