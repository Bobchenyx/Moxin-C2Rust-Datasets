(translation_unit (comment) (function_definition (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ())))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<=) (number_literal)) ())) (return_statement (return) (identifier) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (field_expression (identifier) (->) (field_identifier)) (==) (null (NULL))) (&&) (binary_expression (identifier) (==) (number_literal))) ())) (return_statement (return) (null (NULL)) (;))) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (identifier)) (=) (identifier)) (;)) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (identifier)) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (identifier)) (=) (identifier)) (;)) (declaration (primitive_type) (identifier) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (binary_expression (identifier) (<=) (identifier)) (&&) (binary_expression (field_expression (identifier) (->) (field_identifier)) (!=) (null (NULL)))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (return_statement (return) (identifier) (;)) (}))) (while_statement (while) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (!=) (null (NULL))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (}))) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (return_statement (return) (identifier) (;)) (}))))