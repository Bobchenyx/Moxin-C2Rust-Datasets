(translation_unit (comment) (function_definition (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ())))) (compound_statement ({) (comment) (comment) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (identifier))) (=) (pointer_expression (&) (identifier))) (;)) (comment) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (identifier))) (=) (pointer_expression (&) (identifier))) (;)) (comment) (comment) (for_statement (for) (() (;) (binary_expression (identifier) (>) (number_literal)) (;) (update_expression (identifier) (--)) ()) (expression_statement (assignment_expression (identifier) (=) (pointer_expression (&) (parenthesized_expression (() (field_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (->) (field_identifier)) ())))) (;))) (comment) (while_statement (while) (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (pointer_expression (&) (parenthesized_expression (() (field_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (->) (field_identifier)) ())))) (;)) (expression_statement (assignment_expression (identifier) (=) (pointer_expression (&) (parenthesized_expression (() (field_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (->) (field_identifier)) ())))) (;)) (}))) (comment) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (identifier)) (=) (pointer_expression (*) (identifier))) (;)) (comment) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (field_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (->) (field_identifier))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (return_statement (return) (identifier) (;)) (}))))