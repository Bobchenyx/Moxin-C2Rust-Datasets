(translation_unit (comment) (type_definition (typedef) (struct_specifier (struct) (type_identifier)) (type_identifier) (;)) (function_definition (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (declaration (type_identifier) (pointer_declarator (*) (identifier)) (,) (pointer_declarator (*) (identifier)) (,) (pointer_declarator (*) (identifier)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (cast_expression (() (type_descriptor (type_identifier) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (sizeof_expression (sizeof) (parenthesized_expression (() (identifier) ()))) ()))))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (null (NULL))) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (!=) (null (NULL))) (&&) (binary_expression (identifier) (!=) (null (NULL)))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (cast_expression (() (type_descriptor (type_identifier) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (sizeof_expression (sizeof) (parenthesized_expression (() (identifier) ()))) ()))))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (binary_expression (binary_expression (field_expression (identifier) (->) (field_identifier)) (+) (field_expression (identifier) (->) (field_identifier))) (+) (identifier))) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (>) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (binary_expression (field_expression (identifier) (->) (field_identifier)) (-) (number_literal))) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (}))) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (identifier)) (;)) (comment) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (}))) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (!=) (null (NULL))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (cast_expression (() (type_descriptor (type_identifier) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (sizeof_expression (sizeof) (parenthesized_expression (() (identifier) ()))) ()))))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (binary_expression (field_expression (identifier) (->) (field_identifier)) (+) (identifier))) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (>) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (binary_expression (field_expression (identifier) (->) (field_identifier)) (-) (number_literal))) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (}))) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (}))) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (!=) (null (NULL))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (cast_expression (() (type_descriptor (type_identifier) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (sizeof_expression (sizeof) (parenthesized_expression (() (identifier) ()))) ()))))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (binary_expression (field_expression (identifier) (->) (field_identifier)) (+) (identifier))) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (>) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (binary_expression (field_expression (identifier) (->) (field_identifier)) (-) (number_literal))) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (}))) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (}))) (if_statement (if) (parenthesized_expression (() (identifier) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (cast_expression (() (type_descriptor (type_identifier) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (sizeof_expression (sizeof) (parenthesized_expression (() (identifier) ()))) ()))))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (number_literal)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (}))) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (null (NULL))) (;)) (return_statement (return) (field_expression (identifier) (->) (field_identifier)) (;)) (}))))