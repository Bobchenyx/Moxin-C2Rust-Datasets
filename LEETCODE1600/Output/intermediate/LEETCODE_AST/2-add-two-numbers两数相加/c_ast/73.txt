(translation_unit (function_definition (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier)) (,) (pointer_declarator (*) (identifier)) (,) (pointer_declarator (*) (identifier)) (;)) (comment) (for_statement (for) (() (comma_expression (assignment_expression (identifier) (=) (identifier)) (,) (comma_expression (assignment_expression (identifier) (=) (identifier)) (,) (assignment_expression (identifier) (=) (identifier)))) (;) (binary_expression (binary_expression (identifier) (||) (identifier)) (||) (identifier)) (;) ()) (compound_statement ({) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (null (NULL))) (&&) (binary_expression (identifier) (==) (null (NULL)))) ())) (compound_statement ({) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (}))) (comment) (expression_statement (assignment_expression (identifier) (=) (binary_expression (binary_expression (parenthesized_expression (() (conditional_expression (identifier) (?) (field_expression (identifier) (->) (field_identifier)) (:) (number_literal)) ())) (+) (parenthesized_expression (() (conditional_expression (identifier) (?) (field_expression (identifier) (->) (field_identifier)) (:) (number_literal)) ()))) (+) (identifier))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (binary_expression (identifier) (%) (number_literal))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (/) (number_literal))) (;)) (comment) (expression_statement (conditional_expression (identifier) (?) (assignment_expression (identifier) (=) (parenthesized_expression (() (conditional_expression (field_expression (identifier) (->) (field_identifier)) (?) (field_expression (identifier) (->) (field_identifier)) (:) (null (NULL))) ()))) (:) (null (NULL))) (;)) (expression_statement (conditional_expression (identifier) (?) (assignment_expression (identifier) (=) (parenthesized_expression (() (conditional_expression (field_expression (identifier) (->) (field_identifier)) (?) (field_expression (identifier) (->) (field_identifier)) (:) (null (NULL))) ()))) (:) (null (NULL))) (;)) (comment) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (parenthesized_expression (() (conditional_expression (identifier) (?) (identifier) (:) (parenthesized_expression (() (conditional_expression (identifier) (?) (identifier) (:) (null (NULL))) ()))) ()))) (;)) (comment) (expression_statement (conditional_expression (field_expression (identifier) (->) (field_identifier)) (?) (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (:) (null (NULL))) (;)) (}))) (return_statement (return) (identifier) (;)) (}))))