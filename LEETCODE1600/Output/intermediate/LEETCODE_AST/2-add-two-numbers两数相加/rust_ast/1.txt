(source_file (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (>)))) (,) (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (>)))) ())) (->) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (>))) (block ({) (let_declaration (let) (tuple_pattern (() (mut_pattern (mutable_specifier) (identifier)) (,) (mut_pattern (mutable_specifier) (identifier)) ())) (=) (tuple_expression (() (identifier) (,) (identifier) ())) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (call_expression (identifier) (arguments (() (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (integer_literal) ()))) ()))) ()))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (reference_expression (&) (mutable_specifier) (identifier)) (;)) (let_declaration (let) (tuple_pattern (() (mut_pattern (mutable_specifier) (identifier)) (,) (mut_pattern (mutable_specifier) (identifier)) (,) (mut_pattern (mutable_specifier) (identifier)) ())) (=) (tuple_expression (() (boolean_literal (false)) (,) (boolean_literal (false)) (,) (boolean_literal (false)) ())) (;)) (expression_statement (loop_expression (loop) (block ({) (let_declaration (let) (identifier) (=) (match_expression (match) (identifier) (match_block ({) (match_arm (match_pattern (tuple_struct_pattern (identifier) (() (identifier) ()))) (=>) (block ({) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (.) (field_identifier))) (;)) (field_expression (identifier) (.) (field_identifier)) (})) (,)) (match_arm (match_pattern (identifier)) (=>) (block ({) (expression_statement (assignment_expression (identifier) (=) (boolean_literal (true))) (;)) (integer_literal) (}))) (}))) (;)) (let_declaration (let) (identifier) (=) (match_expression (match) (identifier) (match_block ({) (match_arm (match_pattern (tuple_struct_pattern (identifier) (() (identifier) ()))) (=>) (block ({) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (.) (field_identifier))) (;)) (field_expression (identifier) (.) (field_identifier)) (})) (,)) (match_arm (match_pattern (identifier)) (=>) (block ({) (expression_statement (assignment_expression (identifier) (=) (boolean_literal (true))) (;)) (integer_literal) (}))) (}))) (;)) (expression_statement (if_expression (if) (binary_expression (binary_expression (identifier) (&&) (identifier)) (&&) (unary_expression (!) (identifier))) (block ({) (break_expression (break) (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier))) (})))) (let_declaration (let) (identifier) (=) (binary_expression (binary_expression (identifier) (+) (identifier)) (+) (if_expression (if) (identifier) (block ({) (integer_literal) (})) (else_clause (else) (block ({) (integer_literal) (}))))) (;)) (let_declaration (let) (identifier) (=) (if_expression (if) (binary_expression (identifier) (>=) (integer_literal)) (block ({) (expression_statement (assignment_expression (identifier) (=) (boolean_literal (true))) (;)) (binary_expression (identifier) (-) (integer_literal)) (})) (else_clause (else) (block ({) (expression_statement (assignment_expression (identifier) (=) (boolean_literal (false))) (;)) (identifier) (})))) (;)) (expression_statement (assignment_expression (field_expression (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (=) (call_expression (identifier) (arguments (() (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (identifier) ()))) ()))) ())))) (;)) (expression_statement (assignment_expression (identifier) (=) (reference_expression (&) (mutable_specifier) (field_expression (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)))) (;)) (})))) (}))) (}))))