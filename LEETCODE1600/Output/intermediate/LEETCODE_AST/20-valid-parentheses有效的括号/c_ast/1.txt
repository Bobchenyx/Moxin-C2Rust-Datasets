(translation_unit (type_definition (typedef) (struct_specifier (struct) (field_declaration_list ({) (field_declaration (primitive_type) (field_identifier) (;)) (field_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (field_identifier)) (;)) (}))) (type_identifier) (;)) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (null (NULL))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (identifier)) (;)) (expression_statement (call_expression (identifier) (argument_list (() (string_literal (") (string_content) (escape_sequence) (")) (,) (identifier) ()))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (||) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ()))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (cast_expression (() (type_descriptor (type_identifier) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (sizeof_expression (sizeof) (parenthesized_expression (() (identifier) ()))) ()))))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (null (NULL))) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (})) (else_clause (else) (compound_statement ({) (while_statement (while) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (!=) (null (NULL))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (}))) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (cast_expression (() (type_descriptor (type_identifier) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (sizeof_expression (sizeof) (parenthesized_expression (() (identifier) ()))) ()))))) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (null (NULL))) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (})))) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (identifier)) (;)) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (identifier)) (;)) (expression_statement (call_expression (identifier) (argument_list (() (string_literal (") (string_content) (escape_sequence) (")) (,) (identifier) ()))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (compound_statement ({) (return_statement (return) (false) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (return_statement (return) (false) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (==) (null (NULL))) ())) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (expression_statement (assignment_expression (identifier) (=) (null (NULL))) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (expression_statement (call_expression (identifier) (argument_list (() (string_literal (") (string_content) (escape_sequence) (")) (,) (pointer_expression (*) (identifier)) ()))) (;)) (return_statement (return) (true) (;)) (}))) (while_statement (while) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (!=) (null (NULL))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (}))) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (expression_statement (assignment_expression (identifier) (=) (null (NULL))) (;)) (expression_statement (update_expression (identifier) (--)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (null (NULL))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (string_literal (") (string_content) (escape_sequence) (")) (,) (pointer_expression (*) (identifier)) ()))) (;)) (return_statement (return) (true) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (declaration (primitive_type) (identifier) (;)) (declaration (primitive_type) (identifier) (;)) (declaration (primitive_type) (identifier) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (char_literal (') (character) ('))) ())) (||) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (char_literal (') (character) ('))) ()))) (||) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (char_literal (') (character) ('))) ()))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (string_literal (") (string_content) (escape_sequence) (")) (,) (identifier) ()))) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (pointer_expression (&) (identifier)) ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (false)) ())) (compound_statement ({) (return_statement (return) (false) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (char_literal (') (character) ('))) ())) (&&) (parenthesized_expression (() (binary_expression (identifier) (!=) (char_literal (') (character) ('))) ()))) ())) (compound_statement ({) (return_statement (return) (false) (;)) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (char_literal (') (character) ('))) ())) (&&) (parenthesized_expression (() (binary_expression (identifier) (!=) (char_literal (') (character) ('))) ()))) ())) (compound_statement ({) (return_statement (return) (false) (;)) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (char_literal (') (character) ('))) ())) (&&) (parenthesized_expression (() (binary_expression (identifier) (!=) (char_literal (') (character) ('))) ()))) ())) (compound_statement ({) (return_statement (return) (false) (;)) (}))))))) (expression_statement (call_expression (identifier) (argument_list (() (string_literal (") (string_content) (escape_sequence) (")) (,) (identifier) ()))) (;)) (})))) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (!=) (number_literal)) ())) (compound_statement ({) (while_statement (while) (parenthesized_expression (() (call_expression (identifier) (argument_list (() (pointer_expression (&) (identifier)) ()))) ())) (compound_statement ({) (expression_statement (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (return_statement (return) (false) (;)) (}))) (return_statement (return) (true) (;)) (}))))