(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (return_statement (return) (false) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (==) (number_literal)) ())) (return_statement (return) (true) (;))) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (%) (number_literal)) (!=) (number_literal)) ())) (return_statement (return) (false) (;))) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (identifier)) ()))))) (;)) (declaration (primitive_type) (identifier) (,) (identifier) (;)) (for_statement (for) (() (comma_expression (assignment_expression (identifier) (=) (number_literal)) (,) (assignment_expression (identifier) (=) (number_literal))) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (switch_statement (switch) (parenthesized_expression (() (subscript_expression (identifier) ([) (identifier) (])) ())) (compound_statement ({) (case_statement (case) (char_literal (') (character) (')) (:)) (case_statement (case) (char_literal (') (character) (')) (:)) (case_statement (case) (char_literal (') (character) (')) (:) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (identifier) (++)) (])) (=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (break_statement (break) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (>) (number_literal)) (&&) (binary_expression (subscript_expression (identifier) ([) (update_expression (--) (identifier)) (])) (==) (char_literal (') (character) (')))) ())) (break_statement (break) (;)) (else_clause (else) (return_statement (return) (false) (;))))) (case_statement (case) (char_literal (') (character) (')) (:) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (>) (number_literal)) (&&) (binary_expression (subscript_expression (identifier) ([) (update_expression (--) (identifier)) (])) (==) (char_literal (') (character) (')))) ())) (break_statement (break) (;)) (else_clause (else) (return_statement (return) (false) (;))))) (case_statement (case) (char_literal (') (character) (')) (:) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (>) (number_literal)) (&&) (binary_expression (subscript_expression (identifier) ([) (update_expression (--) (identifier)) (])) (==) (char_literal (') (character) (')))) ())) (break_statement (break) (;)) (else_clause (else) (return_statement (return) (false) (;))))) (case_statement (default) (:) (return_statement (return) (false) (;))) (}))) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (!=) (number_literal)) ())) (return_statement (return) (false) (;)) (else_clause (else) (return_statement (return) (true) (;)))) (}))))