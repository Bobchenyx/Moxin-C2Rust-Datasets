(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (unary_expression (!) (pointer_expression (*) (identifier))) ())) (return_statement (return) (true) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (binary_expression (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (%) (number_literal)) (==) (number_literal)) (||) (binary_expression (pointer_expression (*) (identifier)) (==) (char_literal (') (character) (')))) (||) (binary_expression (pointer_expression (*) (identifier)) (==) (char_literal (') (character) (')))) (||) (binary_expression (pointer_expression (*) (identifier)) (==) (char_literal (') (character) (')))) ())) (return_statement (return) (false) (;))) (comment) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ()))) ()))))) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (while_statement (while) (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (compound_statement ({) (switch_statement (switch) (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (compound_statement ({) (case_statement (case) (char_literal (') (character) (')) (:)) (case_statement (case) (char_literal (') (character) (')) (:)) (case_statement (case) (char_literal (') (character) (')) (:) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (pointer_expression (*) (identifier))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (break_statement (break) (;)) (comment) (}))) (case_statement (case) (char_literal (') (character) (')) (:) (compound_statement ({) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (update_expression (--) (identifier)) (])) (!=) (char_literal (') (character) ('))) ())) (return_statement (return) (false) (;)) (else_clause (else) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (})))) (break_statement (break) (;)) (}))) (case_statement (case) (char_literal (') (character) (')) (:) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (update_expression (--) (identifier)) (])) (!=) (char_literal (') (character) ('))) ())) (return_statement (return) (false) (;)) (else_clause (else) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (})))) (break_statement (break) (;)) (}))) (case_statement (case) (char_literal (') (character) (')) (:) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (update_expression (--) (identifier)) (])) (!=) (char_literal (') (character) ('))) ())) (return_statement (return) (false) (;)) (else_clause (else) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (})))) (}))) (}))) (}))) (return_statement (return) (conditional_expression (unary_expression (!) (identifier)) (?) (true) (:) (false)) (;)) (comment) (}))))