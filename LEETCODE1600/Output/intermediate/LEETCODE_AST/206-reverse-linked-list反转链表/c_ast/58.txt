(translation_unit (comment) (function_definition (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (return_statement (return) (number_literal) (;))) (comment) (declaration (struct_specifier (struct) (type_identifier)) (identifier) (;)) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (identifier)) (=) (pointer_expression (&) (identifier))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (number_literal)) (;)) (comment) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (comment) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (!=) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (!=) (number_literal)) ())) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;))) (}))) (return_statement (return) (field_expression (identifier) (->) (field_identifier)) (;)) (}))))