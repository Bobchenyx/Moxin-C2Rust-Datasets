(source_file (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (>)))) ())) (->) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (>))) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (identifier) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (identifier) (;)) (expression_statement (loop_expression (loop) (block ({) (expression_statement (if_expression (if) (let_condition (let) (tuple_struct_pattern (identifier) (() (mut_pattern (mutable_specifier) (identifier)) ())) (=) (identifier)) (block ({) (expression_statement (assignment_expression (identifier) (=) (field_expression (parenthesized_expression (() (unary_expression (*) (identifier)) ())) (.) (field_identifier))) (;)) (expression_statement (assignment_expression (field_expression (parenthesized_expression (() (unary_expression (*) (identifier)) ())) (.) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (arguments (() (identifier) ())))) (;)) (})) (else_clause (else) (block ({) (expression_statement (return_expression (return) (identifier)) (;)) (}))))) (})))) (expression_statement (macro_invocation (identifier) (!) (token_tree (() ()))) (;)) (}))) (}))))