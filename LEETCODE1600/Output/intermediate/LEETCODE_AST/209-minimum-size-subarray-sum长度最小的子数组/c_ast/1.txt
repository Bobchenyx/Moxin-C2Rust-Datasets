(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (sized_type_specifier (long)) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (comment) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (cast_expression (() (type_descriptor (sized_type_specifier (long))) ()) (subscript_expression (identifier) ([) (identifier) (])))) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (>=) (cast_expression (() (type_descriptor (sized_type_specifier (long))) ()) (parenthesized_expression (() (binary_expression (identifier) (+) (subscript_expression (identifier) ([) (identifier) (]))) ())))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (-=) (cast_expression (() (type_descriptor (sized_type_specifier (long))) ()) (subscript_expression (identifier) ([) (identifier) (])))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (identifier) (>=) (identifier)) ())) (&&) (parenthesized_expression (() (binary_expression (identifier) (>=) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (-) (identifier)) (+) (number_literal)) ()))) ()))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (binary_expression (identifier) (-) (identifier)) (+) (number_literal))) (;)) (comment) (}))) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (identifier) (!=) (number_literal)) ())) (&&) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ()))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (return_statement (return) (conditional_expression (binary_expression (identifier) (!=) (number_literal)) (?) (identifier) (:) (number_literal)) (;)) (}))))