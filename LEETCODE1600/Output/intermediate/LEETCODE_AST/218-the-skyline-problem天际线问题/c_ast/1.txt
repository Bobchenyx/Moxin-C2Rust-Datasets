(translation_unit (comment) (preproc_def (#define) (identifier) (preproc_arg)) (preproc_def (#define) (identifier) (preproc_arg)) (preproc_def (#define) (identifier) (preproc_arg)) (preproc_def (#define) (identifier) (preproc_arg)) (preproc_def (#define) (identifier) (preproc_arg)) (preproc_def (#define) (identifier) (preproc_arg)) (type_definition (typedef) (struct_specifier (struct) (field_declaration_list ({) (field_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (field_identifier))) (;)) (field_declaration (primitive_type) (field_identifier) (;)) (field_declaration (primitive_type) (pointer_declarator (*) (field_identifier)) (;)) (}))) (type_identifier) (;)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (identifier) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (!=) (null (NULL))) ())) (compound_statement ({) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) (!=) (null (NULL))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) ()))) (;)) (expression_statement (assignment_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) (=) (null (NULL))) (;)) (}))) (}))) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (null (NULL))) (;)) (}))) (return_statement (return) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (identifier) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*) (abstract_pointer_declarator (*)))) ()) (call_expression (identifier) (argument_list (() (identifier) (,) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ())) ()))))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (==) (null (NULL))) ())) (compound_statement ({) (return_statement (return) (identifier) (;)) (}))) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (identifier) (,) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) ()))))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (==) (null (NULL))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (return_statement (return) (identifier) (;)) (}))) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (identifier) (,) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) ()))))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) (==) (null (NULL))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (return_statement (return) (identifier) (;)) (}))) (expression_statement (assignment_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) (=) (identifier)) (;)) (}))) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (number_literal)) (;)) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (field_expression (identifier) (->) (field_identifier)) (])) ([) (number_literal) (])) (=) (identifier)) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (field_expression (identifier) (->) (field_identifier)) (])) ([) (number_literal) (])) (=) (identifier)) (;)) (expression_statement (update_expression (field_expression (identifier) (->) (field_identifier)) (++)) (;)) (return_statement (return) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (pointer_declarator (*) (identifier)) (;)) (declaration (primitive_type) (pointer_declarator (*) (identifier)) (;)) (declaration (primitive_type) (identifier) (;)) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (==) (identifier)) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (string_literal (") (string_content) (escape_sequence) (")) ()))) (;)) (return_statement (return) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (==) (number_literal)) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) ()))) (;)) (return_statement (return) (;)) (}))) (expression_statement (assignment_expression (identifier) (=) (pointer_expression (&) (parenthesized_expression (() (subscript_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (binary_expression (field_expression (identifier) (->) (field_identifier)) (-) (number_literal)) (])) ([) (number_literal) (])) ())))) (;)) (expression_statement (assignment_expression (identifier) (=) (pointer_expression (&) (parenthesized_expression (() (subscript_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (binary_expression (field_expression (identifier) (->) (field_identifier)) (-) (number_literal)) (])) ([) (number_literal) (])) ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (!=) (pointer_expression (*) (identifier))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) ()))) (;)) (return_statement (return) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (pointer_expression (*) (identifier)) (!=) (number_literal)) (&&) (binary_expression (identifier) (!=) (number_literal))) ())) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (conditional_expression (binary_expression (pointer_expression (*) (identifier)) (>) (identifier)) (?) (pointer_expression (*) (identifier)) (:) (identifier))) (;)) (return_statement (return) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (pointer_expression (*) (identifier)) (==) (number_literal)) (&&) (binary_expression (identifier) (!=) (number_literal))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (subscript_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (binary_expression (field_expression (identifier) (->) (field_identifier)) (-) (number_literal)) (])) ([) (number_literal) (]))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (identifier)) ())) (compound_statement ({) (expression_statement (update_expression (field_expression (identifier) (->) (field_identifier)) (--)) (;)) (return_statement (return) (;)) (}))) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (identifier)) (;)) (return_statement (return) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (pointer_expression (*) (identifier)) (!=) (number_literal)) (&&) (binary_expression (identifier) (==) (number_literal))) ())) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (number_literal)) (;)) (return_statement (return) (;)) (}))) (return_statement (return) (;)) (}))) (type_definition (typedef) (struct_specifier (struct) (field_declaration_list ({) (field_declaration (primitive_type) (field_identifier) (;)) (field_declaration (primitive_type) (field_identifier) (;)) (field_declaration (primitive_type) (field_identifier) (;)) (field_declaration (primitive_type) (field_identifier) (;)) (field_declaration (type_identifier) (field_identifier) (;)) (}))) (type_identifier) (;)) (type_definition (typedef) (struct_specifier (struct) (field_declaration_list ({) (field_declaration (type_identifier) (array_declarator (field_identifier) ([) (identifier) (])) (;)) (field_declaration (primitive_type) (field_identifier) (;)) (field_declaration (type_identifier) (pointer_declarator (*) (field_identifier)) (;)) (field_declaration (primitive_type) (field_identifier) (;)) (}))) (type_identifier) (;)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (field_expression (identifier) (->) (field_identifier)) ()))) (;)) (return_statement (return) (;)) (}))) (declaration (type_identifier) (identifier) (;)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (==) (identifier)) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (string_literal (") (string_content) (escape_sequence) (")) ()))) (;)) (return_statement (return) (;)) (}))) (expression_statement (assignment_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (field_expression (identifier) (->) (field_identifier)) (])) (=) (pointer_expression (*) (identifier))) (;)) (expression_statement (update_expression (field_expression (identifier) (->) (field_identifier)) (++)) (;)) (return_statement (return) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_qualifier (const)) (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (type_qualifier (const)) (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (type_identifier) (abstract_pointer_declarator (*))) ()) (identifier))) (;)) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (type_identifier) (abstract_pointer_declarator (*))) ()) (identifier))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (!=) (field_expression (identifier) (->) (field_identifier))) ())) (compound_statement ({) (return_statement (return) (binary_expression (field_expression (identifier) (->) (field_identifier)) (>) (field_expression (identifier) (->) (field_identifier))) (;)) (}))) (return_statement (return) (binary_expression (field_expression (identifier) (->) (field_identifier)) (>) (field_expression (identifier) (->) (field_identifier))) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (identifier) (;)) (declaration (type_identifier) (identifier) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (number_literal)) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (number_literal) (]))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (]))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (identifier)) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (pointer_expression (&) (identifier)) ()))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (number_literal) (]))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (]))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (identifier)) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (pointer_expression (&) (identifier)) ()))) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) (,) (field_expression (identifier) (->) (field_identifier)) (,) (sizeof_expression (sizeof) (parenthesized_expression (() (identifier) ()))) (,) (identifier) ()))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (null (NULL))) (;)) (return_statement (return) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (type_identifier) (pointer_declarator (*) (identifier)) (;)) (declaration (type_identifier) (pointer_declarator (*) (identifier)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (identifier)) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (field_expression (identifier) (->) (field_identifier)) (,) (identifier) (,) (identifier) ()))) (;)) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (conditional_expression (binary_expression (identifier) (>) (field_expression (identifier) (->) (field_identifier))) (?) (identifier) (:) (field_expression (identifier) (->) (field_identifier)))) (;)) (})) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (identifier)) (;)) (return_statement (return) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (call_expression (identifier) (argument_list (() (identifier) (,) (field_expression (identifier) (->) (field_identifier)) ()))) (==) (number_literal)) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (field_expression (identifier) (->) (field_identifier)) (,) (field_expression (identifier) (->) (field_identifier)) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) (,) (identifier) (,) (identifier) ()))) (;)) (return_statement (return) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (<=) (field_expression (identifier) (->) (field_identifier))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) (,) (identifier) (,) (identifier) ()))) (;)) (return_statement (return) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (field_expression (identifier) (->) (field_identifier)) (,) (field_expression (identifier) (->) (field_identifier)) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) (,) (identifier) (,) (identifier) ()))) (;)) (return_statement (return) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (type_identifier) (pointer_declarator (*) (identifier)) (;)) (comment) (expression_statement (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) (,) (pointer_expression (&) (parenthesized_expression (() (field_expression (identifier) (->) (field_identifier)) ()))) (,) (identifier) ()))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (string_literal (") (string_content) (escape_sequence) (")) (,) (field_expression (identifier) (->) (field_identifier)) ()))) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) (,) (identifier) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (call_expression (identifier) (argument_list (() (identifier) (,) (field_expression (identifier) (->) (field_identifier)) ()))) (==) (number_literal)) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (field_expression (identifier) (->) (field_identifier)) (,) (number_literal) ()))) (;)) (return_statement (return) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (>) (field_expression (identifier) (->) (field_identifier))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (field_expression (identifier) (->) (field_identifier)) (,) (field_expression (identifier) (->) (field_identifier)) ()))) (;)) (return_statement (return) (;)) (}))) (return_statement (return) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (identifier) (;)) (declaration (type_identifier) (pointer_declarator (*) (identifier)) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (field_expression (identifier) (->) (field_identifier))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (expression_statement (assignment_expression (identifier) (=) (pointer_expression (&) (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (==) (identifier)) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) ()))) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) ()))) (;)) (})))) (}))) (return_statement (return) (;)) (}))) (function_definition (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) ()))))) (compound_statement ({) (declaration (type_identifier) (identifier) (;)) (expression_statement (call_expression (identifier) (argument_list (() (pointer_expression (&) (identifier)) (,) (identifier) (,) (identifier) (,) (identifier) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (pointer_expression (&) (identifier)) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (pointer_expression (&) (identifier)) (,) (pointer_expression (&) (identifier)) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (pointer_expression (&) (identifier)) ()))) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (field_expression (identifier) (.) (field_identifier))) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (field_expression (identifier) (.) (field_identifier))) (;)) (return_statement (return) (field_expression (identifier) (.) (field_identifier)) (;)) (}))))