(translation_unit (function_definition (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (declaration (struct_specifier (struct) (type_identifier)) (identifier) (;)) (declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier)) (,) (pointer_declarator (*) (identifier)) (;)) (if_statement (if) (parenthesized_expression (() (unary_expression (!) (identifier)) ())) (compound_statement ({) (return_statement (return) (identifier) (;)) (}))) (if_statement (if) (parenthesized_expression (() (unary_expression (!) (identifier)) ())) (compound_statement ({) (return_statement (return) (identifier) (;)) (}))) (comment) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (pointer_expression (&) (identifier))) (;)) (comment) (while_statement (while) (parenthesized_expression (() (identifier) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (if_statement (if) (parenthesized_expression (() (unary_expression (!) (field_expression (identifier) (->) (field_identifier))) ())) (compound_statement ({) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (identifier)) (;)) (break_statement (break) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (>=) (field_expression (identifier) (->) (field_identifier))) ())) (compound_statement ({) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (}))) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (}))) (return_statement (return) (field_expression (identifier) (.) (field_identifier)) (;)) (}))) (function_definition (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) ())))) (compound_statement ({) (declaration (primitive_type) (identifier) (;)) (declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier)) (,) (pointer_declarator (*) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (compound_statement ({) (return_statement (return) (null (NULL)) (;)) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (compound_statement ({) (return_statement (return) (subscript_expression (identifier) ([) (number_literal) (])) (;)) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (compound_statement ({) (return_statement (return) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (number_literal) (])) (,) (subscript_expression (identifier) ([) (number_literal) (])) ()))) (;)) (}))))))) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (pointer_expression (&) (subscript_expression (identifier) ([) (number_literal) (]))) (,) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ())) (/) (number_literal)) ())))) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (pointer_expression (&) (subscript_expression (identifier) ([) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ())) (/) (number_literal)) (]))) (,) (binary_expression (identifier) (-) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ())) (/) (number_literal))) ())))) (;)) (return_statement (return) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ()))) (;)) (}))) (function_definition (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) ())))) (compound_statement ({) (return_statement (return) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ()))) (;)) (}))))