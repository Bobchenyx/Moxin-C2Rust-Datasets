(translation_unit (comment) (preproc_include (#include) (system_lib_string)) (preproc_include (#include) (system_lib_string)) (function_definition (storage_class_specifier (static)) (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (compound_statement ({) (return_statement (return) (identifier) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (compound_statement ({) (return_statement (return) (identifier) (;)) (}))) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (<=) (field_expression (identifier) (->) (field_identifier))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ())))) (;)) (return_statement (return) (identifier) (;)) (}))) (comment) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ())))) (;)) (return_statement (return) (identifier) (;)) (}))) (function_definition (storage_class_specifier (static)) (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_qualifier (const)) (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (type_qualifier (const)) (primitive_type) (identifier)) ())))) (compound_statement ({) (declaration (primitive_type) (identifier) (;)) (declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (compound_statement ({) (return_statement (return) (null (NULL)) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (compound_statement ({) (return_statement (return) (subscript_expression (identifier) ([) (number_literal) (])) (;)) (}))) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (/) (number_literal))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>=) (number_literal)) ())) (compound_statement ({) (comment) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ()))) (,) (call_expression (identifier) (argument_list (() (pointer_expression (&) (subscript_expression (identifier) ([) (identifier) (]))) (,) (binary_expression (identifier) (-) (identifier)) ()))) ())))) (;)) (}))) (return_statement (return) (identifier) (;)) (}))) (preproc_if (#if) (number_literal) (
) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() ()))) (compound_statement ({) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (identifier)) (=) (null (NULL))) (;)) (preproc_if (#if) (number_literal) (
) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (array_declarator (identifier) ([) (])) (=) (initializer_list ({) (number_literal) (,) (number_literal) (,) (number_literal) (}))) (;)) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (array_declarator (identifier) ([) (])) (=) (initializer_list ({) (number_literal) (,) (number_literal) (,) (number_literal) (}))) (;)) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (array_declarator (identifier) ([) (])) (=) (initializer_list ({) (number_literal) (,) (number_literal) (}))) (;)) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (array_declarator (identifier) ([) (])) (=) (initializer_list ({) (number_literal) (,) (number_literal) (,) (number_literal) (,) (number_literal) (,) (number_literal) (}))) (;)) (#endif)) (declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier)) (;)) (declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier)) (;)) (declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier)) (;)) (declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier)) (;)) (declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (pointer_declarator (*) (identifier))) (;)) (declaration (primitive_type) (identifier) (;)) (expression_statement (assignment_expression (identifier) (=) (cast_expression (() (type_descriptor (struct_specifier (struct) (type_identifier)) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (struct_specifier (struct) (type_identifier))) ())) (*) (number_literal)) ()))))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (number_literal)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) (=) (pointer_expression (&) (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])))) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) (.) (field_identifier)) (=) (null (NULL))) (;)) (}))) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (.) (field_identifier)) (=) (number_literal)) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (.) (field_identifier)) (=) (number_literal)) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (.) (field_identifier)) (=) (number_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (cast_expression (() (type_descriptor (struct_specifier (struct) (type_identifier)) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (struct_specifier (struct) (type_identifier))) ())) (*) (number_literal)) ()))))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (number_literal)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) (=) (pointer_expression (&) (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])))) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) (.) (field_identifier)) (=) (null (NULL))) (;)) (}))) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (.) (field_identifier)) (=) (number_literal)) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (.) (field_identifier)) (=) (number_literal)) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (.) (field_identifier)) (=) (number_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (cast_expression (() (type_descriptor (struct_specifier (struct) (type_identifier)) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (struct_specifier (struct) (type_identifier))) ())) (*) (number_literal)) ()))))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (number_literal)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) (=) (pointer_expression (&) (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])))) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) (.) (field_identifier)) (=) (null (NULL))) (;)) (}))) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (.) (field_identifier)) (=) (number_literal)) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (.) (field_identifier)) (=) (number_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (cast_expression (() (type_descriptor (struct_specifier (struct) (type_identifier)) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (struct_specifier (struct) (type_identifier))) ())) (*) (number_literal)) ()))))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (number_literal)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) (=) (pointer_expression (&) (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])))) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) (.) (field_identifier)) (=) (null (NULL))) (;)) (}))) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (.) (field_identifier)) (=) (number_literal)) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (.) (field_identifier)) (=) (number_literal)) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (.) (field_identifier)) (=) (number_literal)) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (.) (field_identifier)) (=) (number_literal)) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (.) (field_identifier)) (=) (number_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (cast_expression (() (type_descriptor (struct_specifier (struct) (type_identifier)) (abstract_pointer_declarator (*) (abstract_pointer_declarator (*)))) ()) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (*) (sizeof_expression (sizeof) (() (type_descriptor (struct_specifier (struct) (type_identifier)) (abstract_pointer_declarator (*))) ()))) ()))))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (identifier)) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (identifier)) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (identifier)) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ())))) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (!=) (null (NULL))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (string_literal (") (string_content) (")) (,) (field_expression (identifier) (->) (field_identifier)) ()))) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (}))) (return_statement (return) (number_literal) (;)) (}))) (#endif)))