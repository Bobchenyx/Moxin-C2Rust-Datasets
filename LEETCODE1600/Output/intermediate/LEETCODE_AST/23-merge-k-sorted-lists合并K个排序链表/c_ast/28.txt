(translation_unit (function_definition (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) ())))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (return_statement (return) (number_literal) (;)) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (return_statement (return) (subscript_expression (identifier) ([) (number_literal) (])) (;)) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (compound_statement ({) (declaration (struct_specifier (struct) (type_identifier)) (identifier) (;)) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (subscript_expression (identifier) ([) (number_literal) (]))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (pointer_expression (&) (identifier))) (;)) (declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (number_literal) (])) (!=) (number_literal)) ())) (compound_statement ({) (while_statement (while) (parenthesized_expression (() (binary_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (->) (field_identifier)) (&&) (binary_expression (field_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (->) (field_identifier)) (->) (field_identifier)) (<) (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (->) (field_identifier)))) ())) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (->) (field_identifier))) (;))) (expression_statement (assignment_expression (identifier) (=) (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (->) (field_identifier))) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (->) (field_identifier)) (=) (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (->) (field_identifier))) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (->) (field_identifier)) (=) (subscript_expression (identifier) ([) (number_literal) (]))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (identifier)) (;)) (}))) (return_statement (return) (field_expression (identifier) (.) (field_identifier)) (;)) (}))))))) (declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (pointer_declarator (*) (array_declarator (identifier) ([) (binary_expression (identifier) (/) (number_literal)) (])))) (,) (pointer_declarator (*) (pointer_declarator (*) (array_declarator (identifier) ([) (binary_expression (identifier) (-) (binary_expression (identifier) (/) (number_literal))) (])))) (;)) (declaration (sized_type_specifier (short)) (identifier) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (binary_expression (identifier) (/) (number_literal))) (;) (update_expression (identifier) (++)) ()) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (subscript_expression (identifier) ([) (identifier) (]))) (;))) (for_statement (for) (() (assignment_expression (identifier) (=) (binary_expression (identifier) (/) (number_literal))) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (binary_expression (identifier) (/) (number_literal))) (])) (=) (subscript_expression (identifier) ([) (identifier) (]))) (;))) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (array_declarator (identifier) ([) (number_literal) (])))) (=) (initializer_list ({) (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (identifier) (/) (number_literal)) ()))) (,) (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (identifier) (-) (binary_expression (identifier) (/) (number_literal))) ()))) (}))) (;)) (return_statement (return) (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) ()))) (;)) (}))))