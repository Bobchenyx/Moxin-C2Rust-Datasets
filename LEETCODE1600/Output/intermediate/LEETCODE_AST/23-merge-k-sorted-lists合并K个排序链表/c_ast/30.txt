(translation_unit (function_definition (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) ())))) (compound_statement ({) (declaration (primitive_type) (identifier) (;)) (declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (array_declarator (identifier) ([) (number_literal) (]))) (;)) (declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier)) (;)) (declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (assignment_expression (identifier) (=) (null (NULL)))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (return_statement (return) (null (NULL)) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (return_statement (return) (subscript_expression (identifier) ([) (number_literal) (])) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (compound_statement ({) (while_statement (while) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (number_literal) (])) (&&) (subscript_expression (identifier) ([) (number_literal) (]))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (->) (field_identifier)) (<) (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (->) (field_identifier))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (identifier) ())) (compound_statement ({) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (subscript_expression (identifier) ([) (number_literal) (]))) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (assignment_expression (identifier) (=) (subscript_expression (identifier) ([) (number_literal) (])))) (;)) (})))) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (->) (field_identifier))) (;)) (})) (else_clause (else) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (identifier) ())) (compound_statement ({) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (subscript_expression (identifier) ([) (number_literal) (]))) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (assignment_expression (identifier) (=) (subscript_expression (identifier) ([) (number_literal) (])))) (;)) (})))) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (->) (field_identifier))) (;)) (})))) (}))) (if_statement (if) (parenthesized_expression (() (subscript_expression (identifier) ([) (number_literal) (])) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (identifier) ())) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (subscript_expression (identifier) ([) (number_literal) (]))) (;)) (else_clause (else) (expression_statement (assignment_expression (identifier) (=) (assignment_expression (identifier) (=) (subscript_expression (identifier) ([) (number_literal) (])))) (;)))) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (subscript_expression (identifier) ([) (number_literal) (])) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (identifier) ())) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (subscript_expression (identifier) ([) (number_literal) (]))) (;)) (else_clause (else) (expression_statement (assignment_expression (identifier) (=) (assignment_expression (identifier) (=) (subscript_expression (identifier) ([) (number_literal) (])))) (;)))) (}))))) (return_statement (return) (identifier) (;)) (}))) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (/) (number_literal))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ())))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (+) (identifier)) (,) (binary_expression (identifier) (-) (identifier)) ())))) (;)) (return_statement (return) (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) ()))) (;)) (}))))