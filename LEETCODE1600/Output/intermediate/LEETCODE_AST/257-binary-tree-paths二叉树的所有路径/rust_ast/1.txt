(source_file (use_declaration (use) (scoped_identifier (scoped_identifier (identifier) (::) (identifier)) (::) (identifier)) (;)) (use_declaration (use) (scoped_identifier (scoped_identifier (identifier) (::) (identifier)) (::) (identifier)) (;)) (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (>))) (>)))) ())) (->) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (=) (macro_invocation (identifier) (!) (token_tree ([) (]))) (;)) (expression_statement (if_expression (if) (let_condition (let) (tuple_struct_pattern (identifier) (() (identifier) ())) (=) (identifier)) (block ({) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (identifier) (,) (reference_expression (&) (mutable_specifier) (macro_invocation (identifier) (!) (token_tree ([) (])))) (,) (reference_expression (&) (mutable_specifier) (identifier)) ()))) (})) (else_clause (else) (block ({) (identifier) (}))))) (}))) (function_item (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (>)))) (,) (parameter (identifier) (:) (reference_type (&) (mutable_specifier) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))))) (,) (parameter (identifier) (:) (reference_type (&) (mutable_specifier) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))))) (,) ())) (->) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (call_expression (field_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (.) (field_identifier)) (arguments (() ()))) ()))) (;)) (expression_statement (match_expression (match) (tuple_expression (() (call_expression (field_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (.) (field_identifier)) (arguments (() ()))) (,) (call_expression (field_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (.) (field_identifier)) (arguments (() ()))) ())) (match_block ({) (match_arm (match_pattern (tuple_pattern (() (tuple_struct_pattern (identifier) (() (identifier) ())) (,) (tuple_struct_pattern (identifier) (() (identifier) ())) ()))) (=>) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (identifier) (,) (reference_expression (&) (mutable_specifier) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ())))) (,) (reference_expression (&) (mutable_specifier) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (identifier) (,) (reference_expression (&) (mutable_specifier) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ())))) (,) (identifier) ())))) (,) ()))) (,)) (match_arm (match_pattern (tuple_pattern (() (tuple_struct_pattern (identifier) (() (identifier) ())) (,) (identifier) ()))) (=>) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (identifier) (,) (reference_expression (&) (mutable_specifier) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ())))) (,) (identifier) ()))) (,)) (match_arm (match_pattern (tuple_pattern (() (identifier) (,) (tuple_struct_pattern (identifier) (() (identifier) ())) ()))) (=>) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (identifier) (,) (reference_expression (&) (mutable_specifier) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ())))) (,) (identifier) ()))) (,)) (match_arm (match_pattern (_)) (=>) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (string_literal (") (string_content) (")) ()))) ()))) (;)) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (}))) (})))) (}))) (}))))