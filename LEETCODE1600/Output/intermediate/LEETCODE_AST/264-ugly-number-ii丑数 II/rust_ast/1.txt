(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (primitive_type)) ())) (->) (primitive_type) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (macro_invocation (identifier) (!) (token_tree ([) (integer_literal) (]))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (expression_statement (for_expression (for) (_) (in) (range_expression (integer_literal) (..) (identifier)) (block ({) (let_declaration (let) (identifier) (=) (call_expression (field_expression (call_expression (field_expression (parenthesized_expression (() (binary_expression (integer_literal) (*) (index_expression (identifier) ([) (identifier) (]))) ())) (.) (field_identifier)) (arguments (() (binary_expression (integer_literal) (*) (index_expression (identifier) ([) (identifier) (]))) ()))) (.) (field_identifier)) (arguments (() (binary_expression (integer_literal) (*) (index_expression (identifier) ([) (identifier) (]))) ()))) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (identifier) ()))) (;)) (expression_statement (if_expression (if) (binary_expression (identifier) (==) (binary_expression (integer_literal) (*) (index_expression (identifier) ([) (identifier) (])))) (block ({) (expression_statement (compound_assignment_expr (identifier) (+=) (integer_literal)) (;)) (})))) (expression_statement (if_expression (if) (binary_expression (identifier) (==) (binary_expression (integer_literal) (*) (index_expression (identifier) ([) (identifier) (])))) (block ({) (expression_statement (compound_assignment_expr (identifier) (+=) (integer_literal)) (;)) (})))) (expression_statement (if_expression (if) (binary_expression (identifier) (==) (binary_expression (integer_literal) (*) (index_expression (identifier) ([) (identifier) (])))) (block ({) (expression_statement (compound_assignment_expr (identifier) (+=) (integer_literal)) (;)) (})))) (})))) (index_expression (identifier) ([) (binary_expression (type_cast_expression (identifier) (as) (primitive_type)) (-) (integer_literal)) (])) (}))) (}))))