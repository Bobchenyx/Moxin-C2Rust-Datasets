(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (type_identifier)) ())) (->) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (block ({) (call_expression (generic_function (field_expression (call_expression (field_expression (call_expression (field_expression (call_expression (field_expression (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() (integer_literal) ()))) ()))) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() (closure_expression (closure_parameters (|) (identifier) (|)) (binary_expression (binary_expression (field_expression (parenthesized_expression (() (field_expression (identifier) (.) (integer_literal)) ())) (.) (integer_literal)) (==) (char_literal)) (&&) (binary_expression (field_expression (parenthesized_expression (() (field_expression (identifier) (.) (integer_literal)) ())) (.) (integer_literal)) (==) (char_literal)))) ()))) (.) (field_identifier)) (arguments (() (closure_expression (closure_parameters (|) (identifier) (|)) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (parenthesized_expression (() (range_expression (field_expression (identifier) (.) (integer_literal)) (..) (binary_expression (field_expression (identifier) (.) (integer_literal)) (+) (integer_literal))) ())) (,) (string_literal (") (string_content) (")) ()))) (;)) (identifier) (}))) ()))) (.) (field_identifier)) (::) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (>))) (arguments (() ()))) (}))) (}))))