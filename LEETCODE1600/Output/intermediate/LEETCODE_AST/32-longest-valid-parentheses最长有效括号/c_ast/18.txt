(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (identifier) (,) (identifier) (,) (identifier) (,) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (null (NULL))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (unary_expression (!) (identifier)) (||) (binary_expression (parenthesized_expression (() (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) ())) (<) (number_literal))) ())) (return_statement (return) (number_literal) (;))) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) ())))) (;)) (if_statement (if) (parenthesized_expression (() (unary_expression (!) (identifier)) ())) (compound_statement ({) (return_statement (return) (number_literal) (;)) (}))) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (++) (identifier)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (char_literal (') (character) ('))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (==) (char_literal (') (character) ('))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (binary_expression (number_literal) (+) (subscript_expression (identifier) ([) (conditional_expression (binary_expression (identifier) (<) (number_literal)) (?) (number_literal) (:) (identifier)) (])))) (;)) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (==) (char_literal (') (character) ('))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (binary_expression (identifier) (-) (number_literal)) (-) (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (>=) (number_literal)) (&&) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (char_literal (') (character) (')))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (binary_expression (identifier) (-) (number_literal)) (-) (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (binary_expression (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (+) (number_literal)) (+) (subscript_expression (identifier) ([) (conditional_expression (binary_expression (identifier) (<) (number_literal)) (?) (number_literal) (:) (identifier)) (])))) (;)) (}))) (}))))) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (>) (identifier)) ())) (expression_statement (assignment_expression (identifier) (=) (subscript_expression (identifier) ([) (identifier) (]))) (;))) (}))) (}))) (return_statement (return) (identifier) (;)) (}))))