(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_qualifier (const)) (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (type_qualifier (const)) (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (return_statement (return) (binary_expression (pointer_expression (*) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (identifier))) (-) (pointer_expression (*) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (identifier)))) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (conditional_expression (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (number_literal)) ())) (?) (pointer_expression (*) (identifier)) (:) (call_expression (identifier) (argument_list (() (pointer_expression (*) (identifier)) (,) (pointer_expression (*) (identifier)) ()))))) (;)) (return_statement (return) (true) (;)) (}))) (while_statement (while) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (<) (identifier)) (&&) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (>) (identifier))) ())) (expression_statement (update_expression (identifier) (++)) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>=) (identifier)) ())) (return_statement (return) (false) (;))) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (/) (subscript_expression (identifier) ([) (identifier) (])))) (;)) (declaration (primitive_type) (identifier) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (false)) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (identifier)) (;) (binary_expression (identifier) (>=) (number_literal)) (;) (update_expression (identifier) (--)) ()) (compound_statement ({) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (pointer_expression (*) (identifier))) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (+=) (identifier)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (identifier) (-) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (*) (identifier))) (,) (identifier) (,) (identifier) (,) (binary_expression (identifier) (+) (number_literal)) (,) (identifier) (,) (identifier) ())))) (;)) (if_statement (if) (parenthesized_expression (() (identifier) ())) (expression_statement (assignment_expression (identifier) (=) (true)) (;))) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (identifier)) (;)) (}))) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (,) (identifier) ()))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (if_statement (if) (parenthesized_expression (() (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) (,) (identifier) (,) (number_literal) (,) (pointer_expression (&) (identifier)) (,) (pointer_expression (&) (identifier)) ()))) ())) (compound_statement ({) (return_statement (return) (identifier) (;)) (}))) (}))))