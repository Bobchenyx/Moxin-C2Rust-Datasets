(translation_unit (comment) (function_definition (primitive_type) (ERROR (ERROR)) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (ERROR (ERROR)) (identifier))) (,) (ERROR (ERROR)) (parameter_declaration (primitive_type) (ERROR (ERROR)) (identifier)) (,) (ERROR (ERROR)) (parameter_declaration (primitive_type) (ERROR (ERROR)) (identifier)) ()))) (compound_statement ({) (ERROR (ERROR)) (declaration (primitive_type) (ERROR (ERROR)) (identifier) (;)) (ERROR (ERROR)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (ERROR (ERROR)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (subscript_expression (identifier) ([) (identifier) (]))) ())) (ERROR (ERROR)) (compound_statement ({) (return_statement (return) (ERROR (ERROR)) (number_literal) (;)) (ERROR (ERROR)) (})))) (ERROR (ERROR)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<) (subscript_expression (identifier) ([) (number_literal) (]))) ())) (comment) (ERROR (ERROR)) (compound_statement ({) (ERROR (ERROR)) (return_statement (return) (ERROR (ERROR)) (number_literal) (;)) (ERROR (ERROR)) (}))) (function_definition (primitive_type) (ERROR (ERROR)) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (ERROR (ERROR)) (identifier))) (,) (ERROR (ERROR)) (parameter_declaration (primitive_type) (ERROR (ERROR)) (identifier)) (,) (ERROR (ERROR)) (parameter_declaration (primitive_type) (ERROR (ERROR)) (identifier)) ()))) (compound_statement ({) (ERROR (ERROR)) (declaration (primitive_type) (ERROR (ERROR)) (identifier) (;)) (ERROR (ERROR)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (ERROR (ERROR)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (subscript_expression (identifier) ([) (identifier) (]))) ())) (ERROR (ERROR)) (compound_statement ({) (return_statement (return) (ERROR (ERROR)) (number_literal) (;)) (ERROR (ERROR)) (})))) (ERROR (ERROR)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<) (subscript_expression (identifier) ([) (number_literal) (]))) ())) (comment) (ERROR (ERROR)) (compound_statement ({) (ERROR (ERROR)) (return_statement (return) (ERROR (ERROR)) (number_literal) (;)) (ERROR (ERROR)) (})) (ERROR (ERROR)) (else_clause (else) (ERROR (ERROR)) (compound_statement ({) (ERROR (ERROR)) (declaration (primitive_type) (ERROR (ERROR)) (init_declarator (identifier) (=) (binary_expression (identifier) (+) (number_literal))) (;)) (ERROR (ERROR)) (declaration (primitive_type) (ERROR (ERROR)) (identifier) (;)) (ERROR (ERROR)) (for_statement (for) (() (assignment_expression (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;) (binary_expression (identifier) (>=) (number_literal)) (;) (update_expression (identifier) (--)) ()) (ERROR (ERROR)) (compound_statement ({) (ERROR (ERROR)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (parenthesized_expression (() (binary_expression (identifier) (-) (subscript_expression (identifier) ([) (identifier) (]))) ())) ())))) (;)) (ERROR (ERROR)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (!=) (number_literal)) ())) (ERROR (ERROR)) (expression_statement (assignment_expression (identifier) (=) (parenthesized_expression (() (conditional_expression (binary_expression (identifier) (<) (identifier)) (?) (identifier) (:) (identifier)) ()))) (;))) (ERROR (ERROR)) (}))) (ERROR (ERROR)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (binary_expression (identifier) (+) (number_literal))) ())) (comment) (ERROR (ERROR)) (return_statement (return) (ERROR (ERROR)) (number_literal) (;))) (ERROR (ERROR)) (return_statement (return) (ERROR (ERROR)) (binary_expression (identifier) (+) (number_literal)) (;)) (ERROR (ERROR)) (})))) (ERROR (ERROR)) (return_statement (return) (ERROR (ERROR)) (number_literal) (;)) (}))) (ERROR (ERROR) (else) (ERROR)) (compound_statement ({) (ERROR (ERROR)) (declaration (primitive_type) (ERROR (ERROR)) (init_declarator (identifier) (=) (binary_expression (identifier) (+) (number_literal))) (;)) (ERROR (ERROR)) (declaration (primitive_type) (ERROR (ERROR)) (identifier) (;)) (ERROR (ERROR)) (for_statement (for) (() (assignment_expression (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;) (binary_expression (identifier) (>=) (number_literal)) (;) (update_expression (identifier) (--)) ()) (ERROR (ERROR)) (compound_statement ({) (ERROR (ERROR)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (parenthesized_expression (() (binary_expression (identifier) (-) (subscript_expression (identifier) ([) (identifier) (]))) ())) ())))) (;)) (ERROR (ERROR)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (!=) (number_literal)) ())) (ERROR (ERROR)) (expression_statement (assignment_expression (identifier) (=) (parenthesized_expression (() (conditional_expression (binary_expression (identifier) (<) (identifier)) (?) (identifier) (:) (identifier)) ()))) (;))) (ERROR (ERROR)) (}))) (ERROR (ERROR)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (binary_expression (identifier) (+) (number_literal))) ())) (comment) (ERROR (ERROR)) (return_statement (return) (ERROR (ERROR)) (number_literal) (;))) (ERROR (ERROR)) (return_statement (return) (ERROR (ERROR)) (binary_expression (identifier) (+) (number_literal)) (;)) (ERROR (ERROR)) (})) (ERROR (ERROR)) (return_statement (return) (ERROR (ERROR)) (number_literal) (;)) (}))))