(source_file (use_declaration (use) (scoped_identifier (scoped_identifier (identifier) (::) (identifier)) (::) (identifier)) (;)) (use_declaration (use) (scoped_identifier (scoped_identifier (identifier) (::) (identifier)) (::) (identifier)) (;)) (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>)))) (,) (parameter (identifier) (:) (primitive_type)) ())) (->) (primitive_type) (block ({) (line_comment (//)) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() ()))) (;)) (let_declaration (let) (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (expression_statement (for_expression (for) (tuple_pattern (() (identifier) (,) (identifier) ())) (in) (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (block ({) (expression_statement (compound_assignment_expr (identifier) (+=) (identifier)) (;)) (let_declaration (let) (identifier) (=) (binary_expression (identifier) (-) (identifier)) (;)) (line_comment (//)) (expression_statement (if_expression (if) (binary_expression (identifier) (==) (integer_literal)) (block ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (integer_literal))) (;)) (})) (else_clause (else) (if_expression (if) (let_condition (let) (tuple_struct_pattern (identifier) (() (reference_pattern (&) (identifier)) ())) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (reference_expression (&) (identifier)) ())))) (block ({) (line_comment (//)) (line_comment (//)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (arguments (() (identifier) (,) (binary_expression (identifier) (-) (identifier)) ())))) (;)) (})))))) (line_comment (//)) (line_comment (//)) (expression_statement (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (identifier) ()))) (.) (field_identifier)) (arguments (() (identifier) ()))) (;)) (})))) (type_cast_expression (identifier) (as) (primitive_type)) (}))) (}))))