(translation_unit (preproc_include (#include) (system_lib_string)) (preproc_include (#include) (system_lib_string)) (preproc_include (#include) (system_lib_string)) (preproc_include (#include) (system_lib_string)) (preproc_include (#include) (system_lib_string)) (preproc_include (#include) (system_lib_string)) (preproc_function_def (#define) (identifier) (preproc_params (() (identifier) (,) (identifier) ())) (preproc_arg)) (preproc_function_def (#define) (identifier) (preproc_params (() (identifier) (,) (identifier) ())) (preproc_arg)) (comment) (declaration (primitive_type) (array_declarator (identifier) ([) (number_literal) (])) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (initializer_list ({) (identifier) (}))) (;)) (comment) (comment) (comment) (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (==) (number_literal)) (||) (binary_expression (identifier) (<) (subscript_expression (identifier) ([) (number_literal) (])))) (||) (binary_expression (identifier) (>) (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])))) ())) (compound_statement ({) (goto_statement (goto) (statement_identifier) (;)) (}))) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (identifier)) (;)) (})) (else_clause (else) (compound_statement ({) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ())) (/) (number_literal))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (>) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (number_literal))) (;)) (})))) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (==) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (})) (else_clause (else) (compound_statement ({) (goto_statement (goto) (statement_identifier) (;)) (})))) (})))) (comment) (expression_statement (comma_expression (assignment_expression (identifier) (=) (number_literal)) (,) (assignment_expression (identifier) (=) (binary_expression (identifier) (-) (number_literal)))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (identifier)) (;)) (})) (else_clause (else) (compound_statement ({) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ())) (/) (number_literal))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (>) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (number_literal))) (;)) (})))) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (identifier)) (;)) (})) (else_clause (else) (compound_statement ({) (goto_statement (goto) (statement_identifier) (;)) (})))) (})))) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (number_literal)) (;)) (return_statement (return) (identifier) (;)) (labeled_statement (statement_identifier) (:) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (number_literal)) (;))) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (number_literal)) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (number_literal)) (;)) (return_statement (return) (identifier) (;)) (}))))