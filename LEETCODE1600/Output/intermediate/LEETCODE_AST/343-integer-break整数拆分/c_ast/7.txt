(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<=) (number_literal)) ())) (return_statement (return) (number_literal) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (return_statement (return) (number_literal) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (return_statement (return) (number_literal) (;))) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (/) (number_literal))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (%) (number_literal))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (/) (number_literal))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (number_literal) (==) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (-=) (number_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (comment) (}))) (comment) (comment) (return_statement (return) (binary_expression (call_expression (identifier) (argument_list (() (number_literal) (,) (identifier) ()))) (*) (call_expression (identifier) (argument_list (() (number_literal) (,) (identifier) ())))) (;)) (}))))