(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (identifier) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (<) (number_literal)) (||) (binary_expression (identifier) (<) (subscript_expression (identifier) ([) (number_literal) (])))) ())) (return_statement (return) (number_literal) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>) (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (]))) ())) (return_statement (return) (identifier) (;))) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (subscript_expression (identifier) ([) (identifier) (]))) ())) (compound_statement ({) (return_statement (return) (identifier) (;)) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>) (subscript_expression (identifier) ([) (identifier) (]))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (}))))) (}))) (return_statement (return) (identifier) (;)) (}))))