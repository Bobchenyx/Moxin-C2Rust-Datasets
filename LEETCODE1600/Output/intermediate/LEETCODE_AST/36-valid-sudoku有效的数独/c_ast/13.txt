(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (compound_statement ({) (return_statement (return) (false) (;)) (}))) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (identifier))) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*) (abstract_pointer_declarator (*)))) ()) (call_expression (identifier) (argument_list (() (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ())) (,) (identifier) ()))))) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (identifier))) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*) (abstract_pointer_declarator (*)))) ()) (call_expression (identifier) (argument_list (() (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ())) (,) (identifier) ()))))) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (identifier))) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*) (abstract_pointer_declarator (*)))) ()) (call_expression (identifier) (argument_list (() (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ())) (,) (identifier) ()))))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (,) (binary_expression (pointer_expression (*) (identifier)) (+) (number_literal)) ()))))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (,) (binary_expression (pointer_expression (*) (identifier)) (+) (number_literal)) ()))))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (,) (binary_expression (pointer_expression (*) (identifier)) (+) (number_literal)) ()))))) (;)) (}))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (pointer_expression (*) (identifier))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (]))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (!=) (char_literal (') (character) ('))) ())) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (-) (char_literal (') (character) (')))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (binary_expression (parenthesized_expression (() (binary_expression (identifier) (/) (number_literal)) ())) (*) (number_literal)) (+) (binary_expression (identifier) (/) (number_literal)))) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (+=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (+=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (+=) (number_literal)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (>) (number_literal)) (||) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (>) (number_literal))) (||) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (>) (number_literal))) ())) (compound_statement ({) (return_statement (return) (false) (;)) (}))) (}))) (}))) (}))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ()))) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (return_statement (return) (true) (;)) (}))))