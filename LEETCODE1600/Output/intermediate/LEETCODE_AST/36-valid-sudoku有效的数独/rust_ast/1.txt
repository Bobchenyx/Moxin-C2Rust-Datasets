(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (>)))) ())) (->) (primitive_type) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (>))) (=) (macro_invocation (identifier) (!) (token_tree ([) (identifier) (!) (token_tree ([) (integer_literal) (;) (integer_literal) (])) (;) (integer_literal) (]))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (>))) (=) (macro_invocation (identifier) (!) (token_tree ([) (identifier) (!) (token_tree ([) (integer_literal) (;) (integer_literal) (])) (;) (integer_literal) (]))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (>))) (=) (macro_invocation (identifier) (!) (token_tree ([) (identifier) (!) (token_tree ([) (integer_literal) (;) (integer_literal) (])) (;) (integer_literal) (]))) (;)) (let_declaration (let) (identifier) (:) (primitive_type) (=) (integer_literal) (;)) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (identifier)) (block ({) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (identifier)) (block ({) (expression_statement (if_expression (if) (binary_expression (index_expression (index_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (==) (char_literal)) (block ({) (expression_statement (continue_expression (continue)) (;)) (})))) (let_declaration (let) (identifier) (:) (primitive_type) (=) (type_cast_expression (parenthesized_expression (() (binary_expression (call_expression (field_expression (call_expression (field_expression (index_expression (index_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (.) (field_identifier)) (arguments (() (integer_literal) ()))) (.) (field_identifier)) (arguments (() ()))) (-) (integer_literal)) ())) (as) (primitive_type)) (;)) (let_declaration (let) (identifier) (:) (primitive_type) (=) (type_cast_expression (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (/) (integer_literal)) (*) (integer_literal)) (+) (binary_expression (identifier) (/) (integer_literal))) ())) (as) (primitive_type)) (;)) (expression_statement (compound_assignment_expr (index_expression (index_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (+=) (integer_literal)) (;)) (expression_statement (compound_assignment_expr (index_expression (index_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (+=) (integer_literal)) (;)) (expression_statement (compound_assignment_expr (index_expression (index_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (+=) (integer_literal)) (;)) (expression_statement (if_expression (if) (binary_expression (binary_expression (binary_expression (index_expression (index_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (>) (integer_literal)) (||) (binary_expression (index_expression (index_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (>) (integer_literal))) (||) (binary_expression (index_expression (index_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (>) (integer_literal))) (block ({) (expression_statement (return_expression (return) (boolean_literal (false))) (;)) (})))) (})))) (})))) (boolean_literal (true)) (}))) (}))))