(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (number_literal)) (||) (binary_expression (identifier) (==) (number_literal))) ())) (return_statement (return) (number_literal) (;))) (declaration (primitive_type) (init_declarator (identifier) (=) (conditional_expression (binary_expression (identifier) (<) (identifier)) (?) (identifier) (:) (identifier))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (conditional_expression (binary_expression (identifier) (>=) (identifier)) (?) (identifier) (:) (identifier))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (%) (identifier)) (==) (number_literal)) ())) (return_statement (return) (identifier) (;)) (else_clause (else) (return_statement (return) (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (identifier) (%) (identifier)) ()))) (;)))) (}))) (comment) (comment) (comment) (function_definition (type_identifier) (identifier) (compound_statement ({) (labeled_statement (statement_identifier) (:) (ERROR (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ())))) (compound_statement ({) (comment) (comment) (comment) (comment) (comment) (if_statement (if) (parenthesized_expression (() (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (==) (number_literal)) (&&) (binary_expression (identifier) (==) (number_literal))) (&&) (binary_expression (identifier) (!=) (number_literal))) ())) ())) (comment) (return_statement (return) (false) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (==) (number_literal)) (&&) (binary_expression (identifier) (!=) (number_literal))) (&&) (binary_expression (identifier) (!=) (number_literal))) ())) (comment) (return_statement (return) (conditional_expression (binary_expression (binary_expression (identifier) (%) (identifier)) (==) (number_literal)) (?) (true) (:) (false)) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (==) (number_literal)) (&&) (binary_expression (identifier) (!=) (number_literal))) (&&) (binary_expression (identifier) (!=) (number_literal))) ())) (comment) (return_statement (return) (conditional_expression (binary_expression (binary_expression (identifier) (%) (identifier)) (==) (number_literal)) (?) (true) (:) (false)) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (+) (identifier)) (<) (identifier)) ())) (return_statement (return) (false) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (number_literal)) (||) (binary_expression (binary_expression (identifier) (%) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ())))) (==) (number_literal))) ())) (return_statement (return) (true) (;)) (else_clause (else) (return_statement (return) (false) (;)))) (}))) (}))) (expression_statement (;)))