(translation_unit (function_definition (type_identifier) (identifier) (compound_statement ({) (ERROR (binary_expression (binary_expression (identifier) (ERROR (:) (primitive_type) (identifier) (() (identifier)) (<) (identifier)) (<) (binary_expression (identifier) (>>) (pointer_expression (&) (identifier)))) ())) (compound_statement ({) (expression_statement (binary_expression (binary_expression (identifier) (<) (identifier)) (<) (binary_expression (number_literal) (>>) (call_expression (identifier) (argument_list (() (number_literal) ()))))) (;)) (comment) (expression_statement (binary_expression (binary_expression (identifier) (<) (identifier)) (<) (binary_expression (number_literal) (>>) (call_expression (identifier) (argument_list (() (number_literal) ()))))) (;)) (comment) (expression_statement (binary_expression (binary_expression (identifier) (<) (identifier)) (<) (binary_expression (number_literal) (>>) (call_expression (identifier) (argument_list (() (number_literal) ()))))) (;)) (comment) (expression_statement (comma_expression (binary_expression (binary_expression (identifier) (<) (identifier)) (<) (identifier)) (,) (binary_expression (identifier) (>>) (identifier))) (;)) (declaration (primitive_type) (identifier) (;)) (declaration (primitive_type) (identifier) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (number_literal)) (;) (update_expression (++) (identifier)) ()) (compound_statement ({) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (number_literal)) (;) (update_expression (++) (identifier)) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (]))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (binary_expression (identifier) (-) (char_literal (') (character) ('))) (-) (number_literal))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (!=) (char_literal (') (character) ('))) ())) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (=) (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (=) (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (binary_expression (binary_expression (identifier) (/) (number_literal)) (*) (number_literal)) (+) (binary_expression (identifier) (/) (number_literal))) (])) ([) (identifier) (])) (=) (number_literal)))) (;))) (}))) (}))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (;)) (;) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (==) (char_literal (') (character) ('))) ())) (compound_statement ({) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<=) (number_literal)) (;) (update_expression (++) (identifier)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (<=) (number_literal)) (&&) (unary_expression (!) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (binary_expression (identifier) (-) (number_literal)) (])) (|) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (binary_expression (identifier) (-) (number_literal)) (]))) (|) (subscript_expression (subscript_expression (identifier) ([) (binary_expression (binary_expression (binary_expression (identifier) (/) (number_literal)) (*) (number_literal)) (+) (binary_expression (identifier) (/) (number_literal))) (])) ([) (binary_expression (identifier) (-) (number_literal)) (]))) ())))) ())) (compound_statement ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ()))) ()))) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (binary_expression (identifier) (-) (number_literal)) (])) (=) (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (binary_expression (identifier) (-) (number_literal)) (])) (=) (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (binary_expression (binary_expression (identifier) (/) (number_literal)) (*) (number_literal)) (+) (binary_expression (identifier) (/) (number_literal))) (])) ([) (binary_expression (identifier) (-) (number_literal)) (])) (=) (number_literal)))) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (=) (binary_expression (identifier) (+) (char_literal (') (character) (')))) (;)) (expression_statement (update_expression (++) (identifier)) (;)) (break_statement (break) (;)) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>=) (number_literal)) ())) (compound_statement ({) (declaration (storage_class_specifier (auto)) (type_identifier) (init_declarator (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ())))) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (.) (field_identifier))) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (.) (field_identifier))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (-) (char_literal (') (character) (')))) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (binary_expression (identifier) (-) (number_literal)) (])) (=) (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (binary_expression (identifier) (-) (number_literal)) (])) (=) (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (binary_expression (binary_expression (identifier) (/) (number_literal)) (*) (number_literal)) (+) (binary_expression (identifier) (/) (number_literal))) (])) ([) (binary_expression (identifier) (-) (number_literal)) (])) (=) (number_literal)))) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (=) (char_literal (') (character) ('))) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ()))) (;)) (}))))) (}))) (})) (else_clause (else) (expression_statement (update_expression (++) (identifier)) (;)))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (update_expression (++) (identifier)) (==) (number_literal)) ())) (return_statement (return) (;))) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (}))) (}))) (return_statement (return) (;)) (})) (}))) (expression_statement (;)))