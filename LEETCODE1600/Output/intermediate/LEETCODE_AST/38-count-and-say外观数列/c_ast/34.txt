(translation_unit (comment) (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ())))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (return_statement (return) (identifier) (;)) (else_clause (else) (compound_statement ({) (comment) (declaration (primitive_type) (identifier) (;)) (declaration (primitive_type) (array_declarator (identifier) ([) (number_literal) (])) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (identifier)) (;)) (comment) (while_statement (while) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (!=) (char_literal (') (escape_sequence) ('))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (comment) (while_statement (while) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ())))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (comment) (expression_statement (assignment_expression (pointer_expression (*) (update_expression (identifier) (++))) (=) (cast_expression (() (type_descriptor (primitive_type)) ()) (parenthesized_expression (() (binary_expression (identifier) (+) (char_literal (') (character) ('))) ())))) (;)) (expression_statement (assignment_expression (pointer_expression (*) (update_expression (identifier) (++))) (=) (pointer_expression (*) (update_expression (identifier) (++)))) (;)) (}))) (return_statement (return) (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (identifier) (-) (number_literal)) ()))) (;)) (})))) (}))) (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ())))) (compound_statement ({) (return_statement (return) (call_expression (identifier) (argument_list (() (string_literal (") (string_content) (")) (,) (identifier) ()))) (;)) (}))))