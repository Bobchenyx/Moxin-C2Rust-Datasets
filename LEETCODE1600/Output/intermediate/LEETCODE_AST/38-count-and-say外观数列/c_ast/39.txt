(translation_unit (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ())))) (compound_statement ({) (declaration (primitive_type) (init_declarator (array_declarator (identifier) ([) (number_literal) (])) (=) (string_literal (") (string_content) ("))) (,) (init_declarator (array_declarator (identifier) ([) (number_literal) (])) (=) (string_literal (") (escape_sequence) ("))) (,) (pointer_declarator (*) (identifier)) (,) (pointer_declarator (*) (identifier)) (;)) (while_statement (while) (parenthesized_expression (() (update_expression (--) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (subscript_expression (identifier) ([) (number_literal) (]))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (do_statement (do) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (identifier)) ())) (expression_statement (update_expression (identifier) (++)) (;)) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (update_expression (identifier) (++))) (=) (binary_expression (identifier) (+) (char_literal (') (character) (')))) (;)) (expression_statement (assignment_expression (pointer_expression (*) (update_expression (identifier) (++))) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (pointer_expression (*) (identifier))) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (})))) (})) (while) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (!=) (char_literal (') (escape_sequence) ('))) ())) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (char_literal (') (escape_sequence) ('))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ()))) (;)) (}))) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (return_statement (return) (identifier) (;)) (}))))