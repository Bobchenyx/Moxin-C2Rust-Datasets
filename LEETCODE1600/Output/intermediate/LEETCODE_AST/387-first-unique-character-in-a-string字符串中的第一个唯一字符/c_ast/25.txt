(translation_unit (declaration (primitive_type) (array_declarator (identifier) ([) (number_literal) (])) (;)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (null (NULL))) (||) (binary_expression (subscript_expression (identifier) ([) (number_literal) (])) (==) (number_literal))) ())) (return_statement (return) (number_literal) (;))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (number_literal)) (;) (update_expression (++) (identifier)) ()) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (number_literal)) (;))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (subscript_expression (identifier) ([) (identifier) (])) (;) (update_expression (++) (identifier)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (subscript_expression (identifier) ([) (subscript_expression (identifier) ([) (identifier) (])) (])) ())) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (subscript_expression (identifier) ([) (identifier) (])) (])) (=) (number_literal)) (;)) (else_clause (else) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (subscript_expression (identifier) ([) (identifier) (])) (])) (=) (binary_expression (identifier) (+) (number_literal))) (;)))) (comment) (}))) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (number_literal)) (;) (update_expression (++) (identifier)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (&&) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (!=) (number_literal))) (&&) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (<) (identifier))) ())) (expression_statement (assignment_expression (identifier) (=) (subscript_expression (identifier) ([) (identifier) (]))) (;))) (}))) (return_statement (return) (parenthesized_expression (() (conditional_expression (binary_expression (identifier) (==) (number_literal)) (?) (number_literal) (:) (binary_expression (identifier) (-) (number_literal))) ())) (;)) (}))))