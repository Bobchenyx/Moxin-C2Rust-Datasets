(translation_unit (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ()))) ()))))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (++) (identifier)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (!=) (char_literal (') (character) ('))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (binary_expression (identifier) (-) (number_literal))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (parenthesized_expression (() (assignment_expression (identifier) (+=) (number_literal)) ())) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ()))) ())))) (;)) (}))) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (++) (identifier)) (])) (=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (})) (else_clause (else) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ()))) ()))))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (!=) (char_literal (') (character) ('))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (binary_expression (identifier) (-) (number_literal))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (parenthesized_expression (() (assignment_expression (identifier) (+=) (number_literal)) ())) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ()))) ())))) (;)) (}))) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (++) (identifier)) (])) (=) (subscript_expression (identifier) ([) (update_expression (identifier) (--)) (]))) (;)) (}))) (declaration (primitive_type) (array_declarator (identifier) ([) (number_literal) (])) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (update_expression (identifier) (--))) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (!=) (number_literal)) (&&) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (>=) (char_literal (') (character) (')))) (&&) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (<=) (char_literal (') (character) (')))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (--)) (;)) (}))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (+) (number_literal))) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (++) (identifier)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ()))) (])) (=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (}))) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ()))) (])) (=) (char_literal (') (escape_sequence) ('))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (call_expression (identifier) (argument_list (() (identifier) ())))) (;) (update_expression (++) (identifier)) ()) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (identifier)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (!=) (number_literal)) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (binary_expression (identifier) (-) (number_literal))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (parenthesized_expression (() (assignment_expression (identifier) (+=) (number_literal)) ())) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ()))) ())))) (;)) (}))) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (++) (identifier)) (])) (=) (subscript_expression (identifier) ([) (update_expression (identifier) (--)) (]))) (;)) (}))) (}))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (expression_statement (assignment_expression (identifier) (=) (null (NULL))) (;)) (})))) (}))) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ())) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ()))) ())))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (++) (identifier)) (])) (=) (char_literal (') (escape_sequence) ('))) (;)) (return_statement (return) (identifier) (;)) (}))))