(translation_unit (preproc_include (#include) (system_lib_string)) (preproc_include (#include) (system_lib_string)) (preproc_include (#include) (system_lib_string)) (preproc_include (#include) (system_lib_string)) (preproc_def (#define) (identifier) (preproc_arg)) (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (identifier)) ())))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (char_literal (') (escape_sequence) (')) (,) (identifier) ()))) (;)) (declaration (primitive_type) (init_declarator (array_declarator (identifier) ([) (identifier) (])) (=) (initializer_list ({) (char_literal (') (escape_sequence) (')) (}))) (;)) (declaration (primitive_type) (init_declarator (array_declarator (identifier) ([) (identifier) (])) (=) (initializer_list ({) (char_literal (') (escape_sequence) (')) (}))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (identifier) (+) (number_literal)) (,) (identifier) (,) (call_expression (identifier) (argument_list (() (identifier) ()))) ()))) (;)) (comment) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (binary_expression (identifier) (+) (number_literal))) (;)) (declaration (primitive_type) (pointer_declarator (*) (identifier)) (;)) (comment) (declaration (primitive_type) (pointer_declarator (*) (identifier)) (;)) (comment) (declaration (primitive_type) (identifier) (;)) (comment) (while_statement (while) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (!=) (char_literal (') (escape_sequence) ('))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (char_literal (') (character) ('))) ())) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (char_literal (') (escape_sequence) ('))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (+) (number_literal)) ())))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (comment) (while_statement (while) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (!=) (char_literal (') (character) ('))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (--)) (;)) (}))) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (char_literal (') (escape_sequence) ('))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (+) (number_literal)) ())))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (identifier) (+) (number_literal)) (,) (identifier) ()))) (;)) (comment) (comment) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (while_statement (while) (parenthesized_expression (() (call_expression (identifier) (argument_list (() (pointer_expression (*) (identifier)) ()))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (--)) (;)) (}))) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (+) (number_literal)) ())))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (binary_expression (identifier) (+) (number_literal)) (+) (binary_expression (identifier) (*) (identifier))) (,) (binary_expression (identifier) (+) (number_literal)) (,) (identifier) ()))) (;)) (comment) (comment) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (binary_expression (identifier) (+) (number_literal)) (+) (binary_expression (identifier) (*) (identifier))) (,) (identifier) (,) (identifier) ()))) (;)) (}))) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (binary_expression (identifier) (*) (identifier)))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (binary_expression (binary_expression (identifier) (+) (number_literal)) (+) (binary_expression (identifier) (*) (identifier))) (+) (identifier)) (,) (char_literal (') (escape_sequence) (')) (,) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ())) (-) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (+) (number_literal)) (+) (binary_expression (identifier) (*) (identifier))) (+) (identifier)) ()))) ()))) (;)) (comment) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (char_literal (') (escape_sequence) (')) (,) (identifier) ()))) (;)) (comment) (}))) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (identifier) (+) (number_literal)) (,) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (+) (number_literal)) ()))) ()))) (;)) (return_statement (return) (identifier) (;)) (}))))