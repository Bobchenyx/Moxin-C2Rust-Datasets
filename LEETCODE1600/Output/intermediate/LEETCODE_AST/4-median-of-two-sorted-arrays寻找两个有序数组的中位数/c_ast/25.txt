(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (,) (identifier) (,) (identifier) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (conditional_expression (parenthesized_expression (() (binary_expression (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ())) (%) (number_literal)) (==) (number_literal)) ())) (?) (number_literal) (:) (number_literal))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (identifier) (+) (identifier)) (-) (number_literal)) ())) (/) (number_literal))) (;)) (declaration (primitive_type) (array_declarator (identifier) ([) (number_literal) (])) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (<) (binary_expression (identifier) (+) (identifier))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (conditional_expression (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (?) (subscript_expression (identifier) ([) (identifier) (])) (:) (number_literal))) (;)) (expression_statement (assignment_expression (identifier) (=) (conditional_expression (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (?) (subscript_expression (identifier) ([) (identifier) (])) (:) (number_literal))) (;)) (expression_statement (conditional_expression (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (?) (parenthesized_expression (() (update_expression (identifier) (++)) ())) (:) (parenthesized_expression (() (update_expression (identifier) (++)) ()))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (update_expression (identifier) (++)) (>=) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (identifier) (++)) (])) (=) (conditional_expression (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (?) (identifier) (:) (identifier))) (;)) (}))) (}))) (return_statement (return) (conditional_expression (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (?) (cast_expression (() (type_descriptor (primitive_type)) ()) (subscript_expression (identifier) ([) (number_literal) (]))) (:) (binary_expression (parenthesized_expression (() (binary_expression (cast_expression (() (type_descriptor (primitive_type)) ()) (subscript_expression (identifier) ([) (number_literal) (]))) (+) (subscript_expression (identifier) ([) (number_literal) (]))) ())) (/) (number_literal))) (;)) (}))))