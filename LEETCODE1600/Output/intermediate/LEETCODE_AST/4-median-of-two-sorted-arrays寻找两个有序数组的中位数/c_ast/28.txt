(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (identifier)) (,) (init_declarator (identifier) (=) (identifier)) (;)) (declaration (primitive_type) (identifier) (,) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (,) (identifier) (,) (identifier) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) ()))))) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (compound_statement ({) (while_statement (while) (parenthesized_expression (() (binary_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (>) (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ())))) ())) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (=) (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ())))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (identifier)) ())) (compound_statement ({) (break_statement (break) (;)) (}))) (}))) (}))) (expression_statement (assignment_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (=) (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ())))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (=) (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ())))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ())) (%) (number_literal)) (==) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ())) (/) (number_literal))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (return_statement (return) (binary_expression (cast_expression (() (type_descriptor (primitive_type)) ()) (parenthesized_expression (() (binary_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (+) (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ())))) ()))) (/) (number_literal)) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (identifier) (+) (identifier)) (-) (number_literal)) ())) (/) (number_literal))) (;)) (return_statement (return) (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (;)) (})))) (}))))