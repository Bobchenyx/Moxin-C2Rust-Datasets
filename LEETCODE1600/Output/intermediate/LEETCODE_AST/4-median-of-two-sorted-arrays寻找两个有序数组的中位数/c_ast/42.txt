(translation_unit (function_definition (storage_class_specifier (static)) (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (identifier)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (>) (number_literal)) ())) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (identifier)) (,) (init_declarator (identifier) (=) (identifier)) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (parenthesized_expression (() (binary_expression (identifier) (-) (identifier)) ())) (!=) (number_literal)) (&&) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (-) (identifier)) ())) (!=) (number_literal))) ())) (comment) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (conditional_expression (binary_expression (parenthesized_expression (() (binary_expression (identifier) (-) (identifier)) ())) (<=) (parenthesized_expression (() (binary_expression (identifier) (-) (identifier)) ()))) (?) (parenthesized_expression (() (binary_expression (identifier) (-) (identifier)) ())) (:) (parenthesized_expression (() (binary_expression (identifier) (-) (identifier)) ())))) (;)) (expression_statement (assignment_expression (identifier) (=) (conditional_expression (parenthesized_expression (() (binary_expression (binary_expression (identifier) (/) (number_literal)) (<=) (identifier)) ())) (?) (parenthesized_expression (() (binary_expression (identifier) (/) (number_literal)) ())) (:) (identifier))) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (conditional_expression (parenthesized_expression (() (binary_expression (binary_expression (identifier) (/) (number_literal)) (<=) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (-) (identifier)) (+) (identifier)) (-) (identifier)) ()))) ())) (?) (binary_expression (identifier) (/) (number_literal)) (:) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (-) (identifier)) (+) (identifier)) (-) (identifier)) ())))) (;)) (})))) (while_statement (while) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (<) (identifier)) (&&) (binary_expression (identifier) (<) (identifier))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (while_statement (while) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (<) (identifier)) (&&) (binary_expression (identifier) (<) (identifier))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (comment) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (-) (identifier))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (<) (identifier)) (&&) (binary_expression (identifier) (<) (identifier))) ())) (comment) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (<=) (subscript_expression (identifier) ([) (identifier) (]))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (})))) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (identifier)) ())) (comment) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (})) (else_clause (else) (comment) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (})))))) (}))) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (<) (identifier)) (&&) (binary_expression (identifier) (<) (identifier))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (conditional_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (<=) (subscript_expression (identifier) ([) (identifier) (]))) (?) (subscript_expression (identifier) ([) (identifier) (])) (:) (subscript_expression (identifier) ([) (identifier) (])))) (;)) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (})) (else_clause (else) (comment) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (})))))) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (==) (null (NULL))) (||) (binary_expression (identifier) (==) (null (NULL)))) (||) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (number_literal)) (&&) (binary_expression (identifier) (==) (number_literal))) ()))) ())) (compound_statement ({) (return_statement (return) (number_literal) (;)) (}))) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ())) (%) (number_literal)) (==) (number_literal)) ())) (comment) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) (,) (identifier) (,) (binary_expression (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ())) (/) (number_literal)) (+) (number_literal)) ())))) (;)) (return_statement (return) (identifier) (;)) (})) (else_clause (else) (comment) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) (,) (identifier) (,) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ())) (/) (number_literal)) ())))) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) (,) (identifier) (,) (binary_expression (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ())) (/) (number_literal)) (+) (number_literal)) ())))) (;)) (return_statement (return) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ())) (/) (number_literal)) (;)) (})))) (}))))