(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (identifier) (,) (identifier) (,) (identifier) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) ()))))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) ()))) (;)) (comment) (for_statement (for) (() (assignment_expression (identifier) (=) (assignment_expression (identifier) (=) (assignment_expression (identifier) (=) (number_literal)))) (;) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (<=) (parenthesized_expression (() (binary_expression (identifier) (-) (number_literal)) ()))) ())) (&) (parenthesized_expression (() (binary_expression (identifier) (<=) (parenthesized_expression (() (binary_expression (identifier) (-) (number_literal)) ()))) ()))) (;) (ERROR (ERROR)) (update_expression (identifier) (++)) ()) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (<=) (subscript_expression (identifier) ([) (identifier) (]))) ())) (expression_statement (assignment_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (=) (subscript_expression (identifier) ([) (update_expression (identifier) (++)) (]))) (;)) (else_clause (else) (expression_statement (assignment_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (=) (subscript_expression (identifier) ([) (update_expression (identifier) (++)) (]))) (;))))) (comment) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (<=) (parenthesized_expression (() (binary_expression (identifier) (-) (number_literal)) ()))) ())) (expression_statement (assignment_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (parenthesized_expression (() (update_expression (identifier) (++)) ()))) ()))) (=) (subscript_expression (identifier) ([) (update_expression (identifier) (++)) (]))) (;))) (comment) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (<=) (parenthesized_expression (() (binary_expression (identifier) (-) (number_literal)) ()))) ())) (expression_statement (assignment_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (parenthesized_expression (() (update_expression (identifier) (++)) ()))) ()))) (=) (subscript_expression (identifier) ([) (update_expression (identifier) (++)) (]))) (;))) (comment) (expression_statement (assignment_expression (identifier) (=) (conditional_expression (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ())) (%) (number_literal)) ())) (?) (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ())) (>>) (number_literal)) ()))) ()))) (:) (binary_expression (parenthesized_expression (() (binary_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ())) (>>) (number_literal)) ()))) ()))) (+) (pointer_expression (*) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (+) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ())) (>>) (number_literal)) ()))) (-) (number_literal)) ())))) ())) (/) (number_literal)))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (return_statement (return) (identifier) (;)) (}))))