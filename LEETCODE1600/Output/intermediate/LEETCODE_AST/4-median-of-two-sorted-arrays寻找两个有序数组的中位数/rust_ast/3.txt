(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (line_comment (//)) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>)))) (,) (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>)))) ())) (->) (primitive_type) (block ({) (line_comment (//)) (let_declaration (let) (mutable_specifier) (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (=) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() ()))) (;)) (let_declaration (let) (tuple_pattern (() (mut_pattern (mutable_specifier) (identifier)) (,) (mut_pattern (mutable_specifier) (identifier)) ())) (:) (tuple_type (() (primitive_type) (,) (primitive_type) ())) (=) (tuple_expression (() (integer_literal) (,) (integer_literal) ())) (;)) (expression_statement (loop_expression (loop) (block ({) (let_declaration (let) (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (identifier) ()))) (;)) (let_declaration (let) (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (identifier) ()))) (;)) (expression_statement (match_expression (match) (tuple_expression (() (identifier) (,) (identifier) ())) (match_block ({) (match_arm (match_pattern (tuple_pattern (() (tuple_struct_pattern (identifier) (() (identifier) ())) (,) (tuple_struct_pattern (identifier) (() (identifier) ())) ()))) (=>) (block ({) (expression_statement (if_expression (if) (binary_expression (identifier) (<) (identifier)) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (unary_expression (*) (identifier)) ()))) (;)) (compound_assignment_expr (identifier) (+=) (integer_literal)) (})) (else_clause (else) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (unary_expression (*) (identifier)) ()))) (;)) (compound_assignment_expr (identifier) (+=) (integer_literal)) (}))))) (}))) (match_arm (match_pattern (tuple_pattern (() (tuple_struct_pattern (identifier) (() (identifier) ())) (,) (identifier) ()))) (=>) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (unary_expression (*) (identifier)) ()))) (;)) (expression_statement (compound_assignment_expr (identifier) (+=) (integer_literal)) (;)) (}))) (match_arm (match_pattern (tuple_pattern (() (identifier) (,) (tuple_struct_pattern (identifier) (() (identifier) ())) ()))) (=>) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (unary_expression (*) (identifier)) ()))) (;)) (expression_statement (compound_assignment_expr (identifier) (+=) (integer_literal)) (;)) (}))) (match_arm (match_pattern (tuple_pattern (() (identifier) (,) (identifier) ()))) (=>) (block ({) (expression_statement (break_expression (break)) (;)) (}))) (})))) (})))) (line_comment (//)) (let_declaration (let) (tuple_pattern (() (mut_pattern (mutable_specifier) (identifier)) (,) (mut_pattern (mutable_specifier) (identifier)) ())) (:) (tuple_type (() (primitive_type) (,) (primitive_type) ())) (=) (tuple_expression (() (integer_literal) (,) (integer_literal) ())) (;)) (expression_statement (loop_expression (loop) (block ({) (let_declaration (let) (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (identifier) ()))) (;)) (expression_statement (if_expression (if) (let_condition (let) (identifier) (=) (identifier)) (block ({) (expression_statement (if_expression (if) (let_condition (let) (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (binary_expression (identifier) (-) (integer_literal)) ())))) (block ({) (line_comment (//)) (line_comment (//)) (expression_statement (return_expression (return) (type_cast_expression (unary_expression (*) (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (binary_expression (identifier) (-) (integer_literal)) ()))) (.) (field_identifier)) (arguments (() ())))) (as) (primitive_type))) (;)) (})) (else_clause (else) (block ({) (line_comment (//)) (line_comment (//)) (expression_statement (return_expression (return) (binary_expression (type_cast_expression (parenthesized_expression (() (binary_expression (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (binary_expression (identifier) (-) (integer_literal)) ()))) (.) (field_identifier)) (arguments (() ()))) (+) (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (identifier) ()))) (.) (field_identifier)) (arguments (() ())))) ())) (as) (primitive_type)) (/) (integer_literal))) (;)) (}))))) (})))) (expression_statement (compound_assignment_expr (identifier) (+=) (integer_literal)) (;)) (expression_statement (compound_assignment_expr (identifier) (+=) (integer_literal)) (;)) (})))) (}))) (}))))