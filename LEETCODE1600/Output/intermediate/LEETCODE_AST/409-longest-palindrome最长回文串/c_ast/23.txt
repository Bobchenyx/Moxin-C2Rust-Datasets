(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (identifier) (,) (identifier) (,) (identifier) (,) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (number_literal) (,) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) ()))))) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (call_expression (identifier) (argument_list (() (identifier) ())))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (parenthesized_expression (() (conditional_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (>=) (char_literal (') (character) ('))) (?) (binary_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (-) (char_literal (') (character) ('))) (+) (number_literal)) (:) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (-) (char_literal (') (character) (')))) ()))) (;)) (expression_statement (update_expression (subscript_expression (identifier) ([) (identifier) (])) (++)) (;)) (}))) (declaration (primitive_type) (identifier) (;)) (for_statement (for) (() (comma_expression (assignment_expression (identifier) (=) (number_literal)) (,) (comma_expression (assignment_expression (identifier) (=) (number_literal)) (,) (assignment_expression (identifier) (=) (number_literal)))) (;) (binary_expression (identifier) (<) (number_literal)) (;) (update_expression (identifier) (++)) ()) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (%) (number_literal)) (==) (number_literal)) ())) (expression_statement (assignment_expression (identifier) (+=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (})) (else_clause (else) (expression_statement (assignment_expression (identifier) (+=) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (-) (number_literal))) (;))))))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (return_statement (return) (identifier) (;)) (}))))