(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (array_declarator (identifier) ([) (number_literal) (])) (=) (initializer_list ({) (number_literal) (}))) (;)) (while_statement (while) (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (expression_statement (update_expression (subscript_expression (identifier) ([) (pointer_expression (*) (update_expression (identifier) (++))) (])) (++)) (;))) (declaration (primitive_type) (init_declarator (identifier) (=) (false)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (number_literal)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (%) (number_literal)) (==) (number_literal)) ())) (compound_statement ({) (comment) (expression_statement (assignment_expression (identifier) (+=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (})) (else_clause (else) (compound_statement ({) (comment) (expression_statement (assignment_expression (identifier) (=) (true)) (;)) (expression_statement (assignment_expression (identifier) (+=) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (-) (number_literal))) (;)) (})))) (}))) (return_statement (return) (binary_expression (identifier) (+) (identifier)) (;)) (}))))