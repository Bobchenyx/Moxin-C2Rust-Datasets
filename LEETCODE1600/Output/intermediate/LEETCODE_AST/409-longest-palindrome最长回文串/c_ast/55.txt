(translation_unit (ERROR (identifier) ([) (])) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (,) (init_declarator (array_declarator (identifier) ([) (number_literal) (])) (=) (initializer_list ({) (number_literal) (}))) (;)) (while_statement (while) (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (expression_statement (update_expression (subscript_expression (identifier) ([) (binary_expression (parenthesized_expression (() (pointer_expression (*) (update_expression (identifier) (++))) ())) (-) (char_literal (') (character) ('))) (])) (++)) (;))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (number_literal)) (;) (update_expression (++) (identifier)) ()) (expression_statement (assignment_expression (identifier) (+=) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (&) (number_literal))) (;))) (return_statement (return) (conditional_expression (binary_expression (identifier) (>) (identifier)) (?) (update_expression (++) (identifier)) (:) (identifier)) (;)) (}))))