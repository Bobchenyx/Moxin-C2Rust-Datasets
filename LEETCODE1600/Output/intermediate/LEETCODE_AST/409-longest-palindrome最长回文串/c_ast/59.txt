(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (sized_type_specifier (short)) (init_declarator (array_declarator (identifier) ([) (number_literal) (])) (=) (initializer_list ({) (number_literal) (}))) (;)) (comment) (comment) (comment) (declaration (sized_type_specifier (short)) (init_declarator (pointer_declarator (*) (identifier)) (=) (binary_expression (identifier) (+) (number_literal))) (;)) (comment) (while_statement (while) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (!=) (char_literal (') (escape_sequence) ('))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (&) (number_literal)) ())) (compound_statement ({) (comment) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (&) (number_literal)) (])) (+=) (number_literal)) (;)) (comment) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (&) (number_literal)) (])) (+=) (number_literal)) (;)) (comment) (})))) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (number_literal)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (&) (number_literal)) ())) (compound_statement ({) (comment) (for_statement (for) (() (;) (binary_expression (identifier) (<) (number_literal)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (&) (parenthesized_expression (() (unary_expression (~) (number_literal)) ()))) ()))) (;)) (}))) (return_statement (return) (binary_expression (identifier) (+) (number_literal)) (;)) (comment) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (})))) (}))) (return_statement (return) (identifier) (;)) (comment) (}))))