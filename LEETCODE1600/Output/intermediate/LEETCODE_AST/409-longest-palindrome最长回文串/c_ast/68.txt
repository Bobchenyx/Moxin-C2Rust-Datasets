(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (declaration (primitive_type) (init_declarator (array_declarator (identifier) ([) (number_literal) (])) (=) (initializer_list ({) (number_literal) (}))) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (comment) (compound_statement ({) (expression_statement (update_expression (subscript_expression (identifier) ([) (subscript_expression (identifier) ([) (identifier) (])) (])) (++)) (;)) (}))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (char_literal (') (character) ('))) (;)) (binary_expression (identifier) (<=) (char_literal (') (character) ('))) (;) (update_expression (identifier) (++)) ()) (comment) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (binary_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (/) (number_literal)) (*) (number_literal))) (;)) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (comment) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (%) (number_literal)) ())) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;))) (}))) (}))) (return_statement (return) (binary_expression (identifier) (+) (identifier)) (;)) (}))))