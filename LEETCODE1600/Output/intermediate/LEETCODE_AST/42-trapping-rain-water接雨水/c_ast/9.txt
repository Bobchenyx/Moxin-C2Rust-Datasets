(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (pointer_expression (&) (subscript_expression (identifier) ([) (number_literal) (])))) (;)) (comment) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (pointer_expression (&) (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])))) (;)) (comment) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (binary_expression (identifier) (+) (number_literal))) (;)) (comment) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (while_statement (while) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (<=) (identifier)) (&&) (binary_expression (identifier) (>=) (identifier))) ())) (compound_statement ({) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (>) (pointer_expression (*) (identifier))) ())) (compound_statement ({) (comment) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (>=) (pointer_expression (*) (identifier))) ())) (compound_statement ({) (comment) (comment) (expression_statement (assignment_expression (identifier) (+=) (binary_expression (pointer_expression (*) (identifier)) (*) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (-) (identifier)) (-) (number_literal)) ())))) (;)) (comment) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (})) (else_clause (else) (comment) (expression_statement (assignment_expression (identifier) (-=) (pointer_expression (*) (identifier))) (;)))) (comment) (expression_statement (update_expression (--) (identifier)) (;)) (})) (comment) (else_clause (else) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (>=) (pointer_expression (*) (identifier))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (binary_expression (pointer_expression (*) (identifier)) (*) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (-) (identifier)) (-) (number_literal)) ())))) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (})) (else_clause (else) (expression_statement (assignment_expression (identifier) (-=) (pointer_expression (*) (identifier))) (;)))) (expression_statement (update_expression (++) (identifier)) (;)) (})))) (}))) (return_statement (return) (identifier) (;)) (}))))