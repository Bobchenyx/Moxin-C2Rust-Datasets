(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (type_identifier)) ())) (->) (type_identifier) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (array_expression ([) (integer_literal) (;) (integer_literal) (])) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (array_expression ([) (integer_literal) (;) (integer_literal) (])) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() ()))) (;)) (expression_statement (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() (closure_expression (closure_parameters (|) (identifier) (|)) (compound_assignment_expr (index_expression (identifier) ([) (type_cast_expression (parenthesized_expression (() (binary_expression (identifier) (-) (char_literal)) ())) (as) (primitive_type)) (])) (+=) (integer_literal))) ()))) (;)) (expression_statement (assignment_expression (index_expression (identifier) ([) (integer_literal) (])) (=) (index_expression (identifier) ([) (integer_literal) (]))) (;)) (expression_statement (assignment_expression (index_expression (identifier) ([) (integer_literal) (])) (=) (index_expression (identifier) ([) (integer_literal) (]))) (;)) (expression_statement (assignment_expression (index_expression (identifier) ([) (integer_literal) (])) (=) (index_expression (identifier) ([) (integer_literal) (]))) (;)) (expression_statement (assignment_expression (index_expression (identifier) ([) (integer_literal) (])) (=) (index_expression (identifier) ([) (integer_literal) (]))) (;)) (expression_statement (assignment_expression (index_expression (identifier) ([) (integer_literal) (])) (=) (index_expression (identifier) ([) (integer_literal) (]))) (;)) (expression_statement (assignment_expression (index_expression (identifier) ([) (integer_literal) (])) (=) (binary_expression (binary_expression (binary_expression (index_expression (identifier) ([) (integer_literal) (])) (-) (index_expression (identifier) ([) (integer_literal) (]))) (-) (index_expression (identifier) ([) (integer_literal) (]))) (-) (index_expression (identifier) ([) (integer_literal) (])))) (;)) (expression_statement (assignment_expression (index_expression (identifier) ([) (integer_literal) (])) (=) (binary_expression (index_expression (identifier) ([) (integer_literal) (])) (-) (index_expression (identifier) ([) (integer_literal) (])))) (;)) (expression_statement (assignment_expression (index_expression (identifier) ([) (integer_literal) (])) (=) (binary_expression (index_expression (identifier) ([) (integer_literal) (])) (-) (index_expression (identifier) ([) (integer_literal) (])))) (;)) (expression_statement (assignment_expression (index_expression (identifier) ([) (integer_literal) (])) (=) (binary_expression (index_expression (identifier) ([) (integer_literal) (])) (-) (index_expression (identifier) ([) (integer_literal) (])))) (;)) (expression_statement (assignment_expression (index_expression (identifier) ([) (integer_literal) (])) (=) (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (index_expression (identifier) ([) (integer_literal) (])) (-) (index_expression (identifier) ([) (integer_literal) (]))) (-) (index_expression (identifier) ([) (integer_literal) (]))) ())) (/) (integer_literal))) (;)) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (integer_literal)) (block ({) (expression_statement (for_expression (for) (_) (in) (range_expression (integer_literal) (..) (index_expression (identifier) ([) (identifier) (]))) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (type_cast_expression (parenthesized_expression (() (binary_expression (type_cast_expression (identifier) (as) (primitive_type)) (+) (char_literal)) ())) (as) (primitive_type)) ()))) (;)) (})))) (})))) (identifier) (}))) (}))))