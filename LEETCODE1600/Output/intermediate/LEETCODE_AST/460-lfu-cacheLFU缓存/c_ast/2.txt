(translation_unit (type_definition (typedef) (struct_specifier (struct) (field_declaration_list ({) (field_declaration (primitive_type) (field_identifier) (;)) (field_declaration (primitive_type) (field_identifier) (;)) (field_declaration (primitive_type) (field_identifier) (;)) (comment) (field_declaration (primitive_type) (array_declarator (field_identifier) ([) (number_literal) (])) (;)) (comment) (}))) (type_identifier) (;)) (comment) (function_definition (type_identifier) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ())))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (type_identifier) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (parenthesized_expression (() (identifier) ()))) (*) (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ()))) ()))))) (;)) (expression_statement (assignment_expression (subscript_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (.) (field_identifier)) ([) (number_literal) (])) (=) (identifier)) (;)) (expression_statement (assignment_expression (subscript_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (.) (field_identifier)) ([) (number_literal) (])) (=) (number_literal)) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (.) (field_identifier)) (=) (number_literal)) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (binary_expression (subscript_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (.) (field_identifier)) ([) (number_literal) (])) (+) (number_literal))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) (=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) ([) (number_literal) (])) (=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) ([) (number_literal) (])) (=) (number_literal)) (;)) (}))) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (expression_statement (update_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (.) (field_identifier)) (++)) (;)) (comment) (comment) (for_statement (for) (() (;) (binary_expression (identifier) (<) (binary_expression (subscript_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (.) (field_identifier)) ([) (number_literal) (])) (+) (number_literal))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) ())) (&&) (parenthesized_expression (() (binary_expression (identifier) (==) (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier))) ()))) ())) (compound_statement ({) (comment) (expression_statement (assignment_expression (subscript_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) ([) (number_literal) (])) (=) (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (.) (field_identifier))) (;)) (expression_statement (update_expression (subscript_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) ([) (number_literal) (])) (++)) (;)) (comment) (comment) (return_statement (return) (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) (;)) (}))) (}))) (return_statement (return) (number_literal) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (identifier) (,) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (.) (field_identifier)) ([) (number_literal) (])) (==) (number_literal)) ())) (return_statement (return) (;))) (expression_statement (update_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (.) (field_identifier)) (++)) (;)) (comment) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (binary_expression (subscript_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (.) (field_identifier)) ([) (number_literal) (])) (+) (number_literal))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) (==) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) (=) (number_literal)) (;)) (expression_statement (update_expression (subscript_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) ([) (number_literal) (])) (++)) (;)) (expression_statement (assignment_expression (subscript_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) ([) (number_literal) (])) (=) (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (.) (field_identifier))) (;)) (comment) (return_statement (return) (;)) (}))) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (.) (field_identifier)) ([) (number_literal) (])) (>=) (subscript_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (.) (field_identifier)) ([) (number_literal) (]))) ())) (compound_statement ({) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (binary_expression (subscript_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (.) (field_identifier)) ([) (number_literal) (])) (+) (number_literal))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) ([) (number_literal) (])) (>) (subscript_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) ([) (number_literal) (]))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) ([) (number_literal) (])) (==) (subscript_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) ([) (number_literal) (]))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) ([) (number_literal) (])) (<) (subscript_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) ([) (number_literal) (]))) ())) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;))) (}))))) (}))) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) (=) (number_literal)) (;)) (expression_statement (update_expression (subscript_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (.) (field_identifier)) ([) (number_literal) (])) (--)) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (.) (field_identifier)) ([) (number_literal) (])) (<) (subscript_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (.) (field_identifier)) ([) (number_literal) (]))) ())) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (binary_expression (subscript_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (.) (field_identifier)) ([) (number_literal) (])) (+) (number_literal))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) (==) (number_literal)) ())) (compound_statement ({) (comment) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) (=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) ([) (number_literal) (])) (=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) ([) (number_literal) (])) (=) (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (.) (field_identifier))) (;)) (expression_statement (update_expression (subscript_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (.) (field_identifier)) ([) (number_literal) (])) (++)) (;)) (break_statement (break) (;)) (}))) (})))) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (}))) (comment))