(source_file (use_declaration (use) (scoped_identifier (scoped_identifier (identifier) (::) (identifier)) (::) (identifier)) (;)) (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>)))) ())) (->) (primitive_type) (block ({) (let_declaration (let) (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (;)) (expression_statement (if_expression (if) (binary_expression (identifier) (<=) (integer_literal)) (block ({) (expression_statement (return_expression (return) (boolean_literal (true))) (;)) (})))) (expression_statement (if_expression (if) (binary_expression (binary_expression (identifier) (%) (integer_literal)) (==) (integer_literal)) (block ({) (expression_statement (return_expression (return) (boolean_literal (true))) (;)) (})))) (let_declaration (let) (mutable_specifier) (identifier) (=) (macro_invocation (identifier) (!) (token_tree ([) (integer_literal) (;) (identifier) (+) (integer_literal) (]))) (;)) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (identifier)) (block ({) (expression_statement (assignment_expression (index_expression (identifier) ([) (binary_expression (identifier) (+) (integer_literal)) (])) (=) (binary_expression (index_expression (identifier) ([) (identifier) (])) (+) (index_expression (identifier) ([) (identifier) (])))) (;)) (})))) (let_declaration (let) (mutable_specifier) (identifier) (=) (macro_invocation (identifier) (!) (token_tree ([) (identifier) (!) (token_tree ([) (integer_literal) (;) (identifier) (+) (integer_literal) (])) (;) (identifier) (+) (integer_literal) (]))) (;)) (let_declaration (let) (identifier) (=) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (reference_expression (&) (identifier)) (,) (reference_expression (&) (mutable_specifier) (identifier)) (,) (integer_literal) (,) (identifier) ()))) (;)) (expression_statement (if_expression (if) (binary_expression (binary_expression (index_expression (identifier) ([) (identifier) (])) (%) (integer_literal)) (==) (integer_literal)) (block ({) (binary_expression (identifier) (>=) (binary_expression (index_expression (identifier) ([) (identifier) (])) (/) (integer_literal))) (})) (else_clause (else) (block ({) (binary_expression (identifier) (>) (binary_expression (index_expression (identifier) ([) (identifier) (])) (/) (integer_literal))) (}))))) (}))) (function_item (fn) (identifier) (parameters (() (parameter (identifier) (:) (reference_type (&) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))))) (,) (parameter (identifier) (:) (reference_type (&) (mutable_specifier) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (>))))) (,) (parameter (identifier) (:) (primitive_type)) (,) (parameter (identifier) (:) (primitive_type)) ())) (->) (primitive_type) (block ({) (expression_statement (if_expression (if) (binary_expression (identifier) (==) (identifier)) (block ({) (expression_statement (return_expression (return) (binary_expression (index_expression (identifier) ([) (identifier) (])) (-) (index_expression (identifier) ([) (binary_expression (identifier) (-) (integer_literal)) (])))) (;)) (})))) (expression_statement (if_expression (if) (binary_expression (index_expression (index_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (!=) (integer_literal)) (block ({) (expression_statement (return_expression (return) (index_expression (index_expression (identifier) ([) (identifier) (])) ([) (identifier) (]))) (;)) (})))) (expression_statement (assignment_expression (index_expression (index_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (=) (binary_expression (binary_expression (index_expression (identifier) ([) (identifier) (])) (-) (index_expression (identifier) ([) (binary_expression (identifier) (-) (integer_literal)) (]))) (-) (call_expression (identifier) (arguments (() (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (identifier) (,) (identifier) (,) (binary_expression (identifier) (+) (integer_literal)) (,) (identifier) ()))) (,) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (identifier) (,) (identifier) (,) (identifier) (,) (binary_expression (identifier) (-) (integer_literal)) ()))) ()))))) (;)) (index_expression (index_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (}))) (}))))