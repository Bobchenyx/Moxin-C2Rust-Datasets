(source_file (ERROR (identifier) ([) (])) (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (type_identifier)) ())) (->) (type_identifier) (block ({) (block_comment (/*) (*/)) (let_declaration (let) (mutable_specifier) (identifier) (=) (macro_invocation (identifier) (!) (token_tree ([) (char_literal) (,) (char_literal) (]))) (;)) (expression_statement (for_expression (for) (identifier) (in) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (identifier) ()))) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (char_literal) ()))) (;)) (})))) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (char_literal) ()))) (;)) (line_comment (//)) (let_declaration (let) (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (;)) (line_comment (//)) (line_comment (//)) (let_declaration (let) (mutable_specifier) (identifier) (=) (macro_invocation (identifier) (!) (token_tree ([) (integer_literal) (;) (identifier) (]))) (;)) (line_comment (//)) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (parenthesized_expression (() (binary_expression (identifier) (-) (integer_literal)) ()))) (block ({) (expression_statement (if_expression (if) (binary_expression (identifier) (<) (identifier)) (block ({) (expression_statement (assignment_expression (index_expression (identifier) ([) (identifier) (])) (=) (call_expression (field_expression (index_expression (identifier) ([) (binary_expression (binary_expression (integer_literal) (*) (identifier)) (-) (identifier)) (])) (.) (field_identifier)) (arguments (() (binary_expression (identifier) (-) (identifier)) ())))) (;)) (})) (else_clause (else) (block ({) (expression_statement (assignment_expression (index_expression (identifier) ([) (identifier) (])) (=) (integer_literal)) (;)) (}))))) (expression_statement (while_expression (while) (binary_expression (index_expression (identifier) ([) (binary_expression (identifier) (-) (index_expression (identifier) ([) (identifier) (]))) (])) (==) (index_expression (identifier) ([) (binary_expression (identifier) (+) (index_expression (identifier) ([) (identifier) (]))) (]))) (block ({) (expression_statement (compound_assignment_expr (index_expression (identifier) ([) (identifier) (])) (+=) (integer_literal)) (;)) (})))) (expression_statement (if_expression (if) (binary_expression (identifier) (<) (binary_expression (identifier) (+) (index_expression (identifier) ([) (identifier) (])))) (block ({) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (index_expression (identifier) ([) (identifier) (])))) (;)) (})))) (line_comment (//)) (line_comment (//)) (expression_statement (assignment_expression (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (binary_expression (index_expression (identifier) ([) (identifier) (])) (-) (integer_literal)) ())))) (;)) (})))) (block_comment (/*) (*/)) (let_declaration (let) (identifier) (=) (binary_expression (binary_expression (call_expression (field_expression (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() (closure_expression (closure_parameters (|) (reference_pattern (&) (identifier)) (|)) (binary_expression (identifier) (==) (parenthesized_expression (() (binary_expression (identifier) (+) (integer_literal)) ())))) ()))) (.) (field_identifier)) (arguments (() ()))) (-) (identifier)) (+) (integer_literal)) (;)) (let_declaration (let) (identifier) (=) (binary_expression (identifier) (+) (binary_expression (identifier) (*) (integer_literal))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (string_literal (") (")) ()))) (;)) (expression_statement (for_expression (for) (identifier) (in) (range_expression (identifier) (..) (identifier)) (block ({) (expression_statement (if_expression (if) (binary_expression (index_expression (identifier) ([) (identifier) (])) (!=) (char_literal)) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (index_expression (identifier) ([) (identifier) (])) ()))) (;)) (})))) (})))) (block_comment (/*) (*/)) (identifier) (}))) (}))))