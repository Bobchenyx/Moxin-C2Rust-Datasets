(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (primitive_type)) ())) (->) (primitive_type) (block ({) (expression_statement (if_expression (if) (binary_expression (binary_expression (binary_expression (identifier) (%) (integer_literal)) (!=) (integer_literal)) (&&) (binary_expression (binary_expression (identifier) (%) (integer_literal)) (!=) (integer_literal))) (block ({) (expression_statement (return_expression (return) (boolean_literal (false))) (;)) (})))) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (identifier) (;)) (expression_statement (while_expression (while) (binary_expression (identifier) (<) (identifier)) (block ({) (expression_statement (if_expression (if) (binary_expression (binary_expression (identifier) (%) (identifier)) (==) (integer_literal)) (block ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (/) (identifier))) (;)) (expression_statement (compound_assignment_expr (identifier) (+=) (identifier)) (;)) (expression_statement (compound_assignment_expr (identifier) (+=) (identifier)) (;)) (})))) (expression_statement (compound_assignment_expr (identifier) (+=) (integer_literal)) (;)) (})))) (binary_expression (identifier) (==) (identifier)) (}))) (}))))