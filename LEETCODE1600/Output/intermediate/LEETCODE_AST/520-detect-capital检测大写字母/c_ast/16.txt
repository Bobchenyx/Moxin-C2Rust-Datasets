(translation_unit (ERROR (identifier) ([) (])) (preproc_function_def (#define) (identifier) (preproc_params (() (identifier) ())) (preproc_arg)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (pointer_expression (*) (update_expression (identifier) (++))) ())))) (,) (identifier) (;)) (if_statement (if) (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (pointer_expression (*) (update_expression (identifier) (++))) ())))) (;)) (else_clause (else) (return_statement (return) (true) (;)))) (if_statement (if) (parenthesized_expression (() (binary_expression (unary_expression (!) (identifier)) (&&) (identifier)) ())) (return_statement (return) (false) (;))) (comment) (while_statement (while) (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (pointer_expression (*) (update_expression (identifier) (++))) ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (!=) (identifier)) ())) (return_statement (return) (false) (;))) (}))) (return_statement (return) (true) (;)) (}))))