(translation_unit (function_definition (type_identifier) (identifier) (compound_statement ({) (labeled_statement (statement_identifier) (:) (ERROR (type_identifier) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (identifier)) (,) (parameter_declaration (type_identifier) (ERROR (<) (identifier) (>) (&)) (identifier)) ())))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ())))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ())))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (==) (subscript_expression (identifier) ([) (identifier) (]))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (identifier)) ())) (compound_statement ({) (break_statement (break) (;)) (}))) (}))) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) (argument_list (() ())))) (;)) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (identifier)) (&&) (binary_expression (identifier) (>=) (identifier))) ())) (compound_statement ({) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (identifier)) (&&) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (>) (subscript_expression (identifier) ([) (identifier) (])))) ())) (compound_statement ({) (continue_statement (continue) (;)) (}))) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (}))) (}))) (return_statement (return) (conditional_expression (binary_expression (identifier) (==) (number_literal)) (?) (string_literal (") (")) (:) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (}))) (}))) (expression_statement (;)))