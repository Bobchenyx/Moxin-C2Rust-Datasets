(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (>)))) (,) (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>)))) ())) (->) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (>))) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (identifier) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (macro_invocation (identifier) (!) (token_tree ([) (identifier) (]))) (;)) (let_declaration (let) (identifier) (=) (type_cast_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (as) (primitive_type)) (;)) (let_declaration (let) (identifier) (=) (type_cast_expression (call_expression (field_expression (index_expression (identifier) ([) (integer_literal) (])) (.) (field_identifier)) (arguments (() ()))) (as) (primitive_type)) (;)) (expression_statement (while_expression (while) (let_condition (let) (tuple_struct_pattern (identifier) (() (identifier) ())) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ())))) (block ({) (let_declaration (let) (identifier) (=) (index_expression (identifier) ([) (integer_literal) (])) (;)) (let_declaration (let) (identifier) (=) (index_expression (identifier) ([) (integer_literal) (])) (;)) (expression_statement (match_expression (match) (index_expression (index_expression (identifier) ([) (type_cast_expression (identifier) (as) (primitive_type)) (])) ([) (type_cast_expression (identifier) (as) (primitive_type)) (])) (match_block ({) (match_arm (match_pattern (char_literal)) (=>) (assignment_expression (index_expression (index_expression (identifier) ([) (type_cast_expression (identifier) (as) (primitive_type)) (])) ([) (type_cast_expression (identifier) (as) (primitive_type)) (])) (=) (char_literal)) (,)) (match_arm (match_pattern (char_literal)) (=>) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() ()))) (;)) (expression_statement (for_expression (for) (identifier) (in) (range_expression (call_expression (field_expression (parenthesized_expression (() (binary_expression (identifier) (-) (integer_literal)) ())) (.) (field_identifier)) (arguments (() (integer_literal) ()))) (..) (call_expression (field_expression (parenthesized_expression (() (binary_expression (identifier) (+) (integer_literal)) ())) (.) (field_identifier)) (arguments (() (identifier) ())))) (block ({) (expression_statement (for_expression (for) (identifier) (in) (range_expression (call_expression (field_expression (parenthesized_expression (() (binary_expression (identifier) (-) (integer_literal)) ())) (.) (field_identifier)) (arguments (() (integer_literal) ()))) (..) (call_expression (field_expression (parenthesized_expression (() (binary_expression (identifier) (+) (integer_literal)) ())) (.) (field_identifier)) (arguments (() (identifier) ())))) (block ({) (expression_statement (if_expression (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (!=) (identifier)) (||) (binary_expression (identifier) (!=) (identifier))) ())) (block ({) (expression_statement (match_expression (match) (index_expression (index_expression (identifier) ([) (type_cast_expression (identifier) (as) (primitive_type)) (])) ([) (type_cast_expression (identifier) (as) (primitive_type)) (])) (match_block ({) (match_arm (match_pattern (char_literal)) (=>) (compound_assignment_expr (identifier) (+=) (integer_literal)) (,)) (match_arm (match_pattern (char_literal)) (=>) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (macro_invocation (identifier) (!) (token_tree ([) (identifier) (,) (identifier) (]))) ()))) (,)) (match_arm (match_pattern (_)) (=>) (unit_expression (() ())) (,)) (})))) (})))) (})))) (})))) (assignment_expression (index_expression (index_expression (identifier) ([) (type_cast_expression (identifier) (as) (primitive_type)) (])) ([) (type_cast_expression (identifier) (as) (primitive_type)) (])) (=) (match_expression (match) (identifier) (match_block ({) (match_arm (match_pattern (integer_literal)) (=>) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (reference_expression (&) (mutable_specifier) (identifier)) ()))) (;)) (char_literal) (})) (,)) (match_arm (match_pattern (identifier)) (=>) (type_cast_expression (parenthesized_expression (() (binary_expression (type_cast_expression (identifier) (as) (primitive_type)) (+) (char_literal)) ())) (as) (primitive_type)) (,)) (})))) (})) (,)) (match_arm (match_pattern (_)) (=>) (unit_expression (() ())) (,)) (})))) (})))) (identifier) (}))) (}))))