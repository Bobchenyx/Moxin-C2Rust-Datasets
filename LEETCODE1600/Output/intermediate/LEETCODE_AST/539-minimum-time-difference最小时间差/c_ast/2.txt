(translation_unit (preproc_function_def (#define) (identifier) (preproc_params (() (identifier) (,) (identifier) ())) (preproc_arg)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_qualifier (const)) (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (type_qualifier (const)) (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (pointer_expression (*) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*) (abstract_pointer_declarator (*)))) ()) (identifier)))) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (pointer_expression (*) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*) (abstract_pointer_declarator (*)))) ()) (identifier)))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (number_literal) (])) (!=) (subscript_expression (identifier) ([) (number_literal) (]))) ())) (return_statement (return) (binary_expression (subscript_expression (identifier) ([) (number_literal) (])) (-) (subscript_expression (identifier) ([) (number_literal) (]))) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (number_literal) (])) (!=) (subscript_expression (identifier) ([) (number_literal) (]))) ())) (return_statement (return) (binary_expression (subscript_expression (identifier) ([) (number_literal) (])) (-) (subscript_expression (identifier) ([) (number_literal) (]))) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (number_literal) (])) (!=) (subscript_expression (identifier) ([) (number_literal) (]))) ())) (return_statement (return) (binary_expression (subscript_expression (identifier) ([) (number_literal) (])) (-) (subscript_expression (identifier) ([) (number_literal) (]))) (;))) (return_statement (return) (binary_expression (subscript_expression (identifier) ([) (number_literal) (])) (-) (subscript_expression (identifier) ([) (number_literal) (]))) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (identifier) (,) (identifier) (,) (identifier) (,) (identifier) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (subscript_expression (identifier) ([) (number_literal) (])) (-) (subscript_expression (identifier) ([) (number_literal) (])))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (subscript_expression (identifier) ([) (number_literal) (])) (-) (subscript_expression (identifier) ([) (number_literal) (])))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (subscript_expression (identifier) ([) (number_literal) (])) (-) (subscript_expression (identifier) ([) (number_literal) (])))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (subscript_expression (identifier) ([) (number_literal) (])) (-) (subscript_expression (identifier) ([) (number_literal) (])))) (;)) (return_statement (return) (binary_expression (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (identifier) (*) (number_literal)) (+) (identifier)) ())) (*) (number_literal)) (+) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (*) (number_literal)) (+) (identifier)) ()))) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (,) (identifier) (;)) (declaration (primitive_type) (init_declarator (array_declarator (identifier) ([) (number_literal) (])) (=) (string_literal (") (string_content) ("))) (;)) (declaration (primitive_type) (init_declarator (array_declarator (identifier) ([) (number_literal) (])) (=) (string_literal (") (string_content) ("))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ())) (,) (identifier) ()))) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (,) (subscript_expression (identifier) ([) (identifier) (])) ()))) ())))) (;))) (return_statement (return) (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (,) (identifier) ()))) (+) (call_expression (identifier) (argument_list (() (identifier) (,) (subscript_expression (identifier) ([) (number_literal) (])) ())))) ()))) (;)) (}))))