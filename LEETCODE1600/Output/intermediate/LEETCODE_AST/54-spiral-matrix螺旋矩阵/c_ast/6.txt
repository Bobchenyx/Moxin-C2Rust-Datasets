(translation_unit (comment) (enum_specifier (enum) (type_identifier) (enumerator_list ({) (enumerator (identifier) (=) (number_literal)) (,) (enumerator (identifier)) (,) (enumerator (identifier)) (,) (enumerator (identifier)) (,) (}))) (;) (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (null (NULL)) (==) (identifier)) (||) (binary_expression (number_literal) (==) (identifier))) (||) (binary_expression (number_literal) (==) (pointer_expression (*) (identifier)))) ())) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (number_literal)) (;)) (return_statement (return) (null (NULL)) (;)) (}))) (declaration (enum_specifier (enum) (type_identifier)) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (pointer_expression (*) (identifier)) (-) (number_literal))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (binary_expression (identifier) (*) (parenthesized_expression (() (pointer_expression (*) (identifier)) ()))) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ()))) ()))))) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (<=) (identifier)) (&&) (binary_expression (identifier) (<=) (identifier))) ())) (compound_statement ({) (switch_statement (switch) (parenthesized_expression (() (identifier) ())) (compound_statement ({) (case_statement (case) (identifier) (:) (compound_statement ({) (for_statement (for) (() (assignment_expression (identifier) (=) (identifier)) (;) (binary_expression (identifier) (<=) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (++)) (])) (=) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (]))) (;)) (}))) (expression_statement (update_expression (identifier) (++)) (;)) (break_statement (break) (;)) (}))) (case_statement (case) (identifier) (:) (compound_statement ({) (for_statement (for) (() (assignment_expression (identifier) (=) (identifier)) (;) (binary_expression (identifier) (<=) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (++)) (])) (=) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (]))) (;)) (}))) (expression_statement (update_expression (identifier) (--)) (;)) (break_statement (break) (;)) (}))) (case_statement (case) (identifier) (:) (compound_statement ({) (for_statement (for) (() (assignment_expression (identifier) (=) (identifier)) (;) (binary_expression (identifier) (>=) (identifier)) (;) (update_expression (identifier) (--)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (++)) (])) (=) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (]))) (;)) (}))) (expression_statement (update_expression (identifier) (--)) (;)) (break_statement (break) (;)) (}))) (case_statement (case) (identifier) (:) (compound_statement ({) (for_statement (for) (() (assignment_expression (identifier) (=) (identifier)) (;) (binary_expression (identifier) (>=) (identifier)) (;) (update_expression (identifier) (--)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (++)) (])) (=) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (]))) (;)) (}))) (expression_statement (update_expression (identifier) (++)) (;)) (break_statement (break) (;)) (}))) (case_statement (default) (:) (break_statement (break) (;))) (}))) (expression_statement (assignment_expression (identifier) (=) (binary_expression (parenthesized_expression (() (update_expression (++) (identifier)) ())) (%) (number_literal))) (;)) (}))) (return_statement (return) (identifier) (;)) (}))))