(translation_unit (comment) (declaration (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (abstract_pointer_declarator (*))) (,) (parameter_declaration (primitive_type) (abstract_pointer_declarator (*))) ()))) (;)) (declaration (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type)) (,) (parameter_declaration (primitive_type)) ()))) (;)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (pointer_expression (&) (identifier)) ()))) (;)) (return_statement (return) (binary_expression (identifier) (-) (number_literal)) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (unary_expression (!) (identifier)) ())) (return_statement (return) (number_literal) (;))) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) (,) (identifier) ())))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) (,) (identifier) ())))) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (call_expression (identifier) (argument_list (() (pointer_expression (*) (identifier)) (,) (binary_expression (binary_expression (identifier) (+) (identifier)) (+) (number_literal)) ())))) (;)) (return_statement (return) (binary_expression (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ()))) (+) (number_literal)) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>) (identifier)) ())) (return_statement (return) (identifier) (;))) (return_statement (return) (identifier) (;)) (}))))