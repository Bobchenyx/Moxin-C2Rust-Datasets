(translation_unit (comment) (declaration (primitive_type) (identifier) (;)) (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (comment) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (compound_statement ({) (return_statement (return) (number_literal) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) ())))) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) ())))) (;)) (expression_statement (assignment_expression (identifier) (=) (parenthesized_expression (() (conditional_expression (binary_expression (identifier) (>=) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (?) (identifier) (:) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) ()))) (;)) (return_statement (return) (binary_expression (parenthesized_expression (() (conditional_expression (binary_expression (identifier) (>=) (identifier)) (?) (identifier) (:) (identifier)) ())) (+) (number_literal)) (;)) (comment) (})))) (}))))