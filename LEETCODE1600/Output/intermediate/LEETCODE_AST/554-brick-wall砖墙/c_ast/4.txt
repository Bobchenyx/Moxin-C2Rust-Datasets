(translation_unit (preproc_def (#define) (identifier) (preproc_arg)) (declaration (primitive_type) (array_declarator (identifier) ([) (identifier) (])) (;)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_qualifier (const)) (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (type_qualifier (const)) (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (return_statement (return) (binary_expression (pointer_expression (*) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (identifier))) (-) (pointer_expression (*) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (identifier)))) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (identifier) (,) (identifier) (;)) (declaration (primitive_type) (identifier) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (||) (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ()))) (||) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ()))) ())) (compound_statement ({) (return_statement (return) (number_literal) (;)) (}))) (expression_statement (cast_expression (() (type_descriptor (primitive_type)) ()) (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (sizeof_expression (sizeof) (parenthesized_expression (() (identifier) ()))) ())))) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (subscript_expression (identifier) ([) (identifier) (]))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (]))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (identifier) (++)) (])) (=) (identifier)) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (}))) (}))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (,) (identifier) ()))) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) ()) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (identifier)) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (break_statement (break) (;)) (}))) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (number_literal))) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (subscript_expression (identifier) ([) (identifier) (]))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (}))) (break_statement (break) (;)) (})))) (}))) (}))) (return_statement (return) (binary_expression (identifier) (-) (identifier)) (;)) (}))))