(translation_unit (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (identifier) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (++)) (])) (=) (number_literal)) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (++)) (])) (=) (number_literal)) (;)) (})))) (return_statement (return) (;)) (}))) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (++)) (])) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) (,) (identifier) (,) (identifier) (,) (true) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) (,) (identifier) (,) (identifier) (,) (false) ()))) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (call_expression (identifier) (argument_list (() (binary_expression (number_literal) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ()))) ())))) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (call_expression (identifier) (argument_list (() (binary_expression (number_literal) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ()))) ())))) (;)) (declaration (primitive_type) (identifier) (,) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (comment) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (pointer_expression (&) (identifier)) (,) (false) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (pointer_expression (&) (identifier)) (,) (false) ()))) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<=) (binary_expression (identifier) (-) (identifier))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (comment) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (subscript_expression (identifier) ([) (identifier) (]))) ())) (compound_statement ({) (preproc_if (#if) (number_literal) (
) (if_statement (if) (parenthesized_expression (() (binary_expression (call_expression (identifier) (argument_list (() (pointer_expression (&) (subscript_expression (identifier) ([) (identifier) (]))) (,) (identifier) (,) (binary_expression (identifier) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ()))) ()))) (==) (number_literal)) ())) (return_statement (return) (true) (;))) (preproc_else (#else) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (identifier)) (])) (!=) (subscript_expression (identifier) ([) (identifier) (]))) ())) (break_statement (break) (;))) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (identifier)) ())) (return_statement (return) (true) (;)))) (#endif)) (}))) (}))) (return_statement (return) (false) (;)) (}))))