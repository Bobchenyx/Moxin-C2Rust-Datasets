(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (identifier)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (!=) (char_literal (') (escape_sequence) ('))) ())) (compound_statement ({) (expression_statement (update_expression (++) (identifier)) (;)) (expression_statement (update_expression (++) (identifier)) (;)) (}))) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (binary_expression (identifier) (>=) (number_literal)) (;) (update_expression (--) (identifier)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (char_literal (') (character) ('))) (&&) (binary_expression (identifier) (!=) (number_literal))) ())) (break_statement (break) (;)) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (char_literal (') (character) (')) (<=) (subscript_expression (identifier) ([) (identifier) (]))) (&&) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (<=) (char_literal (') (character) (')))) ())) (||) (parenthesized_expression (() (binary_expression (binary_expression (char_literal (') (character) (')) (<=) (subscript_expression (identifier) ([) (identifier) (]))) (&&) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (<=) (char_literal (') (character) (')))) ()))) ())) (expression_statement (update_expression (++) (identifier)) (;))))) (}))) (return_statement (return) (identifier) (;)) (}))))