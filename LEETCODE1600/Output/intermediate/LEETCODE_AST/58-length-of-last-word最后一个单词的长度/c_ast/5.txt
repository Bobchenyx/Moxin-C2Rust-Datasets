(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (false)) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (-) (number_literal))) (;) (binary_expression (number_literal) (<=) (identifier)) (;) (update_expression (identifier) (--)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (char_literal (') (character) ('))) (&&) (binary_expression (identifier) (==) (true))) ())) (compound_statement ({) (break_statement (break) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (!=) (char_literal (') (character) ('))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (assignment_expression (identifier) (=) (true)) (;)) (}))) (}))) (return_statement (return) (identifier) (;)) (}))))