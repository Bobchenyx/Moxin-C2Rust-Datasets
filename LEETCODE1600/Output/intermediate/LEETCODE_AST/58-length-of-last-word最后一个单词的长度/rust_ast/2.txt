(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (mutable_specifier) (identifier) (:) (type_identifier)) ())) (->) (primitive_type) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (expression_statement (loop_expression (loop) (block ({) (let_declaration (let) (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (;)) (expression_statement (if_expression (if) (binary_expression (identifier) (==) (identifier)) (block ({) (expression_statement (break_expression (break)) (;)) (})))) (expression_statement (if_expression (if) (binary_expression (binary_expression (identifier) (==) (call_expression (identifier) (arguments (() (char_literal) ())))) (&&) (binary_expression (identifier) (==) (integer_literal))) (block ({) (expression_statement (continue_expression (continue)) (;)) (})))) (expression_statement (if_expression (if) (binary_expression (identifier) (==) (call_expression (identifier) (arguments (() (char_literal) ())))) (block ({) (expression_statement (break_expression (break)) (;)) (})))) (expression_statement (compound_assignment_expr (identifier) (+=) (integer_literal)) (;)) (})))) (identifier) (}))) (}))))