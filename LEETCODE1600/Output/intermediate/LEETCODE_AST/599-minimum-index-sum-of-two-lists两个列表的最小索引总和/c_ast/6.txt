(translation_unit (function_definition (type_identifier) (identifier) (compound_statement ({) (labeled_statement (statement_identifier) (:) (expression_statement (binary_expression (binary_expression (identifier) (<) (identifier)) (>) (call_expression (identifier) (argument_list (() (binary_expression (binary_expression (identifier) (<) (identifier)) (>) (pointer_expression (&) (identifier))) (,) (binary_expression (binary_expression (identifier) (<) (identifier)) (>) (pointer_expression (&) (identifier))) ())))) (;))) (compound_statement ({) (expression_statement (binary_expression (binary_expression (identifier) (<) (identifier)) (>) (identifier)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ())))) (;) (update_expression (++) (identifier)) ()) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ())))) (;) (update_expression (++) (identifier)) ()) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (subscript_expression (identifier) ([) (identifier) (]))) ())) (compound_statement ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ()))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (identifier))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (number_literal))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ())))) (;)) (comment) (break_statement (break) (;)) (comment) (}))))) (while_statement (while) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (<) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ())))) (&&) (binary_expression (identifier) (>=) (number_literal))) ())) (compound_statement ({) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (subscript_expression (identifier) ([) (identifier) (]))) ())) (comment) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ()))) (;))) (expression_statement (update_expression (++) (identifier)) (;)) (comment) (expression_statement (update_expression (--) (identifier)) (;)) (comment) (}))) (return_statement (return) (identifier) (;)) (})) (}))) (expression_statement (;)))