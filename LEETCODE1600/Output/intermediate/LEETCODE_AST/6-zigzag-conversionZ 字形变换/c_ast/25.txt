(translation_unit (function_definition (type_identifier) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ()))) (<=) (identifier)) (||) (binary_expression (identifier) (<=) (number_literal))) ())) (compound_statement ({) (return_statement (return) (identifier) (;)) (}))) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (binary_expression (number_literal) (*) (identifier)) (-) (number_literal))) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (cast_expression (() (type_descriptor (primitive_type)) ()) (call_expression (identifier) (argument_list (() (binary_expression (cast_expression (() (type_descriptor (primitive_type)) ()) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ())))) (/) (identifier)) ()))))) (;)) (declaration (type_identifier) (identifier) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (++) (identifier)) ()) (compound_statement ({) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (++) (identifier)) ()) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (binary_expression (identifier) (*) (identifier)) (+) (identifier))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ())))) ())) (compound_statement ({) (expression_statement (binary_expression (identifier) (<<) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (}))) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (!=) (number_literal)) (&&) (binary_expression (binary_expression (identifier) (+) (number_literal)) (!=) (identifier))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (binary_expression (identifier) (*) (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ()))) (-) (identifier))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ())))) ())) (compound_statement ({) (expression_statement (binary_expression (identifier) (<<) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (}))) (}))) (}))) (}))) (return_statement (return) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ()))) (;)) (}))))