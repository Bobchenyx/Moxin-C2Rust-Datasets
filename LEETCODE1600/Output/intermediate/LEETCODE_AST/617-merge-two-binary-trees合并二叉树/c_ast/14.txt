(translation_unit (comment) (function_definition (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (unary_expression (!) (identifier)) (&&) (unary_expression (!) (identifier))) ())) (return_statement (return) (null (NULL)) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (&&) (identifier)) ())) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (+=) (field_expression (identifier) (->) (field_identifier))) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (&&) (unary_expression (!) (identifier))) ())) (return_statement (return) (identifier) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (unary_expression (!) (identifier)) (&&) (identifier)) ())) (return_statement (return) (identifier) (;))) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) (,) (field_expression (identifier) (->) (field_identifier)) ())))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) (,) (field_expression (identifier) (->) (field_identifier)) ())))) (;)) (return_statement (return) (identifier) (;)) (}))))