(translation_unit (comment) (comment) (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (comment) (expression_statement (assignment_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (+=) (field_expression (identifier) (->) (field_identifier))) (;)) (comment) (expression_statement (assignment_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (+=) (number_literal)) (;)) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (<) (binary_expression (identifier) (+) (number_literal))) ())) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (binary_expression (identifier) (+) (number_literal))) (;)) (}))) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (!=) (null (NULL))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) (,) (identifier) (,) (identifier) (,) (identifier) (,) (binary_expression (identifier) (+) (number_literal)) ()))) (;)) (}))) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (!=) (null (NULL))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) (,) (identifier) (,) (identifier) (,) (identifier) (,) (binary_expression (identifier) (+) (number_literal)) ()))) (;)) (}))) (}))) (comment) (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (comment) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (number_literal)) (;)) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (compound_statement ({) (return_statement (return) (null (NULL)) (;)) (}))) (comment) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (number_literal)) ()))))) (;)) (comment) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (number_literal)) ()))))) (;)) (comment) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (number_literal)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (=) (number_literal)) (;)) (expression_statement (assignment_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (=) (number_literal)) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) (,) (identifier) (,) (number_literal) ()))) (;)) (comment) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (pointer_expression (*) (identifier))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (=) (binary_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (/) (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))))) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (return_statement (return) (identifier) (;)) (}))))