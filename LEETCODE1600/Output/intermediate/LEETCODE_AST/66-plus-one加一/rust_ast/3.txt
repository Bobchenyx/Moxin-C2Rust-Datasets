(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (mutable_specifier) (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>)))) ())) (->) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (let_declaration (let) (mutable_specifier) (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (=) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() ()))) (;)) (expression_statement (loop_expression (loop) (block ({) (let_declaration (let) (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (;)) (expression_statement (if_expression (if) (binary_expression (identifier) (==) (identifier)) (block ({) (expression_statement (break_expression (break)) (;)) (})))) (let_declaration (let) (identifier) (=) (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (+) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (/) (integer_literal))) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (integer_literal) (,) (binary_expression (identifier) (%) (integer_literal)) ()))) (;)) (})))) (expression_statement (if_expression (if) (binary_expression (identifier) (>) (integer_literal)) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (integer_literal) (,) (identifier) ()))) (;)) (})))) (identifier) (}))) (}))))