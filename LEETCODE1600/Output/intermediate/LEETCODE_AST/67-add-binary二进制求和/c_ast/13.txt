(translation_unit (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (parenthesized_expression (() (conditional_expression (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (>) (call_expression (identifier) (argument_list (() (identifier) ())))) (?) (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (+) (number_literal)) (:) (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (+) (number_literal))) ()))) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (identifier)) ()))))) (;)) (comment) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (=) (char_literal (') (escape_sequence) ('))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (-) (number_literal))) (,) (init_declarator (identifier) (=) (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (-) (number_literal))) (,) (init_declarator (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (>=) (number_literal)) ())) (||) (parenthesized_expression (() (binary_expression (identifier) (>=) (number_literal)) ()))) (;) (comma_expression (update_expression (identifier) (--)) (,) (comma_expression (update_expression (identifier) (--)) (,) (update_expression (identifier) (--)))) ()) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (+=) (parenthesized_expression (() (conditional_expression (binary_expression (identifier) (>=) (number_literal)) (?) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (-) (char_literal (') (character) ('))) (:) (number_literal)) ()))) (;)) (expression_statement (assignment_expression (identifier) (+=) (parenthesized_expression (() (conditional_expression (binary_expression (identifier) (>=) (number_literal)) (?) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (-) (char_literal (') (character) ('))) (:) (number_literal)) ()))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (/) (number_literal))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (binary_expression (char_literal (') (character) (')) (+) (binary_expression (identifier) (%) (number_literal)))) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (comment) (return_statement (return) (binary_expression (identifier) (+) (number_literal)) (;))) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (char_literal (') (character) ('))) (;)) (comment) (return_statement (return) (identifier) (;)) (}))))