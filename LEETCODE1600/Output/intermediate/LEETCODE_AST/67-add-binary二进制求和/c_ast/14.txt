(translation_unit (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (identifier)) (,) (init_declarator (pointer_declarator (*) (identifier)) (=) (identifier)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (false)) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (,) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (,) (identifier) (;)) (expression_statement (assignment_expression (identifier) (=) (conditional_expression (binary_expression (identifier) (>) (identifier)) (?) (identifier) (:) (identifier))) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (null (NULL))) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (pointer_expression (*) (update_expression (++) (identifier))) (!=) (char_literal (') (escape_sequence) ('))) ())) (expression_statement (;))) (while_statement (while) (parenthesized_expression (() (binary_expression (pointer_expression (*) (update_expression (++) (identifier))) (!=) (char_literal (') (escape_sequence) ('))) ())) (expression_statement (;))) (expression_statement (assignment_expression (identifier) (=) (conditional_expression (binary_expression (identifier) (>) (identifier)) (?) (identifier) (:) (identifier))) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (-) (identifier)) (>) (number_literal)) (||) (binary_expression (binary_expression (identifier) (-) (identifier)) (>) (number_literal))) ())) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (conditional_expression (binary_expression (update_expression (--) (identifier)) (>=) (identifier)) (?) (pointer_expression (*) (identifier)) (:) (char_literal (') (character) (')))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (conditional_expression (binary_expression (update_expression (--) (identifier)) (>=) (identifier)) (?) (pointer_expression (*) (identifier)) (:) (char_literal (') (character) (')))) (;)) (expression_statement (pointer_expression (*) (update_expression (identifier) (--))) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (binary_expression (binary_expression (binary_expression (identifier) (+) (identifier)) (-) (char_literal (') (character) ('))) (+) (identifier))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (pointer_expression (*) (identifier)) (-) (char_literal (') (character) ('))) (>=) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (-=) (number_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (true)) (;)) (})) (else_clause (else) (expression_statement (assignment_expression (identifier) (=) (false)) (;)))) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (true)) ())) (compound_statement ({) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ()))) ()))))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (char_literal (') (character) ('))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (binary_expression (identifier) (+) (number_literal))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (]))) (;)) (}))) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) (=) (char_literal (') (escape_sequence) ('))) (;)) (return_statement (return) (identifier) (;)) (}))) (return_statement (return) (identifier) (;)) (}))))