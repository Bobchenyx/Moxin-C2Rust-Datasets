(translation_unit (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (conditional_expression (parenthesized_expression (() (binary_expression (identifier) (>) (identifier)) ())) (?) (binary_expression (identifier) (+) (number_literal)) (:) (binary_expression (identifier) (+) (number_literal)))) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (*) (parenthesized_expression (() (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) ()))) ()))))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (char_literal (') (character) (')) (,) (identifier) ()))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (=) (char_literal (') (escape_sequence) ('))) (;)) (for_statement (for) (() (assignment_expression (identifier) (-=) (number_literal)) (;) (binary_expression (identifier) (>) (number_literal)) (;) (update_expression (identifier) (--)) ()) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (conditional_expression (parenthesized_expression (() (binary_expression (identifier) (>) (number_literal)) ())) (?) (binary_expression (subscript_expression (identifier) ([) (update_expression (--) (identifier)) (])) (-) (char_literal (') (character) ('))) (:) (number_literal))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (conditional_expression (parenthesized_expression (() (binary_expression (identifier) (>) (number_literal)) ())) (?) (binary_expression (subscript_expression (identifier) ([) (update_expression (--) (identifier)) (])) (-) (char_literal (') (character) ('))) (:) (number_literal))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (+=) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (char_literal (') (character) ('))) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (char_literal (') (character) ('))) (;)) (expression_statement (update_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (++)) (;)) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (char_literal (') (character) ('))) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (char_literal (') (character) ('))) (;)) (expression_statement (update_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (++)) (;)) (}))))) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (number_literal) (])) (==) (char_literal (') (character) ('))) ())) (expression_statement (update_expression (identifier) (++)) (;))) (return_statement (return) (identifier) (;)) (}))))