(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type)) (,) (parameter_declaration (primitive_type) (abstract_pointer_declarator (*))) (,) (parameter_declaration (primitive_type) (abstract_pointer_declarator (*))) ()))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (identifier)) ())) (compound_statement ({) (comment) (return_statement (return) (number_literal) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (>) (number_literal)) (&&) (binary_expression (call_expression (identifier) (argument_list (() (binary_expression (identifier) (%) (number_literal)) ()))) (>) (number_literal))) ())) (compound_statement ({) (return_statement (return) (number_literal) (;)) (}))) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (pointer_expression (&) (identifier)) (,) (pointer_expression (&) (identifier)) ())))) (;)) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (<) (number_literal)) ())) (compound_statement ({) (expression_statement (update_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (++)) (;)) (return_statement (return) (identifier) (;)) (}))) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (/) (number_literal)) (,) (identifier) (,) (identifier) ())))) (;)) (if_statement (if) (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (compound_statement ({) (return_statement (return) (number_literal) (;)) (}))) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (binary_expression (identifier) (%) (number_literal)) (*) (call_expression (identifier) (argument_list (() (number_literal) (,) (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) ()))))) (;)) (expression_statement (update_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (++)) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (conditional_expression (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (identifier) (>) (number_literal)) (&&) (binary_expression (binary_expression (identifier) (-) (identifier)) (<) (identifier))) ())) (||) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (<) (number_literal)) (&&) (binary_expression (binary_expression (identifier) (-) (identifier)) (>) (identifier))) ()))) (?) (number_literal) (:) (number_literal))) (;)) (return_statement (return) (conditional_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (?) (number_literal) (:) (binary_expression (identifier) (+) (identifier))) (;)) (}))))