(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (primitive_type)) ())) (->) (primitive_type) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (:) (primitive_type) (=) (integer_literal) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (identifier) (;)) (expression_statement (while_expression (while) (binary_expression (identifier) (!=) (integer_literal)) (block ({) (expression_statement (compound_assignment_expr (identifier) (+=) (type_cast_expression (parenthesized_expression (() (binary_expression (identifier) (%) (integer_literal)) ())) (as) (primitive_type))) (;)) (expression_statement (compound_assignment_expr (identifier) (/=) (integer_literal)) (;)) (expression_statement (if_expression (if) (binary_expression (identifier) (!=) (integer_literal)) (block ({) (expression_statement (compound_assignment_expr (identifier) (*=) (integer_literal)) (;)) (})))) (})))) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (identifier) ()))) (}))) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (primitive_type)) ())) (->) (primitive_type) (block ({) (expression_statement (if_expression (if) (binary_expression (binary_expression (identifier) (>) (parenthesized_expression (() (type_cast_expression (scoped_identifier (scoped_identifier (identifier) (::) (identifier)) (::) (identifier)) (as) (primitive_type)) ()))) (||) (binary_expression (identifier) (<) (parenthesized_expression (() (type_cast_expression (scoped_identifier (scoped_identifier (identifier) (::) (identifier)) (::) (identifier)) (as) (primitive_type)) ())))) (block ({) (integer_literal) (})) (else_clause (else) (block ({) (type_cast_expression (identifier) (as) (primitive_type)) (}))))) (}))) (}))))