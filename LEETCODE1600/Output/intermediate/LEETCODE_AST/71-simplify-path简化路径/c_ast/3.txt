(translation_unit (preproc_def (#define) (identifier) (preproc_arg)) (declaration (storage_class_specifier (static)) (primitive_type) (init_declarator (pointer_declarator (*) (array_declarator (identifier) ([) (identifier) (]))) (=) (initializer_list ({) (number_literal) (}))) (;)) (declaration (storage_class_specifier (static)) (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (function_definition (storage_class_specifier (static)) (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type)) ()))) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (binary_expression (identifier) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()))) ()))) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (}))) (function_definition (storage_class_specifier (static)) (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>=) (identifier)) ())) (compound_statement ({) (return_statement (return) (;)) (}))) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (identifier) (++)) (])) (=) (identifier)) (;)) (}))) (function_definition (storage_class_specifier (static)) (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type)) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<=) (number_literal)) ())) (compound_statement ({) (return_statement (return) (;)) (}))) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (--) (identifier)) (])) (=) (null (NULL))) (;)) (}))) (function_definition (storage_class_specifier (static)) (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type)) ()))) (compound_statement ({) (return_statement (return) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (;)) (}))) (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (declaration (primitive_type) (identifier) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (null (NULL))) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (string_literal (") (string_content) ("))) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (null (NULL))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (null (NULL))) (||) (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (==) (number_literal))) ())) (compound_statement ({) (return_statement (return) (identifier) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() ()))) (;)) (expression_statement (assignment_expression (identifier) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (parenthesized_expression (() (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (+) (number_literal)) ())) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ()))) ()))))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (compound_statement ({) (return_statement (return) (null (NULL)) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (binary_expression (parenthesized_expression (() (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (+) (number_literal)) ())) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ()))) ()))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (char_literal (') (character) ('))) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (!=) (null (NULL))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (call_expression (identifier) (argument_list (() (identifier) (,) (string_literal (") (string_content) (")) ()))) (!=) (number_literal)) (&&) (binary_expression (call_expression (identifier) (argument_list (() (identifier) (,) (string_literal (") (string_content) (")) ()))) (!=) (number_literal))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (}))) (}))) (while_statement (while) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (null (NULL)) (,) (identifier) ())))) ())) (!=) (null (NULL))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (call_expression (identifier) (argument_list (() (identifier) (,) (string_literal (") (string_content) (")) ()))) (==) (number_literal)) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (call_expression (identifier) (argument_list (() ()))) (==) (false)) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() ()))) (;)) (}))) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (call_expression (identifier) (argument_list (() (identifier) (,) (string_literal (") (string_content) (")) ()))) (!=) (number_literal)) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (}))))) (}))) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (subscript_expression (identifier) ([) (identifier) (])) ()))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (!=) (parenthesized_expression (() (binary_expression (identifier) (-) (number_literal)) ()))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (string_literal (") (string_content) (")) ()))) (;)) (}))) (}))) (return_statement (return) (identifier) (;)) (}))))