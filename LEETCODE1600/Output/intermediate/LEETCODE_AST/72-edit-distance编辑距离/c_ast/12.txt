(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (return_statement (return) (identifier) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (return_statement (return) (identifier) (;))) (declaration (primitive_type) (identifier) (,) (identifier) (,) (identifier) (;)) (declaration (primitive_type) (array_declarator (array_declarator (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) ([) (binary_expression (identifier) (+) (number_literal)) (])) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<=) (identifier)) (;) (update_expression (identifier) (++)) ()) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (number_literal) (])) (=) (identifier)) (;))) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<=) (identifier)) (;) (update_expression (identifier) (++)) ()) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (number_literal) (])) ([) (identifier) (])) (=) (identifier)) (;))) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<=) (identifier)) (;) (update_expression (identifier) (++)) ()) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<=) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) ([) (identifier) (])) (+) (number_literal))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (binary_expression (identifier) (-) (number_literal)) (])) (+) (number_literal))) (;)) (declaration (primitive_type) (identifier) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (==) (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (]))) ())) (expression_statement (assignment_expression (identifier) (=) (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) ([) (binary_expression (identifier) (-) (number_literal)) (]))) (;)) (else_clause (else) (expression_statement (assignment_expression (identifier) (=) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) ([) (binary_expression (identifier) (-) (number_literal)) (])) (+) (number_literal))) (;)))) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (conditional_expression (binary_expression (identifier) (>) (identifier)) (?) (identifier) (:) (identifier))) (;)) (expression_statement (assignment_expression (identifier) (=) (conditional_expression (binary_expression (identifier) (>) (identifier)) (?) (identifier) (:) (identifier))) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (=) (identifier)) (;)) (})))) (return_statement (return) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (;)) (}))))