(translation_unit (ERROR (update_expression (identifier) (++))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (identifier)) (,) (parameter_declaration (type_identifier) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ())))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ())))) (;)) (expression_statement (comma_expression (binary_expression (binary_expression (binary_expression (identifier) (<) (identifier)) (<) (identifier)) (<) (identifier)) (,) (binary_expression (identifier) (>>) (ERROR (>)) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (+) (number_literal)) (,) (binary_expression (binary_expression (identifier) (<) (identifier)) (<) (identifier)) (,) (binary_expression (identifier) (>>) (parenthesized_expression (() (comma_expression (binary_expression (identifier) (+) (number_literal)) (,) (comma_expression (binary_expression (identifier) (<) (identifier)) (,) (binary_expression (identifier) (>) (parenthesized_expression (() (compound_statement ({) (ERROR (comma_expression (number_literal) (,) (char_literal (') (character) (')))) (})) ()))))) ()))) ()))))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (binary_expression (identifier) (+) (number_literal))) (;) (update_expression (identifier) (++)) ()) (expression_statement (comma_expression (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (number_literal) (])) (=) (ERROR ({)) (identifier)) (,) (char_literal (') (character) ('))) (ERROR (})) (;))) (comment) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (binary_expression (identifier) (+) (number_literal))) (;) (update_expression (identifier) (++)) ()) (expression_statement (comma_expression (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (number_literal) (])) ([) (identifier) (])) (=) (ERROR ({)) (identifier)) (,) (char_literal (') (character) ('))) (ERROR (})) (;))) (comment) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<=) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<=) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (==) (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (]))) ())) (compound_statement ({) (comment) (expression_statement (assignment_expression (field_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (.) (field_identifier)) (=) (field_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) ([) (binary_expression (identifier) (-) (number_literal)) (])) (.) (field_identifier))) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (.) (field_identifier)) (=) (char_literal (') (character) ('))) (;)) (})) (else_clause (else) (compound_statement ({) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (field_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) ([) (binary_expression (identifier) (-) (number_literal)) (])) (.) (field_identifier)) (+) (number_literal))) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (.) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (.) (field_identifier)) (=) (char_literal (') (character) ('))) (;)) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (field_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (binary_expression (identifier) (-) (number_literal)) (])) (.) (field_identifier)) (+) (number_literal)) (<) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (field_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (binary_expression (identifier) (-) (number_literal)) (])) (.) (field_identifier)) (+) (number_literal))) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (.) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (.) (field_identifier)) (=) (char_literal (') (character) ('))) (;)) (}))) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (field_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) ([) (identifier) (])) (.) (field_identifier)) (+) (number_literal)) (<) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (field_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) ([) (identifier) (])) (.) (field_identifier)) (+) (number_literal))) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (.) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (.) (field_identifier)) (=) (char_literal (') (character) ('))) (;)) (}))) (})))) (}))) (}))) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (identifier)) (,) (init_declarator (identifier) (=) (identifier)) (;)) (expression_statement (binary_expression (binary_expression (identifier) (<) (identifier)) (>) (identifier)) (;)) (declaration (primitive_type) (identifier) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (!=) (number_literal)) (||) (binary_expression (identifier) (!=) (number_literal))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (field_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (.) (field_identifier))) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() (identifier) ()))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (char_literal (') (character) ('))) ())) (expression_statement (update_expression (identifier) (--)) (;)) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (char_literal (') (character) ('))) ())) (expression_statement (update_expression (identifier) (--)) (;)) (else_clause (else) (compound_statement ({) (expression_statement (update_expression (identifier) (--)) (;)) (expression_statement (update_expression (identifier) (--)) (;)) (})))))) (}))) (comment) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (expression_statement (binary_expression (binary_expression (identifier) (<) (identifier)) (>) (identifier)) (;)) (declaration (type_identifier) (init_declarator (identifier) (=) (identifier)) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() (identifier) ()))) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ()))) (==) (false)) ())) (compound_statement ({) (switch_statement (switch) (parenthesized_expression (() (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ()))) ())) (compound_statement ({) (case_statement (case) (char_literal (') (character) (')) (:) (break_statement (break) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (expression_statement (assignment_expression (identifier) (=) (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() (number_literal) (,) (identifier) ()))) (+) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() (binary_expression (identifier) (+) (number_literal)) (,) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ()))) ()))))) (;)) (expression_statement (update_expression (identifier) (--)) (;)) (break_statement (break) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (expression_statement (assignment_expression (identifier) (=) (binary_expression (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() (number_literal) (,) (identifier) ()))) (+) (subscript_expression (identifier) ([) (identifier) (]))) (+) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() (identifier) (,) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ()))) ()))))) (;)) (break_statement (break) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (subscript_expression (identifier) ([) (identifier) (]))) (;))) (}))) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ()))) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() (identifier) ()))) (;)) (}))) (comment) (while_statement (while) (parenthesized_expression (() (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ()))) (==) (false)) ())) (compound_statement ({) (expression_statement (binary_expression (identifier) (<<) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ())))) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ()))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ()))) (==) (false)) ())) (expression_statement (binary_expression (identifier) (<<) (string_literal (") (string_content) ("))) (;))) (}))) (return_statement (return) (field_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (.) (field_identifier)) (;)) (}))))