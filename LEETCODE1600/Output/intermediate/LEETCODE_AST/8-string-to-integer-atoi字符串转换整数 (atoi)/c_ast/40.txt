(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (==) (char_literal (') (character) ('))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (char_literal (') (character) ('))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (pointer_expression (*) (identifier)) (==) (char_literal (') (character) ('))) (||) (binary_expression (pointer_expression (*) (identifier)) (==) (char_literal (') (character) (')))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (while_statement (while) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (>=) (char_literal (') (character) ('))) ())) (&&) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (<=) (char_literal (') (character) ('))) ()))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (*) (number_literal)) ())) (+) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (-) (char_literal (') (character) ('))) ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (!=) (cast_expression (() (type_descriptor (primitive_type)) ()) (identifier))) ())) (compound_statement ({) (comment) (return_statement (return) (conditional_expression (binary_expression (identifier) (==) (number_literal)) (?) (identifier) (:) (identifier)) (;)) (}))) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (expression_statement (assignment_expression (identifier) (*=) (identifier)) (;)) (return_statement (return) (identifier) (;)) (}))))