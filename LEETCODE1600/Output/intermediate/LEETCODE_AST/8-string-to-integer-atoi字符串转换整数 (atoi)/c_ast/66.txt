(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (sized_type_specifier (long)) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (call_expression (identifier) (argument_list (() (identifier) ())))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (char_literal (') (character) ('))) (&&) (binary_expression (identifier) (==) (number_literal))) ())) (compound_statement ({) (continue_statement (continue) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (char_literal (') (character) ('))) (||) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (char_literal (') (character) (')))) ())) (&&) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) (<) (number_literal)) (||) (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) (>) (number_literal))) ()))) ())) (break_statement (break) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (char_literal (') (character) ('))) (&&) (binary_expression (identifier) (==) (number_literal))) ())) (continue_statement (continue) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (number_literal)) (&&) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (char_literal (') (character) ('))) (||) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (char_literal (') (character) (')))) ()))) ())) (break_statement (break) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (<) (number_literal)) (||) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (>) (number_literal))) ())) (&&) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (!=) (char_literal (') (character) (')))) ())) (compound_statement ({) (break_statement (break) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (char_literal (') (character) ('))) (&&) (binary_expression (identifier) (==) (number_literal))) ())) (expression_statement (assignment_expression (identifier) (=) (binary_expression (number_literal) (*) (identifier))) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (!=) (char_literal (') (character) ('))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (binary_expression (identifier) (*) (number_literal)) (+) (cast_expression (() (type_descriptor (primitive_type)) ()) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (-) (number_literal)) ()))))) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (*) (identifier)) (>) (identifier)) ())) (return_statement (return) (identifier) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (*) (identifier)) (<) (identifier)) ())) (return_statement (return) (identifier) (;))) (}))) (return_statement (return) (binary_expression (identifier) (*) (identifier)) (;)) (}))))