(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (return_statement (return) (number_literal) (;))) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (while_statement (while) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (char_literal (') (character) ('))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (char_literal (') (character) ('))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (char_literal (') (character) ('))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (}))))) (declaration (primitive_type) (identifier) (;)) (expression_statement (assignment_expression (identifier) (=) (pointer_expression (&) (subscript_expression (identifier) ([) (identifier) (])))) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (declaration (sized_type_specifier (long)) (init_declarator (identifier) (=) (number_literal)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (<) (call_expression (identifier) (argument_list (() (identifier) ())))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (-) (char_literal (') (character) (')))) (;)) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (<) (number_literal)) (||) (binary_expression (identifier) (>) (number_literal))) ())) (break_statement (break) (;))) (comment) (expression_statement (assignment_expression (identifier) (=) (binary_expression (binary_expression (identifier) (*) (number_literal)) (+) (identifier))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (>) (identifier)) (&&) (binary_expression (identifier) (==) (number_literal))) ())) (return_statement (return) (identifier) (;)) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (>) (identifier)) (&&) (binary_expression (identifier) (==) (number_literal))) ())) (return_statement (return) (identifier) (;))))) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (expression_statement (assignment_expression (identifier) (*=) (identifier)) (;)) (return_statement (return) (identifier) (;)) (}))))