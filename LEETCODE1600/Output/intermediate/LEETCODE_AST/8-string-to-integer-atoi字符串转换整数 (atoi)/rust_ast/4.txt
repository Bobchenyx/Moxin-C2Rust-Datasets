(source_file (function_item (fn) (identifier) (parameters (() (parameter (identifier) (:) (primitive_type)) ())) (->) (primitive_type) (block ({) (type_cast_expression (parenthesized_expression (() (binary_expression (type_cast_expression (identifier) (as) (primitive_type)) (-) (type_cast_expression (char_literal) (as) (primitive_type))) ())) (as) (primitive_type)) (}))) (enum_item (enum) (type_identifier) (enum_variant_list ({) (enum_variant (identifier)) (,) (enum_variant (identifier) (ordered_field_declaration_list (() (primitive_type) ()))) (,) (enum_variant (identifier) (ordered_field_declaration_list (() (primitive_type) ()))) (,) (enum_variant (identifier) (ordered_field_declaration_list (() (primitive_type) ()))) (,) (}))) (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (fn) (identifier) (parameters (() (parameter (identifier) (:) (primitive_type)) ())) (->) (tuple_type (() (primitive_type) (,) (primitive_type) ())) (block ({) (expression_statement (match_expression (match) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (integer_literal) ()))) (match_block ({) (match_arm (match_pattern (tuple_pattern (() (_) (,) (boolean_literal (true)) ()))) (=>) (match_expression (match) (binary_expression (identifier) (>) (integer_literal)) (match_block ({) (match_arm (match_pattern (boolean_literal (true))) (=>) (tuple_expression (() (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() ()))) (,) (boolean_literal (true)) ())) (,)) (match_arm (match_pattern (boolean_literal (false))) (=>) (tuple_expression (() (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() ()))) (,) (boolean_literal (true)) ())) (,)) (}))) (,)) (match_arm (match_pattern (tuple_pattern (() (identifier) (,) (boolean_literal (false)) ()))) (=>) (tuple_expression (() (identifier) (,) (boolean_literal (false)) ())) (,)) (})))) (}))) (function_item (fn) (identifier) (parameters (() (parameter (identifier) (:) (primitive_type)) (,) (parameter (identifier) (:) (primitive_type)) ())) (->) (tuple_type (() (primitive_type) (,) (primitive_type) ())) (block ({) (expression_statement (match_expression (match) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (identifier) ()))) (match_block ({) (match_arm (match_pattern (tuple_pattern (() (identifier) (,) (boolean_literal (true)) ()))) (=>) (tuple_expression (() (identifier) (,) (boolean_literal (true)) ())) (,)) (match_arm (match_pattern (tuple_pattern (() (identifier) (,) (boolean_literal (false)) ()))) (=>) (match_expression (match) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (identifier) ()))) (match_block ({) (match_arm (match_pattern (tuple_pattern (() (_) (,) (boolean_literal (true)) ()))) (=>) (tuple_expression (() (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() ()))) (,) (boolean_literal (true)) ())) (,)) (match_arm (match_pattern (tuple_pattern (() (identifier) (,) (boolean_literal (false)) ()))) (=>) (tuple_expression (() (identifier) (,) (boolean_literal (false)) ())) (,)) (}))) (,)) (})))) (}))) (function_item (fn) (identifier) (parameters (() (parameter (identifier) (:) (primitive_type)) (,) (parameter (identifier) (:) (primitive_type)) ())) (->) (tuple_type (() (primitive_type) (,) (primitive_type) ())) (block ({) (expression_statement (match_expression (match) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (identifier) ()))) (match_block ({) (match_arm (match_pattern (tuple_pattern (() (identifier) (,) (boolean_literal (true)) ()))) (=>) (tuple_expression (() (identifier) (,) (boolean_literal (true)) ())) (,)) (match_arm (match_pattern (tuple_pattern (() (identifier) (,) (boolean_literal (false)) ()))) (=>) (match_expression (match) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (identifier) ()))) (match_block ({) (match_arm (match_pattern (tuple_pattern (() (_) (,) (boolean_literal (true)) ()))) (=>) (tuple_expression (() (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() ()))) (,) (boolean_literal (true)) ())) (,)) (match_arm (match_pattern (tuple_pattern (() (identifier) (,) (boolean_literal (false)) ()))) (=>) (tuple_expression (() (identifier) (,) (boolean_literal (false)) ())) (,)) (}))) (,)) (})))) (}))) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (type_identifier)) ())) (->) (primitive_type) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (scoped_identifier (identifier) (::) (identifier)) (;)) (expression_statement (for_expression (for) (identifier) (in) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (block ({) (expression_statement (assignment_expression (identifier) (=) (match_expression (match) (identifier) (match_block ({) (match_arm (match_pattern (scoped_identifier (identifier) (::) (identifier))) (=>) (match_expression (match) (identifier) (match_block ({) (match_arm (match_pattern (char_literal)) (=>) (continue_expression (continue)) (,)) (match_arm (match_pattern (char_literal)) (=>) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (integer_literal) ()))) (,)) (match_arm (match_pattern (char_literal)) (=>) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (integer_literal) ()))) (,)) (match_arm (match_pattern (range_pattern (char_literal) (..=) (char_literal))) (=>) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (call_expression (identifier) (arguments (() (identifier) ()))) ()))) (,)) (match_arm (match_pattern (_)) (=>) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (integer_literal) ()))) (,)) (}))) (,)) (match_arm (match_pattern (tuple_struct_pattern (scoped_identifier (identifier) (::) (identifier)) (() (identifier) ()))) (=>) (match_expression (match) (identifier) (match_block ({) (match_arm (match_pattern (range_pattern (char_literal) (..=) (char_literal))) (=>) (match_expression (match) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (identifier) (,) (call_expression (identifier) (arguments (() (identifier) ()))) ()))) (match_block ({) (match_arm (match_pattern (tuple_pattern (() (identifier) (,) (boolean_literal (true)) ()))) (=>) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (identifier) ()))) (,)) (match_arm (match_pattern (tuple_pattern (() (identifier) (,) (boolean_literal (false)) ()))) (=>) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (identifier) ()))) (,)) (}))) (,)) (match_arm (match_pattern (_)) (=>) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (identifier) ()))) (,)) (}))) (,)) (match_arm (match_pattern (tuple_struct_pattern (scoped_identifier (identifier) (::) (identifier)) (() (identifier) ()))) (=>) (match_expression (match) (identifier) (match_block ({) (match_arm (match_pattern (range_pattern (char_literal) (..=) (char_literal))) (=>) (match_expression (match) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (identifier) (,) (call_expression (identifier) (arguments (() (identifier) ()))) ()))) (match_block ({) (match_arm (match_pattern (tuple_pattern (() (identifier) (,) (boolean_literal (true)) ()))) (=>) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (identifier) ()))) (,)) (match_arm (match_pattern (tuple_pattern (() (identifier) (,) (boolean_literal (false)) ()))) (=>) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (identifier) ()))) (,)) (}))) (,)) (match_arm (match_pattern (_)) (=>) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (identifier) ()))) (,)) (}))) (,)) (match_arm (match_pattern (tuple_struct_pattern (scoped_identifier (identifier) (::) (identifier)) (() (_) ()))) (=>) (break_expression (break)) (,)) (})))) (;)) (})))) (expression_statement (match_expression (match) (identifier) (match_block ({) (match_arm (match_pattern (or_pattern (or_pattern (tuple_struct_pattern (scoped_identifier (identifier) (::) (identifier)) (() (identifier) ())) (|) (tuple_struct_pattern (scoped_identifier (identifier) (::) (identifier)) (() (identifier) ()))) (|) (tuple_struct_pattern (scoped_identifier (identifier) (::) (identifier)) (() (identifier) ())))) (=>) (identifier) (,)) (match_arm (match_pattern (scoped_identifier (identifier) (::) (identifier))) (=>) (integer_literal) (,)) (})))) (}))) (}))))