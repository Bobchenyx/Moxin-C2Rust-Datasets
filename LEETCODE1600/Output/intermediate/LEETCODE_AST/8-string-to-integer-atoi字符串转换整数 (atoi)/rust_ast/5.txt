(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (type_identifier)) ())) (->) (primitive_type) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (boolean_literal (false)) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (expression_statement (for_expression (for) (tuple_pattern (() (identifier) (,) (identifier) ())) (in) (call_expression (field_expression (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (block ({) (expression_statement (if_expression (if) (binary_expression (binary_expression (identifier) (==) (char_literal)) (&&) (binary_expression (identifier) (==) (integer_literal))) (block ({) (expression_statement (continue_expression (continue)) (;)) (})))) (expression_statement (if_expression (if) (binary_expression (binary_expression (identifier) (==) (char_literal)) (&&) (binary_expression (identifier) (==) (integer_literal))) (block ({) (expression_statement (assignment_expression (identifier) (=) (boolean_literal (true))) (;)) (expression_statement (continue_expression (continue)) (;)) (})))) (expression_statement (if_expression (if) (unary_expression (!) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (integer_literal) ())))) (block ({) (expression_statement (break_expression (break)) (;)) (})))) (expression_statement (assignment_expression (identifier) (=) (binary_expression (binary_expression (integer_literal) (*) (identifier)) (+) (type_cast_expression (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (integer_literal) ()))) (.) (field_identifier)) (arguments (() ()))) (as) (primitive_type)))) (;)) (expression_statement (if_expression (if) (identifier) (block ({) (expression_statement (if_expression (if) (binary_expression (unary_expression (-) (identifier)) (<) (type_cast_expression (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() ()))) (as) (primitive_type))) (block ({) (expression_statement (return_expression (return) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() ())))) (;)) (})))) (})) (else_clause (else) (block ({) (expression_statement (if_expression (if) (binary_expression (identifier) (>) (type_cast_expression (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() ()))) (as) (primitive_type))) (block ({) (expression_statement (return_expression (return) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() ())))) (;)) (})))) (}))))) (})))) (expression_statement (if_expression (if) (identifier) (block ({) (type_cast_expression (unary_expression (-) (identifier)) (as) (primitive_type)) (})) (else_clause (else) (block ({) (type_cast_expression (identifier) (as) (primitive_type)) (}))))) (}))) (}))))