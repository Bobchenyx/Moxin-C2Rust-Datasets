(source_file (struct_item (struct) (type_identifier) (field_declaration_list ({) (field_declaration (field_identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (>)))) (,) (}))) (block_comment (/*) (outer_doc_comment_marker) (doc_comment) (*/)) (impl_item (impl) (type_identifier) (declaration_list ({) (block_comment (/*) (outer_doc_comment_marker) (doc_comment) (*/)) (function_item (fn) (identifier) (parameters (() ())) (->) (type_identifier) (block ({) (struct_expression (type_identifier) (field_initializer_list ({) (field_initializer (field_identifier) (:) (macro_invocation (identifier) (!) (token_tree ([) (identifier) (::) (identifier) (token_tree (() ())) (;) (integer_literal) (])))) (,) (}))) (}))) (function_item (fn) (identifier) (parameters (() (self_parameter (&) (mutable_specifier) (self)) (,) (parameter (identifier) (:) (primitive_type)) ())) (block ({) (let_declaration (let) (identifier) (=) (binary_expression (type_cast_expression (identifier) (as) (primitive_type)) (%) (integer_literal)) (;)) (expression_statement (if_expression (if) (unary_expression (!) (call_expression (field_expression (index_expression (field_expression (self) (.) (field_identifier)) ([) (identifier) (])) (.) (field_identifier)) (arguments (() (reference_expression (&) (identifier)) ())))) (block ({) (expression_statement (call_expression (field_expression (index_expression (field_expression (self) (.) (field_identifier)) ([) (identifier) (])) (.) (field_identifier)) (arguments (() (identifier) ()))) (;)) (})))) (}))) (function_item (fn) (identifier) (parameters (() (self_parameter (&) (mutable_specifier) (self)) (,) (parameter (identifier) (:) (primitive_type)) ())) (block ({) (let_declaration (let) (identifier) (=) (binary_expression (type_cast_expression (identifier) (as) (primitive_type)) (%) (integer_literal)) (;)) (expression_statement (match_expression (match) (call_expression (field_expression (call_expression (field_expression (index_expression (field_expression (self) (.) (field_identifier)) ([) (identifier) (])) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() (closure_expression (closure_parameters (|) (reference_pattern (&) (identifier)) (|)) (binary_expression (identifier) (==) (identifier))) ()))) (match_block ({) (match_arm (match_pattern (tuple_struct_pattern (identifier) (() (identifier) ()))) (=>) (call_expression (field_expression (index_expression (field_expression (self) (.) (field_identifier)) ([) (identifier) (])) (.) (field_identifier)) (arguments (() (identifier) ()))) (,)) (match_arm (match_pattern (identifier)) (=>) (integer_literal) (,)) (})))) (empty_statement (;)) (}))) (block_comment (/*) (outer_doc_comment_marker) (doc_comment) (*/)) (function_item (fn) (identifier) (parameters (() (self_parameter (&) (self)) (,) (parameter (identifier) (:) (primitive_type)) ())) (->) (primitive_type) (block ({) (let_declaration (let) (identifier) (=) (binary_expression (type_cast_expression (identifier) (as) (primitive_type)) (%) (integer_literal)) (;)) (call_expression (field_expression (index_expression (field_expression (self) (.) (field_identifier)) ([) (identifier) (])) (.) (field_identifier)) (arguments (() (reference_expression (&) (identifier)) ()))) (}))) (}))) (block_comment (/*) (outer_doc_comment_marker) (doc_comment) (*/)))