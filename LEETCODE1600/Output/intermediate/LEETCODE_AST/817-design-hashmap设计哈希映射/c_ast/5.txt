(translation_unit (preproc_def (#define) (identifier) (preproc_arg)) (type_definition (typedef) (struct_specifier (struct) (field_declaration_list ({) (field_declaration (primitive_type) (array_declarator (field_identifier) ([) (identifier) (])) (;)) (field_declaration (primitive_type) (array_declarator (field_identifier) ([) (identifier) (])) (;)) (}))) (type_identifier) (;)) (comment) (function_definition (type_identifier) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() ())))) (compound_statement ({) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (type_identifier) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (sizeof_expression (sizeof) (parenthesized_expression (() (identifier) ()))) ()))))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) (,) (number_literal) (,) (binary_expression (identifier) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ()))) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) (,) (number_literal) (,) (binary_expression (identifier) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ()))) ()))) (;)) (return_statement (return) (identifier) (;)) (}))) (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) (=) (identifier)) (;)) (expression_statement (assignment_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) (=) (true)) (;)) (}))) (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) (==) (false)) ())) (compound_statement ({) (return_statement (return) (number_literal) (;)) (})) (else_clause (else) (compound_statement ({) (return_statement (return) (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) (;)) (})))) (}))) (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) (=) (false)) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (}))) (comment))