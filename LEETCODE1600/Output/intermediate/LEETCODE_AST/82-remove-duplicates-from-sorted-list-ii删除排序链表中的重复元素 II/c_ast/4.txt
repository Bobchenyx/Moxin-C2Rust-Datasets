(translation_unit (comment) (type_definition (typedef) (struct_specifier (struct) (type_identifier)) (type_identifier) (,) (pointer_declarator (*) (type_identifier)) (;)) (function_definition (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (compound_statement ({) (return_statement (return) (null (NULL)) (;)) (}))) (declaration (type_identifier) (identifier) (;)) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (identifier)) (;)) (declaration (type_identifier) (init_declarator (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (declaration (type_identifier) (init_declarator (identifier) (=) (identifier)) (;)) (declaration (type_identifier) (init_declarator (identifier) (=) (pointer_expression (&) (identifier))) (;)) (while_statement (while) (parenthesized_expression (() (identifier) ())) (compound_statement ({) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (&&) (binary_expression (field_expression (identifier) (->) (field_identifier)) (==) (field_expression (identifier) (->) (field_identifier)))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (!=) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (identifier)) (;)) (comment) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (})))) (if_statement (if) (parenthesized_expression (() (identifier) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (}))) (}))) (return_statement (return) (field_expression (identifier) (.) (field_identifier)) (;)) (}))))