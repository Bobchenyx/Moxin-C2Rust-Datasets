(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (null (NULL))) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (null (NULL))) (;)) (expression_statement (assignment_expression (identifier) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ()))) ()))))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (binary_expression (identifier) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ()))) ()))) (;)) (expression_statement (assignment_expression (identifier) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ()))) ()))))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (binary_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ()))) ()))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (for_statement (for) (() (comma_expression (assignment_expression (identifier) (=) (number_literal)) (,) (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (number_literal) (])))) (;) (binary_expression (identifier) (<) (pointer_expression (*) (identifier))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (conditional_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (>) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (]))) (?) (subscript_expression (identifier) ([) (identifier) (])) (:) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])))) (;)) (}))) (}))) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (pointer_expression (*) (identifier))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (for_statement (for) (() (comma_expression (assignment_expression (identifier) (=) (number_literal)) (,) (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (subscript_expression (subscript_expression (identifier) ([) (number_literal) (])) ([) (identifier) (])))) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (conditional_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (>) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (]))) (?) (subscript_expression (identifier) ([) (identifier) (])) (:) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])))) (;)) (}))) (}))) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (pointer_expression (*) (identifier))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (binary_expression (identifier) (+) (parenthesized_expression (() (conditional_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (<) (subscript_expression (identifier) ([) (identifier) (]))) (?) (subscript_expression (identifier) ([) (identifier) (])) (:) (subscript_expression (identifier) ([) (identifier) (]))) ()))) (-) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])))) (;)) (}))) (}))) (comment) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (return_statement (return) (identifier) (;)) (}))))