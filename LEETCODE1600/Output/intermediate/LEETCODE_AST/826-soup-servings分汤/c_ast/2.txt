(translation_unit (preproc_call (preproc_directive) (preproc_arg)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (return_statement (return) (conditional_expression (parenthesized_expression (() (binary_expression (identifier) (>) (number_literal)) ())) (?) (identifier) (:) (number_literal)) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>=) (number_literal)) ())) (compound_statement ({) (return_statement (return) (number_literal) (;)) (}))) (expression_statement (assignment_expression (identifier) (=) (cast_expression (() (type_descriptor (primitive_type)) ()) (call_expression (identifier) (argument_list (() (binary_expression (cast_expression (() (type_descriptor (primitive_type)) ()) (identifier)) (/) (number_literal)) ()))))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (identifier))) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*) (abstract_pointer_declarator (*)))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ())) (*) (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ()))) ()))))) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (binary_expression (identifier) (+) (number_literal))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ()))) ()))))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) (,) (number_literal) (,) (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ()))) ()))) (;)) (}))) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (binary_expression (identifier) (+) (number_literal))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (binary_expression (identifier) (+) (number_literal))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (<=) (number_literal)) (&&) (binary_expression (identifier) (>) (number_literal))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (<=) (number_literal)) (&&) (binary_expression (identifier) (<=) (number_literal))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (>) (number_literal)) (&&) (binary_expression (identifier) (<=) (number_literal))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (-) (number_literal)) ())))) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])))) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (-) (number_literal)) ())))) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (-) (number_literal)) ())))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])))) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (-) (number_literal)) ())))) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (-) (number_literal)) ())))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])))) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (-) (number_literal)) ())))) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (-) (number_literal)) ())))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (*) (number_literal))) (;)) (})))))))) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (=) (identifier)) (;)) (}))) (}))) (return_statement (return) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (;)) (}))))