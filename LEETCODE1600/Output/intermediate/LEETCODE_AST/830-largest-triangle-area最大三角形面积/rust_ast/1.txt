(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (>)))) ())) (->) (primitive_type) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (parenthesized_expression (() (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (-) (integer_literal)) ()))) (block ({) (let_declaration (let) (identifier) (=) (reference_expression (&) (index_expression (identifier) ([) (identifier) (]))) (;)) (expression_statement (for_expression (for) (identifier) (in) (range_expression (parenthesized_expression (() (binary_expression (identifier) (+) (integer_literal)) ())) (..) (parenthesized_expression (() (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (-) (integer_literal)) ()))) (block ({) (let_declaration (let) (identifier) (=) (reference_expression (&) (index_expression (identifier) ([) (identifier) (]))) (;)) (expression_statement (for_expression (for) (identifier) (in) (range_expression (parenthesized_expression (() (binary_expression (identifier) (+) (integer_literal)) ())) (..) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ())))) (block ({) (let_declaration (let) (identifier) (=) (reference_expression (&) (index_expression (identifier) ([) (identifier) (]))) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (identifier) (,) (identifier) (,) (identifier) ()))) ())))) (;)) (})))) (})))) (})))) (identifier) (}))) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (reference_type (&) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))))) (,) (parameter (identifier) (:) (reference_type (&) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))))) (,) (parameter (identifier) (:) (reference_type (&) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))))) ())) (->) (primitive_type) (block ({) (binary_expression (type_cast_expression (call_expression (field_expression (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (binary_expression (binary_expression (binary_expression (index_expression (identifier) ([) (integer_literal) (])) (*) (index_expression (identifier) ([) (integer_literal) (]))) (+) (binary_expression (index_expression (identifier) ([) (integer_literal) (])) (*) (index_expression (identifier) ([) (integer_literal) (])))) (+) (binary_expression (index_expression (identifier) ([) (integer_literal) (])) (*) (index_expression (identifier) ([) (integer_literal) (])))) (-) (binary_expression (index_expression (identifier) ([) (integer_literal) (])) (*) (index_expression (identifier) ([) (integer_literal) (])))) (-) (binary_expression (index_expression (identifier) ([) (integer_literal) (])) (*) (index_expression (identifier) ([) (integer_literal) (])))) (-) (binary_expression (index_expression (identifier) ([) (integer_literal) (])) (*) (index_expression (identifier) ([) (integer_literal) (])))) ())) (.) (field_identifier)) (arguments (() ()))) (as) (primitive_type)) (/) (float_literal)) (}))) (}))))