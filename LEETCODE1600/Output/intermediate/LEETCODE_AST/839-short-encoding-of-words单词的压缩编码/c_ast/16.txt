(translation_unit (type_definition (typedef) (struct_specifier (struct) (type_identifier) (field_declaration_list ({) (field_declaration (primitive_type) (field_identifier) (;)) (field_declaration (primitive_type) (field_identifier) (;)) (field_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (array_declarator (field_identifier) ([) (number_literal) (]))) (;)) (}))) (type_identifier) (;)) (function_definition (type_identifier) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() ())))) (compound_statement ({) (declaration (type_identifier) (pointer_declarator (*) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (cast_expression (() (type_descriptor (type_identifier) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (sizeof_expression (sizeof) (parenthesized_expression (() (identifier) ()))) ()))))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (sizeof_expression (sizeof) (parenthesized_expression (() (pointer_expression (*) (identifier)) ()))) ()))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (false)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (false)) (;)) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (binary_expression (identifier) (>=) (number_literal)) (;) (update_expression (identifier) (--)) ()) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (binary_expression (identifier) (-) (char_literal (') (character) ('))) (])) (==) (null (NULL))) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (binary_expression (identifier) (-) (char_literal (') (character) ('))) (])) (=) (call_expression (identifier) (argument_list (() ())))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (true)) (;)) (}))) (expression_statement (assignment_expression (identifier) (=) (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (binary_expression (identifier) (-) (char_literal (') (character) ('))) (]))) (;)) (}))) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (unary_expression (!) (identifier)) ())) (compound_statement ({) (return_statement (return) (;)) (}))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (number_literal)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) ()))) (;)) (}))) (}))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (unary_expression (!) (identifier)) ())) (compound_statement ({) (return_statement (return) (;)) (}))) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (identifier)) (;)) (if_statement (if) (parenthesized_expression (() (unary_expression (!) (field_expression (identifier) (->) (field_identifier))) ())) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (+=) (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ()))) (;)) (return_statement (return) (;)) (}))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (number_literal)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (identifier) (])) (,) (binary_expression (identifier) (+) (number_literal)) (,) (identifier) ()))) (;)) (}))) (}))) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (unary_expression (!) (identifier)) (||) (binary_expression (identifier) (<=) (number_literal))) ())) (compound_statement ({) (return_statement (return) (number_literal) (;)) (}))) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (call_expression (identifier) (argument_list (() ())))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (subscript_expression (identifier) ([) (identifier) (])) ()))) (;)) (}))) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (pointer_expression (&) (identifier)) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (return_statement (return) (identifier) (;)) (}))))