(translation_unit (declaration (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (;)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (identifier) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (subscript_expression (identifier) ([) (identifier) (])) (;) (update_expression (identifier) (++)) ()) (expression_statement (;))) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (identifier) (,) (identifier) (,) (init_declarator (identifier) (=) (identifier)) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (identifier)) ()))))) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ())))) (;)) (}))) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (parenthesized_expression (() (subscript_expression (identifier) ([) (identifier) (])) ())) (&&) (parenthesized_expression (() (binary_expression (identifier) (!=) (identifier)) ()))) (&&) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (>=) (subscript_expression (identifier) ([) (identifier) (]))) ()))) (&&) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) (,) (subscript_expression (identifier) ([) (identifier) (])) (,) (subscript_expression (identifier) ([) (identifier) (])) (,) (subscript_expression (identifier) ([) (identifier) (])) ())))) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (number_literal)) (;)) (expression_statement (update_expression (identifier) (--)) (;)) (break_statement (break) (;)) (}))) (}))) (}))) (for_statement (for) (() (comma_expression (assignment_expression (identifier) (=) (number_literal)) (,) (assignment_expression (identifier) (=) (number_literal))) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (}))) (return_statement (return) (binary_expression (identifier) (+) (identifier)) (;)) (}))) (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (identifier) (,) (identifier) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>) (identifier)) ())) (return_statement (return) (false) (;))) (for_statement (for) (() (comma_expression (assignment_expression (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (,) (assignment_expression (identifier) (=) (binary_expression (identifier) (-) (number_literal)))) (;) (binary_expression (binary_expression (identifier) (>=) (number_literal)) (&&) (binary_expression (identifier) (>=) (number_literal))) (;) (comma_expression (update_expression (identifier) (--)) (,) (update_expression (identifier) (--))) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (!=) (subscript_expression (identifier) ([) (identifier) (]))) ())) (return_statement (return) (false) (;))) (}))) (return_statement (return) (true) (;)) (}))))