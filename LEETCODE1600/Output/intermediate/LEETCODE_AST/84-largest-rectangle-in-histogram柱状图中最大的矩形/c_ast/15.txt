(translation_unit (preproc_def (#define) (identifier) (preproc_arg)) (declaration (primitive_type) (array_declarator (identifier) ([) (identifier) (])) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (identifier)) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>) (number_literal)) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (--)) (;)) (}))) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() ()))) (compound_statement ({) (return_statement (return) (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (return_statement (return) (conditional_expression (binary_expression (identifier) (>) (identifier)) (?) (identifier) (:) (identifier)) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (number_literal) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (number_literal) ()))) (;)) (declaration (primitive_type) (identifier) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (identifier) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (while_statement (while) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (identifier) (>=) (number_literal)) ())) (&&) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (call_expression (identifier) (argument_list (() ()))) (])) (>) (subscript_expression (identifier) ([) (identifier) (]))) ()))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (string_literal (") (string_content) (escape_sequence) (")) ()))) (;)) (expression_statement (assignment_expression (identifier) (=) (subscript_expression (identifier) ([) (call_expression (identifier) (argument_list (() ()))) (]))) (;)) (expression_statement (call_expression (identifier) (argument_list (() ()))) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (identifier) (*) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (-) (call_expression (identifier) (argument_list (() ())))) (-) (number_literal)) ()))) ())))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (string_literal (") (string_content) (escape_sequence) (")) (,) (identifier) ()))) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (string_literal (") (string_content) (escape_sequence) (")) ()))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() ())))) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (call_expression (identifier) (argument_list (() ()))) (!=) (number_literal)) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() ()))) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (*) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (+) (number_literal)) (-) (parenthesized_expression (() (binary_expression (call_expression (identifier) (argument_list (() ()))) (-) (number_literal)) ()))) (-) (number_literal)) ()))) ())))) (;)) (}))) (return_statement (return) (identifier) (;)) (}))))