(translation_unit (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (identifier)) (;)) (declaration (primitive_type) (pointer_declarator (*) (identifier)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (call_expression (identifier) (argument_list (() (number_literal) ())))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (number_literal) ()))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<=) (identifier)) (;) (comma_expression (update_expression (identifier) (++)) (,) (update_expression (identifier) (++))) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (char_literal (') (character) ('))) ())) (||) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (char_literal (') (escape_sequence) ('))) ()))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (binary_expression (binary_expression (binary_expression (binary_expression (binary_expression (binary_expression (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (char_literal (') (character) ('))) ())) (||) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (char_literal (') (character) ('))) ()))) (||) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (char_literal (') (character) ('))) ()))) (||) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (char_literal (') (character) ('))) ()))) (||) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (char_literal (') (character) ('))) ()))) (||) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (char_literal (') (character) ('))) ()))) (||) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (char_literal (') (character) ('))) ()))) (||) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (char_literal (') (character) ('))) ()))) (||) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (char_literal (') (character) ('))) ()))) (||) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (char_literal (') (character) ('))) ()))) ())) (compound_statement ({) (for_statement (for) (() (;) (binary_expression (identifier) (<=) (identifier)) (;) (update_expression (identifier) (++)) ()) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (identifier) (++)) (])) (=) (pointer_expression (*) (identifier))) (;))) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (identifier) (++)) (])) (=) (char_literal (') (character) ('))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (identifier) (++)) (])) (=) (char_literal (') (character) ('))) (;)) (})) (else_clause (else) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (pointer_expression (*) (identifier))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (for_statement (for) (() (;) (binary_expression (identifier) (<=) (identifier)) (;) (update_expression (identifier) (++)) ()) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (identifier) (++)) (])) (=) (pointer_expression (*) (identifier))) (;))) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (identifier) (++)) (])) (=) (identifier)) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (identifier) (++)) (])) (=) (char_literal (') (character) ('))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (identifier) (++)) (])) (=) (char_literal (') (character) ('))) (;)) (})))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (identifier) (++)) (])) (=) (char_literal (') (character) ('))) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (char_literal (') (character) ('))) ())) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (identifier) (++)) (])) (=) (char_literal (') (character) ('))) (;))) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (number_literal))) (;)) (}))) (}))) (return_statement (return) (identifier) (;)) (}))))