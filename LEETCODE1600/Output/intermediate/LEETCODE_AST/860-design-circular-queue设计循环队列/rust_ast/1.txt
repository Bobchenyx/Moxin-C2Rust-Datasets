(source_file (struct_item (struct) (type_identifier) (field_declaration_list ({) (field_declaration (field_identifier) (:) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>)))) (,) (field_declaration (field_identifier) (:) (primitive_type)) (,) (field_declaration (field_identifier) (:) (primitive_type)) (,) (field_declaration (field_identifier) (:) (primitive_type)) (,) (}))) (block_comment (/*) (outer_doc_comment_marker) (doc_comment) (*/)) (impl_item (impl) (type_identifier) (declaration_list ({) (block_comment (/*) (outer_doc_comment_marker) (doc_comment) (*/)) (function_item (fn) (identifier) (parameters (() (parameter (identifier) (:) (primitive_type)) ())) (->) (type_identifier) (block ({) (let_declaration (let) (identifier) (=) (type_cast_expression (identifier) (as) (primitive_type)) (;)) (struct_expression (type_identifier) (field_initializer_list ({) (field_initializer (field_identifier) (:) (macro_invocation (identifier) (!) (token_tree ([) (integer_literal) (;) (identifier) (])))) (,) (field_initializer (field_identifier) (:) (identifier)) (,) (field_initializer (field_identifier) (:) (integer_literal)) (,) (field_initializer (field_identifier) (:) (integer_literal)) (,) (}))) (}))) (block_comment (/*) (outer_doc_comment_marker) (doc_comment) (*/)) (function_item (fn) (identifier) (parameters (() (self_parameter (&) (mutable_specifier) (self)) (,) (parameter (identifier) (:) (primitive_type)) ())) (->) (primitive_type) (block ({) (expression_statement (if_expression (if) (call_expression (field_expression (self) (.) (field_identifier)) (arguments (() ()))) (block ({) (boolean_literal (false)) (})) (else_clause (else) (block ({) (expression_statement (assignment_expression (index_expression (field_expression (self) (.) (field_identifier)) ([) (binary_expression (parenthesized_expression (() (binary_expression (field_expression (self) (.) (field_identifier)) (+) (field_expression (self) (.) (field_identifier))) ())) (%) (field_expression (self) (.) (field_identifier))) (])) (=) (identifier)) (;)) (expression_statement (compound_assignment_expr (field_expression (self) (.) (field_identifier)) (+=) (integer_literal)) (;)) (boolean_literal (true)) (}))))) (}))) (block_comment (/*) (outer_doc_comment_marker) (doc_comment) (*/)) (function_item (fn) (identifier) (parameters (() (self_parameter (&) (mutable_specifier) (self)) ())) (->) (primitive_type) (block ({) (expression_statement (if_expression (if) (call_expression (field_expression (self) (.) (field_identifier)) (arguments (() ()))) (block ({) (boolean_literal (false)) (})) (else_clause (else) (block ({) (expression_statement (compound_assignment_expr (field_expression (self) (.) (field_identifier)) (+=) (integer_literal)) (;)) (expression_statement (compound_assignment_expr (field_expression (self) (.) (field_identifier)) (%=) (field_expression (self) (.) (field_identifier))) (;)) (expression_statement (compound_assignment_expr (field_expression (self) (.) (field_identifier)) (-=) (integer_literal)) (;)) (boolean_literal (true)) (}))))) (}))) (block_comment (/*) (outer_doc_comment_marker) (doc_comment) (*/)) (function_item (fn) (identifier) (parameters (() (self_parameter (&) (self)) ())) (->) (primitive_type) (block ({) (expression_statement (if_expression (if) (call_expression (field_expression (self) (.) (field_identifier)) (arguments (() ()))) (block ({) (unary_expression (-) (integer_literal)) (})) (else_clause (else) (block ({) (index_expression (field_expression (self) (.) (field_identifier)) ([) (field_expression (self) (.) (field_identifier)) (])) (}))))) (}))) (block_comment (/*) (outer_doc_comment_marker) (doc_comment) (*/)) (function_item (fn) (identifier) (parameters (() (self_parameter (&) (self)) ())) (->) (primitive_type) (block ({) (expression_statement (if_expression (if) (call_expression (field_expression (self) (.) (field_identifier)) (arguments (() ()))) (block ({) (unary_expression (-) (integer_literal)) (})) (else_clause (else) (block ({) (index_expression (field_expression (self) (.) (field_identifier)) ([) (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (field_expression (self) (.) (field_identifier)) (+) (field_expression (self) (.) (field_identifier))) (-) (integer_literal)) ())) (%) (field_expression (self) (.) (field_identifier))) (])) (}))))) (}))) (block_comment (/*) (outer_doc_comment_marker) (doc_comment) (*/)) (function_item (fn) (identifier) (parameters (() (self_parameter (&) (self)) ())) (->) (primitive_type) (block ({) (binary_expression (field_expression (self) (.) (field_identifier)) (==) (integer_literal)) (}))) (block_comment (/*) (outer_doc_comment_marker) (doc_comment) (*/)) (function_item (fn) (identifier) (parameters (() (self_parameter (&) (self)) ())) (->) (primitive_type) (block ({) (binary_expression (field_expression (self) (.) (field_identifier)) (==) (field_expression (self) (.) (field_identifier))) (}))) (}))) (block_comment (/*) (outer_doc_comment_marker) (doc_comment) (*/)))