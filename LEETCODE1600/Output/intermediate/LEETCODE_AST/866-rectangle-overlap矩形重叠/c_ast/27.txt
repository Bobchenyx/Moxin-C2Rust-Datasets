(translation_unit (type_definition (typedef) (struct_specifier (struct) (field_declaration_list ({) (field_declaration (primitive_type) (field_identifier) (;)) (field_declaration (primitive_type) (field_identifier) (;)) (}))) (type_identifier) (;)) (type_definition (typedef) (struct_specifier (struct) (field_declaration_list ({) (field_declaration (type_identifier) (field_identifier) (;)) (field_declaration (type_identifier) (field_identifier) (;)) (}))) (type_identifier) (;)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (type_identifier) (identifier) (,) (identifier) (;)) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (parenthesized_expression (() (identifier) ()))) (==) (parenthesized_expression (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (identifier)) ()))) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (pointer_expression (&) (identifier)) (,) (identifier) (,) (sizeof_expression (sizeof) (parenthesized_expression (() (identifier) ()))) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (pointer_expression (&) (identifier)) (,) (identifier) (,) (sizeof_expression (sizeof) (parenthesized_expression (() (identifier) ()))) ()))) (;)) (comment) (declaration (type_identifier) (pointer_declarator (*) (identifier)) (,) (pointer_declarator (*) (identifier)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (field_expression (identifier) (.) (field_identifier)) (.) (field_identifier)) (<=) (field_expression (field_expression (identifier) (.) (field_identifier)) (.) (field_identifier))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (pointer_expression (&) (identifier))) (;)) (expression_statement (assignment_expression (identifier) (=) (pointer_expression (&) (identifier))) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (pointer_expression (&) (identifier))) (;)) (expression_statement (assignment_expression (identifier) (=) (pointer_expression (&) (identifier))) (;)) (})))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (parenthesized_expression (() (binary_expression (field_expression (field_expression (identifier) (->) (field_identifier)) (.) (field_identifier)) (<=) (field_expression (field_expression (identifier) (->) (field_identifier)) (.) (field_identifier))) ())) (||) (comment) (parenthesized_expression (() (binary_expression (field_expression (field_expression (identifier) (->) (field_identifier)) (.) (field_identifier)) (>=) (field_expression (field_expression (identifier) (->) (field_identifier)) (.) (field_identifier))) ()))) (||) (comment) (parenthesized_expression (() (binary_expression (field_expression (field_expression (identifier) (->) (field_identifier)) (.) (field_identifier)) (<=) (field_expression (field_expression (identifier) (->) (field_identifier)) (.) (field_identifier))) ()))) ())) (comment) (return_statement (return) (number_literal) (;))) (return_statement (return) (number_literal) (;)) (}))))