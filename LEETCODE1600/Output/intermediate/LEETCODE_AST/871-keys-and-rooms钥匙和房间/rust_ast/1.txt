(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (>)))) ())) (->) (primitive_type) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (macro_invocation (identifier) (!) (token_tree ([) (boolean_literal (false)) (;) (identifier) (.) (identifier) (token_tree (() ())) (]))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (macro_invocation (identifier) (!) (token_tree ([) (integer_literal) (]))) (;)) (expression_statement (while_expression (while) (let_condition (let) (tuple_struct_pattern (identifier) (() (identifier) ())) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ())))) (block ({) (expression_statement (if_expression (if) (unary_expression (!) (index_expression (identifier) ([) (identifier) (]))) (block ({) (expression_statement (assignment_expression (index_expression (identifier) ([) (identifier) (])) (=) (boolean_literal (true))) (;)) (expression_statement (for_expression (for) (reference_pattern (&) (identifier)) (in) (reference_expression (&) (index_expression (identifier) ([) (identifier) (]))) (block ({) (expression_statement (if_expression (if) (unary_expression (!) (index_expression (identifier) ([) (type_cast_expression (identifier) (as) (primitive_type)) (]))) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (type_cast_expression (identifier) (as) (primitive_type)) ()))) (;)) (})))) (})))) (})))) (})))) (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() (closure_expression (closure_parameters (|) (reference_pattern (&) (identifier)) (|)) (identifier)) ()))) (}))) (}))))