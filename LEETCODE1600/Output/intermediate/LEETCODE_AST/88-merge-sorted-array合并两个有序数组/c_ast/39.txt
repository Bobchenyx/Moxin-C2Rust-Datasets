(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (identifier)) (;)) (comment) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (identifier)) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (declaration (primitive_type) (identifier) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (<=) (pointer_expression (*) (identifier))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (identifier)) ())) (comment) (compound_statement ({) (for_statement (for) (() (assignment_expression (identifier) (=) (identifier)) (;) (binary_expression (identifier) (>) (identifier)) (;) (update_expression (identifier) (--)) ()) (expression_statement (assignment_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (=) (pointer_expression (*) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (+) (identifier)) (-) (number_literal)) ())))) (;))) (comment) (expression_statement (assignment_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (=) (pointer_expression (*) (identifier))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (comment) (expression_statement (assignment_expression (identifier) (=) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (;)) (comment) (expression_statement (update_expression (identifier) (++)) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (assignment_expression (identifier) (=) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (;)) (})))) (})) (else_clause (else) (compound_statement ({) (for_statement (for) (() (assignment_expression (identifier) (=) (identifier)) (;) (binary_expression (identifier) (>) (identifier)) (;) (update_expression (identifier) (--)) ()) (expression_statement (assignment_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (=) (pointer_expression (*) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (+) (identifier)) (-) (number_literal)) ())))) (;))) (expression_statement (assignment_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (=) (pointer_expression (*) (identifier))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (assignment_expression (identifier) (=) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (})))) (}))) (}))))