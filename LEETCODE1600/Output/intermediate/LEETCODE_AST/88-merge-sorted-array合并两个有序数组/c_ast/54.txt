(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (,) (init_declarator (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (binary_expression (identifier) (+) (identifier)) (-) (number_literal))) (;)) (parenthesized_expression (() (binary_expression (binary_expression (parenthesized_expression (() (binary_expression (identifier) (>=) (number_literal)) ())) (&&) (parenthesized_expression (() (binary_expression (identifier) (>=) (number_literal)) ()))) (&&) (parenthesized_expression (() (binary_expression (identifier) (>=) (number_literal)) ()))) ())) (;) (update_expression (identifier) (--)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (>) (subscript_expression (identifier) ([) (identifier) (]))) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (expression_statement (update_expression (identifier) (--)) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (expression_statement (update_expression (identifier) (--)) (;)) (})))) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>=) (number_literal)) ())) (comment) (compound_statement ({) (for_statement (for) (() (;) (binary_expression (identifier) (>=) (number_literal)) (;) (update_expression (identifier) (--)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (}))) (}))) (}))))