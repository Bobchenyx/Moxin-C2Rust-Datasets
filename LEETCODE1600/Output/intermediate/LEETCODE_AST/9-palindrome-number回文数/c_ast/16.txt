(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<) (number_literal)) ())) (return_statement (return) (false) (;))) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (identifier)) (;)) (while_statement (while) (parenthesized_expression (() (identifier) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (assignment_expression (identifier) (/=) (number_literal)) (;)) (}))) (comment) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (comment) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (>) (number_literal)) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (/) (cast_expression (() (type_descriptor (primitive_type)) ()) (call_expression (identifier) (argument_list (() (number_literal) (,) (identifier) ()))))) (!=) (binary_expression (identifier) (%) (cast_expression (() (type_descriptor (primitive_type)) ()) (call_expression (identifier) (argument_list (() (number_literal) (,) (identifier) ())))))) ())) (return_statement (return) (false) (;))) (comment) (declaration (type_identifier) (ERROR (ERROR) (identifier) (ERROR)) (init_declarator (identifier) (ERROR (/) (number_literal) (ERROR)) (=) (binary_expression (binary_expression (number_literal) (%) (call_expression (number_literal) (ERROR (ERROR) (identifier) (-=)) (argument_list (() (binary_expression (identifier) (/) (cast_expression (() (type_descriptor (primitive_type)) ()) (call_expression (identifier) (argument_list (() (number_literal) (,) (identifier) ()))))) ())))) (*) (cast_expression (() (type_descriptor (primitive_type)) ()) (call_expression (identifier) (argument_list (() (number_literal) (,) (identifier) ())))))) (;)) (comment) (expression_statement (assignment_expression (identifier) (/=) (number_literal)) (;)) (comment) (expression_statement (assignment_expression (identifier) (-=) (number_literal)) (;)) (expression_statement (;)) (comment) (}))) (return_statement (return) (true) (;)) (}))))