(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<) (number_literal)) ())) (return_statement (return) (number_literal) (;))) (declaration (primitive_type) (array_declarator (identifier) ([) (number_literal) (])) (,) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (;) (identifier) (;) (comma_expression (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (binary_expression (identifier) (%) (number_literal))) (,) (comma_expression (update_expression (identifier) (++)) (,) (assignment_expression (identifier) (=) (binary_expression (identifier) (/) (number_literal))))) ()) (expression_statement (;))) (for_statement (for) (() (update_expression (identifier) (--)) (;) (binary_expression (identifier) (<=) (identifier)) (;) (comma_expression (update_expression (identifier) (++)) (,) (update_expression (identifier) (--))) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (!=) (subscript_expression (identifier) ([) (identifier) (]))) ())) (return_statement (return) (number_literal) (;))) (}))) (return_statement (return) (number_literal) (;)) (}))))