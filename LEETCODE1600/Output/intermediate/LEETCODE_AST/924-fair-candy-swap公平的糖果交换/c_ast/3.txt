(translation_unit (comment) (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ())))) (;)) (}))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ())))) (;)) (}))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (-) (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ())))) (+) (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ())))) (==) (binary_expression (binary_expression (identifier) (+) (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ())))) (-) (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))))) ())) (compound_statement ({) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ()))) (=) (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ())))) (;)) (expression_statement (assignment_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ()))) (=) (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ())))) (;)) (return_statement (return) (identifier) (;)) (}))) (comment) (comment) (expression_statement (assignment_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ()))) (=) (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ())))) (;)) (expression_statement (assignment_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ()))) (=) (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ())))) (;)) (return_statement (return) (identifier) (;)) (}))) (}))) (}))) (return_statement (return) (identifier) (;)) (}))))