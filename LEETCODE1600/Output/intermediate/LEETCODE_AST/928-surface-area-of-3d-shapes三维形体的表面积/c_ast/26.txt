(translation_unit (function_definition (type_identifier) (identifier) (compound_statement ({) (ERROR (binary_expression (binary_expression (identifier) (ERROR (:) (primitive_type) (identifier) (() (identifier)) (<) (identifier)) (<) (binary_expression (identifier) (>>) (pointer_expression (&) (identifier)))) ())) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ())))) (;)) (declaration (primitive_type) (identifier) (,) (identifier) (,) (identifier) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (++) (identifier)) ()) (compound_statement ({) (comment) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (++) (identifier)) ()) (compound_statement ({) (comment) (comment) (comment) (expression_statement (assignment_expression (identifier) (=) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (]))) (;)) (expression_statement (assignment_expression (identifier) (=) (conditional_expression (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ())) (==) (identifier)) (?) (number_literal) (:) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (binary_expression (identifier) (+) (number_literal)) (])))) (;)) (expression_statement (assignment_expression (identifier) (=) (conditional_expression (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ())) (==) (identifier)) (?) (number_literal) (:) (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) ([) (identifier) (])))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>) (number_literal)) ())) (compound_statement ({) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>) (number_literal)) ())) (expression_statement (assignment_expression (identifier) (+=) (conditional_expression (binary_expression (identifier) (>) (identifier)) (?) (identifier) (:) (identifier))) (;))) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>) (number_literal)) ())) (expression_statement (assignment_expression (identifier) (+=) (conditional_expression (binary_expression (identifier) (>) (identifier)) (?) (identifier) (:) (identifier))) (;))) (comment) (expression_statement (assignment_expression (identifier) (+=) (binary_expression (identifier) (-) (number_literal))) (;)) (}))) (expression_statement (assignment_expression (identifier) (+=) (identifier)) (;)) (}))) (}))) (return_statement (return) (binary_expression (binary_expression (identifier) (*) (number_literal)) (-) (binary_expression (identifier) (*) (number_literal))) (;)) (})) (}))) (expression_statement (;)))