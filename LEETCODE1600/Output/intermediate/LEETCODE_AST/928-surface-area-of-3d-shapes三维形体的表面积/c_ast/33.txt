(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (identifier) (,) (identifier) (,) (init_declarator (identifier) (=) (number_literal)) (;)) (ERROR (ERROR) (type_identifier) (identifier) (() (identifier) (=)) (expression_statement (number_literal) (;)) (expression_statement (binary_expression (identifier) (<) (identifier)) (;)) (ERROR (update_expression (identifier) (++)) ())) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (subscript_expression (identifier) ([) (identifier) (]))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (ERROR (ERROR)) (declaration (type_identifier) (ERROR (ERROR) (identifier) (ERROR)) (identifier) (;)) (expression_statement (assignment_expression (identifier) (+=) (conditional_expression (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (>) (number_literal)) ())) (?) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (*) (number_literal)) (+) (number_literal)) ())) (:) (number_literal))) (;)) (comment) (ERROR (ERROR) (type_identifier) (ERROR (ERROR) (identifier) (ERROR) (identifier) (ERROR) (identifier) (identifier)) (identifier) (ERROR)) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (identifier) (-) (number_literal)) ())) (>=) (number_literal)) ())) (expression_statement (assignment_expression (identifier) (-=) (conditional_expression (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) ([) (identifier) (])) (>) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (]))) ())) (?) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (:) (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) ([) (identifier) (])))) (;))) (comment) (ERROR (ERROR) (type_identifier) (identifier) (ERROR (()) (() (identifier) (binary_expression (number_literal) (ERROR ())) (<) (identifier)) ())) (expression_statement (assignment_expression (identifier) (-=) (conditional_expression (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) ([) (identifier) (])) (>) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (]))) ())) (?) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (:) (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) ([) (identifier) (])))) (;)) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (identifier) (-) (number_literal)) ())) (>=) (number_literal)) ())) (expression_statement (assignment_expression (identifier) (-=) (conditional_expression (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (binary_expression (identifier) (-) (number_literal)) (])) (>) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (]))) ())) (?) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (:) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (binary_expression (identifier) (-) (number_literal)) (])))) (;))) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ())) (<) (subscript_expression (identifier) ([) (identifier) (]))) ())) (expression_statement (assignment_expression (identifier) (-=) (conditional_expression (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (binary_expression (identifier) (+) (number_literal)) (])) (>) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (]))) ())) (?) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (:) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (binary_expression (identifier) (+) (number_literal)) (])))) (;))) (comment) (}))) (return_statement (return) (identifier) (;)) (}))))