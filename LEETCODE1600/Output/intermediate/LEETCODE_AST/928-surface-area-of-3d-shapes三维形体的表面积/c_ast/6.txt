(translation_unit (function_definition (type_identifier) (identifier) (compound_statement ({) (ERROR (binary_expression (binary_expression (identifier) (ERROR (:) (primitive_type) (identifier) (() (identifier)) (<) (identifier)) (<) (binary_expression (identifier) (>>) (pointer_expression (&) (identifier)))) ())) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ())))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (]))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (!=) (number_literal)) ())) (expression_statement (assignment_expression (identifier) (+=) (number_literal)) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (expression_statement (assignment_expression (identifier) (+=) (identifier)) (;)) (else_clause (else) (expression_statement (assignment_expression (identifier) (+=) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (-) (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) ([) (identifier) (]))) (,) (number_literal) ())))) (;)))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (binary_expression (identifier) (-) (number_literal))) ())) (expression_statement (assignment_expression (identifier) (+=) (identifier)) (;)) (else_clause (else) (expression_statement (assignment_expression (identifier) (+=) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (-) (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) ([) (identifier) (]))) (,) (number_literal) ())))) (;)))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (expression_statement (assignment_expression (identifier) (+=) (identifier)) (;)) (else_clause (else) (expression_statement (assignment_expression (identifier) (+=) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (-) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (binary_expression (identifier) (-) (number_literal)) (]))) (,) (number_literal) ())))) (;)))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (binary_expression (identifier) (-) (number_literal))) ())) (expression_statement (assignment_expression (identifier) (+=) (identifier)) (;)) (else_clause (else) (expression_statement (assignment_expression (identifier) (+=) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (-) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (binary_expression (identifier) (+) (number_literal)) (]))) (,) (number_literal) ())))) (;)))) (}))) (}))) (return_statement (return) (identifier) (;)) (})) (}))) (expression_statement (;)))