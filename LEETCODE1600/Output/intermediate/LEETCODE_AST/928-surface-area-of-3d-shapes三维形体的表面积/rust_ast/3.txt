(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (>)))) ())) (->) (primitive_type) (block ({) (let_declaration (let) (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (identifier)) (block ({) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (identifier)) (block ({) (let_declaration (let) (identifier) (=) (index_expression (index_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (;)) (expression_statement (if_expression (if) (binary_expression (identifier) (>) (integer_literal)) (block ({) (expression_statement (compound_assignment_expr (identifier) (+=) (binary_expression (binary_expression (identifier) (*) (integer_literal)) (+) (integer_literal))) (;)) (expression_statement (if_expression (if) (parenthesized_expression (() (binary_expression (identifier) (>) (integer_literal)) ())) (block ({) (expression_statement (compound_assignment_expr (identifier) (-=) (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (index_expression (index_expression (identifier) ([) (binary_expression (identifier) (-) (integer_literal)) (])) ([) (identifier) (])) ()))) (*) (integer_literal))) (;)) (})))) (expression_statement (if_expression (if) (parenthesized_expression (() (binary_expression (identifier) (>) (integer_literal)) ())) (block ({) (expression_statement (compound_assignment_expr (identifier) (-=) (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (index_expression (index_expression (identifier) ([) (identifier) (])) ([) (binary_expression (identifier) (-) (integer_literal)) (])) ()))) (*) (integer_literal))) (;)) (})))) (})))) (})))) (})))) (identifier) (}))) (}))))