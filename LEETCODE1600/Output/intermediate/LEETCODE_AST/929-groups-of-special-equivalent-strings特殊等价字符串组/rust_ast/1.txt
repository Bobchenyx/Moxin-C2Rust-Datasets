(source_file (use_declaration (use) (scoped_identifier (scoped_identifier (identifier) (::) (identifier)) (::) (identifier)) (;)) (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>)))) ())) (->) (primitive_type) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() ()))) (;)) (expression_statement (for_expression (for) (identifier) (in) (identifier) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (macro_invocation (identifier) (!) (token_tree ([) (integer_literal) (;) (integer_literal) (]))) (;)) (expression_statement (for_expression (for) (tuple_pattern (() (identifier) (,) (identifier) ())) (in) (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (block ({) (expression_statement (compound_assignment_expr (index_expression (identifier) ([) (binary_expression (type_cast_expression (parenthesized_expression (() (binary_expression (identifier) (-) (char_literal)) ())) (as) (primitive_type)) (+) (binary_expression (integer_literal) (*) (parenthesized_expression (() (binary_expression (identifier) (%) (integer_literal)) ())))) (])) (+=) (integer_literal)) (;)) (})))) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (identifier) ()))) (;)) (})))) (type_cast_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (as) (primitive_type)) (}))) (}))))