(translation_unit (comment) (function_definition (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (identifier))) (=) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ())) (*) (number_literal)) ())))) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (number_literal)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<) (number_literal)) ())) (compound_statement ({) (return_statement (return) (identifier) (;)) (}))) (comment) (declaration (primitive_type) (array_declarator (identifier) ([) (number_literal) (])) (,) (array_declarator (identifier) ([) (number_literal) (])) (,) (array_declarator (identifier) ([) (number_literal) (])) (,) (array_declarator (identifier) ([) (number_literal) (])) (;)) (declaration (primitive_type) (pointer_declarator (*) (identifier)) (;)) (declaration (primitive_type) (identifier) (,) (identifier) (,) (identifier) (,) (identifier) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (binary_expression (identifier) (<) (binary_expression (identifier) (-) (number_literal))) (&&) (binary_expression (identifier) (<) (number_literal))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (number_literal) (])) (==) (char_literal (') (character) ('))) (&&) (binary_expression (identifier) (>) (number_literal))) ())) (compound_statement ({) (comment) (break_statement (break) (;)) (}))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (+) (number_literal))) (;)) (binary_expression (binary_expression (identifier) (<) (binary_expression (identifier) (-) (number_literal))) (&&) (binary_expression (identifier) (<) (binary_expression (identifier) (+) (number_literal)))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) (==) (char_literal (') (character) ('))) (&&) (binary_expression (identifier) (>) (binary_expression (identifier) (+) (number_literal)))) ())) (compound_statement ({) (comment) (break_statement (break) (;)) (}))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (+) (number_literal))) (;)) (binary_expression (binary_expression (identifier) (<) (binary_expression (identifier) (-) (number_literal))) (&&) (binary_expression (identifier) (<) (binary_expression (identifier) (+) (number_literal)))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) (==) (char_literal (') (character) ('))) (&&) (binary_expression (identifier) (>) (binary_expression (identifier) (+) (number_literal)))) ())) (compound_statement ({) (comment) (break_statement (break) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (binary_expression (identifier) (+) (number_literal)) ()))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) (=) (char_literal (') (escape_sequence) ('))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (binary_expression (identifier) (+) (identifier)) (+) (number_literal))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (binary_expression (identifier) (-) (identifier)) ()))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (identifier)) (])) (=) (char_literal (') (escape_sequence) ('))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (binary_expression (identifier) (+) (identifier)) (-) (identifier))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (binary_expression (identifier) (-) (identifier)) ()))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (identifier)) (])) (=) (char_literal (') (escape_sequence) ('))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (binary_expression (identifier) (+) (identifier)) (-) (identifier))) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (>) (number_literal)) (||) (binary_expression (identifier) (==) (number_literal))) ())) (compound_statement ({) (continue_statement (continue) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ()))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (char_literal (') (escape_sequence) ('))) (;)) (comment) (comment) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (number_literal)) (&&) (binary_expression (call_expression (identifier) (argument_list (() (identifier) (,) (string_literal (") (string_content) (")) (,) (identifier) ()))) (>) (number_literal))) ())) (compound_statement ({) (continue_statement (continue) (;)) (}))) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (number_literal)) (&&) (binary_expression (call_expression (identifier) (argument_list (() (identifier) (,) (string_literal (") (string_content) (")) (,) (identifier) ()))) (>) (number_literal))) ())) (compound_statement ({) (continue_statement (continue) (;)) (}))) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (number_literal)) (&&) (binary_expression (call_expression (identifier) (argument_list (() (identifier) (,) (string_literal (") (string_content) (")) (,) (identifier) ()))) (>) (number_literal))) ())) (compound_statement ({) (continue_statement (continue) (;)) (}))) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (number_literal)) (&&) (binary_expression (call_expression (identifier) (argument_list (() (identifier) (,) (string_literal (") (string_content) (")) (,) (identifier) ()))) (>) (number_literal))) ())) (compound_statement ({) (continue_statement (continue) (;)) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (>) (number_literal)) (&&) (binary_expression (subscript_expression (identifier) ([) (number_literal) (])) (==) (char_literal (') (character) (')))) ())) (compound_statement ({) (comment) (continue_statement (continue) (;)) (}))))) (expression_statement (call_expression (identifier) (argument_list (() (string_literal (") (string_content) (escape_sequence) (")) (,) (identifier) (,) (identifier) (,) (identifier) (,) (identifier) ()))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (pointer_expression (*) (identifier)) (])) (=) (call_expression (identifier) (argument_list (() (binary_expression (binary_expression (identifier) (+) (number_literal)) (+) (number_literal)) ())))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (pointer_expression (*) (identifier)) (])) (,) (identifier) (,) (identifier) ()))) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (pointer_expression (*) (identifier)) (])) ([) (identifier) (])) (=) (char_literal (') (character) ('))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (pointer_expression (*) (identifier)) (])) (+) (identifier)) (+) (number_literal)) (,) (identifier) (,) (identifier) ()))) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (pointer_expression (*) (identifier)) (])) ([) (binary_expression (binary_expression (identifier) (+) (number_literal)) (+) (identifier)) (])) (=) (char_literal (') (character) ('))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (binary_expression (binary_expression (binary_expression (subscript_expression (identifier) ([) (pointer_expression (*) (identifier)) (])) (+) (identifier)) (+) (number_literal)) (+) (identifier)) (+) (number_literal)) (,) (identifier) (,) (identifier) ()))) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (pointer_expression (*) (identifier)) (])) ([) (binary_expression (binary_expression (binary_expression (binary_expression (identifier) (+) (number_literal)) (+) (identifier)) (+) (number_literal)) (+) (identifier)) (])) (=) (char_literal (') (character) ('))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (binary_expression (binary_expression (binary_expression (binary_expression (binary_expression (subscript_expression (identifier) ([) (pointer_expression (*) (identifier)) (])) (+) (identifier)) (+) (number_literal)) (+) (identifier)) (+) (number_literal)) (+) (identifier)) (+) (number_literal)) (,) (identifier) (,) (identifier) ()))) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (pointer_expression (*) (identifier)) (])) ([) (binary_expression (identifier) (+) (number_literal)) (])) (=) (char_literal (') (escape_sequence) ('))) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (+=) (number_literal)) (;)) (}))) (}))) (}))) (return_statement (return) (identifier) (;)) (}))))