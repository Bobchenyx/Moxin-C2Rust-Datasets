(translation_unit (preproc_def (#define) (identifier) (preproc_arg)) (preproc_def (#define) (identifier) (preproc_arg)) (preproc_def (#define) (identifier) (preproc_arg)) (preproc_def (#define) (identifier) (preproc_arg)) (preproc_def (#define) (identifier) (preproc_arg)) (preproc_def (#define) (identifier) (preproc_arg)) (preproc_def (#define) (identifier) (preproc_arg)) (preproc_def (#define) (identifier) (preproc_arg)) (preproc_def (#define) (identifier) (preproc_arg)) (preproc_def (#define) (identifier) (preproc_arg)) (preproc_def (#define) (identifier) (preproc_arg)) (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type)) ())))) (compound_statement ({) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (null (NULL))) (;)) (expression_statement (assignment_expression (identifier) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (identifier) ()))))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (compound_statement ({) (return_statement (return) (identifier) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (identifier) ()))) (;)) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (binary_expression (number_literal) (*) (identifier)) (+) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (-) (char_literal (') (character) ('))) ())))) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>) (identifier)) ())) (compound_statement ({) (return_statement (return) (identifier) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (number_literal) (])) (==) (char_literal (') (character) ('))) ())) (&&) (parenthesized_expression (() (binary_expression (identifier) (!=) (number_literal)) ()))) ())) (compound_statement ({) (return_statement (return) (identifier) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (&&) (parenthesized_expression (() (binary_expression (identifier) (>) (number_literal)) ()))) ())) (compound_statement ({) (return_statement (return) (identifier) (;)) (}))) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (compound_statement ({) (return_statement (return) (;)) (}))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (!=) (null (NULL))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ()))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (null (NULL))) (;)) (}))) (}))) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (array_declarator (identifier) ([) (identifier) (])) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (identifier))) (=) (null (NULL))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (null (NULL))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (<=) (number_literal)) ())) (compound_statement ({) (return_statement (return) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (identifier) (==) (identifier)) ())) (&&) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (cast_expression (() (type_descriptor (primitive_type)) ()) (call_expression (identifier) (argument_list (() (identifier) ())))) (>) (binary_expression (identifier) (*) (identifier))) ())) (||) (parenthesized_expression (() (binary_expression (cast_expression (() (type_descriptor (primitive_type)) ()) (call_expression (identifier) (argument_list (() (identifier) ())))) (<) (identifier)) ()))) ()))) ())) (compound_statement ({) (return_statement (return) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (identifier) (==) (identifier)) ())) (&&) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (cast_expression (() (type_descriptor (primitive_type)) ()) (call_expression (identifier) (argument_list (() (identifier) ())))) (>) (binary_expression (identifier) (*) (identifier))) ())) (||) (parenthesized_expression (() (binary_expression (cast_expression (() (type_descriptor (primitive_type)) ()) (call_expression (identifier) (argument_list (() (identifier) ())))) (<) (identifier)) ()))) ()))) ())) (compound_statement ({) (return_statement (return) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (identifier) (==) (identifier)) ())) (&&) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (cast_expression (() (type_descriptor (primitive_type)) ()) (call_expression (identifier) (argument_list (() (identifier) ())))) (>) (binary_expression (identifier) (*) (identifier))) ())) (||) (parenthesized_expression (() (binary_expression (cast_expression (() (type_descriptor (primitive_type)) ()) (call_expression (identifier) (argument_list (() (identifier) ())))) (<) (identifier)) ()))) ()))) ())) (compound_statement ({) (return_statement (return) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (identifier)) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (call_expression (identifier) (argument_list (() (identifier) (,) (cast_expression (() (type_descriptor (primitive_type)) ()) (call_expression (identifier) (argument_list (() (identifier) ())))) ()))) (==) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (pointer_expression (*) (identifier)) (])) (=) (call_expression (identifier) (argument_list (() ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (pointer_expression (*) (identifier)) (])) (==) (null (NULL))) ())) (compound_statement ({) (return_statement (return) (;)) (}))) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (pointer_expression (*) (identifier)) (])) ([) (number_literal) (])) (=) (char_literal (') (character) ('))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (pointer_expression (&) (subscript_expression (subscript_expression (identifier) ([) (pointer_expression (*) (identifier)) (])) ([) (number_literal) (]))) (,) (identifier) (,) (call_expression (identifier) (argument_list (() (identifier) ()))) ()))) (;)) (expression_statement (update_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (++)) (;)) (}))) (return_statement (return) (;)) (}))) (expression_statement (assignment_expression (identifier) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*) (abstract_pointer_declarator (*)))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ())) (*) (identifier)) ()))))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (compound_statement ({) (return_statement (return) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ())) (*) (identifier)) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (sizeof_expression (sizeof) (parenthesized_expression (() (identifier) ()))) ()))) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (!=) (char_literal (') (escape_sequence) ('))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>=) (identifier)) ())) (compound_statement ({) (break_statement (break) (;)) (}))) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ()))) (==) (identifier)) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (pointer_expression (&) (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (]))) (,) (pointer_expression (&) (identifier)) (,) (binary_expression (identifier) (-) (number_literal)) ()))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (pointer_expression (*) (identifier)) (])) (=) (call_expression (identifier) (argument_list (() ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (pointer_expression (*) (identifier)) (])) (==) (null (NULL))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (return_statement (return) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (pointer_expression (*) (identifier)) (])) ([) (number_literal) (])) (=) (char_literal (') (character) ('))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (pointer_expression (&) (subscript_expression (subscript_expression (identifier) ([) (pointer_expression (*) (identifier)) (])) ([) (number_literal) (]))) (,) (identifier) (,) (identifier) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (pointer_expression (&) (subscript_expression (subscript_expression (identifier) ([) (pointer_expression (*) (identifier)) (])) ([) (binary_expression (number_literal) (+) (identifier)) (]))) (,) (subscript_expression (identifier) ([) (identifier) (])) (,) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ()))) ()))) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (pointer_expression (&) (subscript_expression (subscript_expression (identifier) ([) (pointer_expression (*) (identifier)) (])) ([) (number_literal) (]))) (,) (identifier) (,) (identifier) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (pointer_expression (&) (subscript_expression (subscript_expression (identifier) ([) (pointer_expression (*) (identifier)) (])) ([) (identifier) (]))) (,) (subscript_expression (identifier) ([) (identifier) (])) (,) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ()))) ()))) (;)) (})))) (expression_statement (update_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (++)) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ()))) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (})) (else_clause (else) (compound_statement ({) (break_statement (break) (;)) (})))) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (return_statement (return) (;)) (}))) (comment) (function_definition (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))))) (compound_statement ({) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (identifier))) (=) (null (NULL))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*) (abstract_pointer_declarator (*)))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ())) (*) (identifier)) ()))))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (compound_statement ({) (return_statement (return) (null (NULL)) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ())) (*) (identifier)) ()))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (compound_statement ({) (return_statement (return) (identifier) (;)) (}))) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (number_literal)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (compound_statement ({) (return_statement (return) (identifier) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (<) (identifier)) ())) (compound_statement ({) (return_statement (return) (identifier) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (>) (binary_expression (identifier) (*) (identifier))) ())) (compound_statement ({) (return_statement (return) (identifier) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (pointer_expression (&) (identifier)) (,) (identifier) ()))) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (identifier)) (;)) (return_statement (return) (identifier) (;)) (}))))