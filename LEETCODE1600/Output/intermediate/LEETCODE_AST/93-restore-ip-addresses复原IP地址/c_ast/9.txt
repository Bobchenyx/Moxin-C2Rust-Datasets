(translation_unit (preproc_include (#include) (system_lib_string)) (preproc_include (#include) (system_lib_string)) (preproc_include (#include) (system_lib_string)) (preproc_include (#include) (system_lib_string)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (<=) (number_literal)) (||) (binary_expression (identifier) (>) (number_literal))) ())) (return_statement (return) (false) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (!=) (number_literal)) (&&) (binary_expression (pointer_expression (*) (parenthesized_expression (() (identifier) ()))) (==) (char_literal (') (character) (')))) ())) (return_statement (return) (false) (;))) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (*) (number_literal)) ())) (+) (parenthesized_expression (() (binary_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (-) (char_literal (') (character) ('))) ())))) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (>=) (number_literal)) (&&) (binary_expression (identifier) (<=) (number_literal))) ())) (compound_statement ({) (return_statement (return) (true) (;)) (})) (else_clause (else) (compound_statement ({) (return_statement (return) (false) (;)) (})))) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (return_statement (return) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>) (number_literal)) ())) (return_statement (return) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (==) (number_literal)) (&&) (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) ())))) ())) (||) (parenthesized_expression (() (binary_expression (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (==) (number_literal)) (&&) (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) ())))) ()))) (||) (parenthesized_expression (() (binary_expression (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (==) (number_literal)) (&&) (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) ())))) ()))) ())) (compound_statement ({) (comment) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (pointer_expression (*) (identifier)) (])) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (binary_expression (binary_expression (binary_expression (binary_expression (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (number_literal) (])) ()))) (+) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (number_literal) (])) ())))) (+) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (number_literal) (])) ())))) (+) (call_expression (identifier) (argument_list (() (identifier) ())))) (+) (number_literal)) (+) (number_literal)) ()))))) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (subscript_expression (identifier) ([) (pointer_expression (*) (identifier)) (])) (+) (identifier)) (,) (subscript_expression (identifier) ([) (number_literal) (])) (,) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (number_literal) (])) ()))) ()))) (;)) (expression_statement (assignment_expression (identifier) (+=) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (number_literal) (])) ())))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (subscript_expression (identifier) ([) (pointer_expression (*) (identifier)) (])) (+) (identifier)) (,) (string_literal (") (string_content) (")) (,) (number_literal) ()))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (subscript_expression (identifier) ([) (pointer_expression (*) (identifier)) (])) (+) (identifier)) (,) (subscript_expression (identifier) ([) (number_literal) (])) (,) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (number_literal) (])) ()))) ()))) (;)) (expression_statement (assignment_expression (identifier) (+=) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (number_literal) (])) ())))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (subscript_expression (identifier) ([) (pointer_expression (*) (identifier)) (])) (+) (identifier)) (,) (string_literal (") (string_content) (")) (,) (number_literal) ()))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (subscript_expression (identifier) ([) (pointer_expression (*) (identifier)) (])) (+) (identifier)) (,) (subscript_expression (identifier) ([) (number_literal) (])) (,) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (number_literal) (])) ()))) ()))) (;)) (expression_statement (assignment_expression (identifier) (+=) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (number_literal) (])) ())))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (subscript_expression (identifier) ([) (pointer_expression (*) (identifier)) (])) (+) (identifier)) (,) (string_literal (") (string_content) (")) (,) (number_literal) ()))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (subscript_expression (identifier) ([) (pointer_expression (*) (identifier)) (])) (+) (identifier)) (,) (identifier) (,) (call_expression (identifier) (argument_list (() (identifier) ()))) ()))) (;)) (expression_statement (assignment_expression (identifier) (+=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (expression_statement (assignment_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (pointer_expression (*) (identifier)) (])) (+) (identifier)) ()))) (=) (char_literal (') (escape_sequence) ('))) (;)) (expression_statement (update_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (++)) (;)) (}))) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (>=) (number_literal)) (&&) (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) ())))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) (,) (identifier) (,) (number_literal) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (identifier) (+) (number_literal)) (,) (binary_expression (identifier) (+) (number_literal)) (,) (identifier) (,) (identifier) (,) (identifier) ()))) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (>=) (number_literal)) (&&) (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) ())))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) (,) (identifier) (,) (number_literal) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (identifier) (+) (number_literal)) (,) (binary_expression (identifier) (+) (number_literal)) (,) (identifier) (,) (identifier) (,) (identifier) ()))) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (>=) (number_literal)) (&&) (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) ())))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) (,) (identifier) (,) (number_literal) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (identifier) (+) (number_literal)) (,) (binary_expression (identifier) (+) (number_literal)) (,) (identifier) (,) (identifier) (,) (identifier) ()))) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) (,) (number_literal) (,) (number_literal) ()))) (;)) (}))) (function_definition (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))))) (compound_statement ({) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (identifier))) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*) (abstract_pointer_declarator (*)))) ()) (call_expression (identifier) (argument_list (() (binary_expression (number_literal) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()))) ()))))) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (identifier))) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*) (abstract_pointer_declarator (*)))) ()) (call_expression (identifier) (argument_list (() (binary_expression (number_literal) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()))) ()))))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (number_literal)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (number_literal) (,) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) ()))))) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (identifier) (,) (identifier) (,) (identifier) ()))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (number_literal)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ()))) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (return_statement (return) (identifier) (;)) (}))))