(source_file (use_declaration (use) (scoped_identifier (scoped_identifier (identifier) (::) (identifier)) (::) (identifier)) (;)) (use_declaration (use) (scoped_identifier (identifier) (::) (identifier)) (;)) (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (mutable_specifier) (identifier) (:) (primitive_type)) (,) (parameter (mutable_specifier) (identifier) (:) (primitive_type)) ())) (->) (primitive_type) (block ({) (expression_statement (while_expression (while) (binary_expression (identifier) (!=) (integer_literal)) (block ({) (let_declaration (let) (identifier) (=) (identifier) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (%) (identifier))) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (})))) (identifier) (}))) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>)))) ())) (->) (primitive_type) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() ()))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (expression_statement (for_expression (for) (identifier) (in) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (block ({) (let_declaration (let) (identifier) (=) (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (identifier) ()))) (.) (field_identifier)) (arguments (() (integer_literal) ()))) (;)) (expression_statement (compound_assignment_expr (unary_expression (*) (identifier)) (+=) (integer_literal)) (;)) (expression_statement (if_expression (if) (parenthesized_expression (() (binary_expression (identifier) (<) (unary_expression (*) (identifier))) ())) (block ({) (expression_statement (assignment_expression (identifier) (=) (unary_expression (*) (identifier))) (;)) (})))) (})))) (expression_statement (for_expression (for) (identifier) (in) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (block ({) (expression_statement (if_expression (if) (parenthesized_expression (() (binary_expression (unary_expression (*) (identifier)) (==) (integer_literal)) ())) (block ({) (expression_statement (return_expression (return) (boolean_literal (false))) (;)) (})))) (expression_statement (assignment_expression (identifier) (=) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (unary_expression (*) (identifier)) (,) (identifier) ())))) (;)) (})))) (expression_statement (if_expression (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (integer_literal)) (||) (binary_expression (identifier) (==) (integer_literal))) ())) (block ({) (expression_statement (return_expression (return) (boolean_literal (false))) (;)) (})))) (boolean_literal (true)) (}))) (}))))