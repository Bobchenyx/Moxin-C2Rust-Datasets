(translation_unit (preproc_include (#include) (system_lib_string)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (conditional_expression (binary_expression (identifier) (<) (identifier)) (?) (identifier) (:) (identifier))) (;)) (return_statement (return) (conditional_expression (binary_expression (identifier) (<) (identifier)) (?) (identifier) (:) (identifier)) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (return_statement (return) (conditional_expression (binary_expression (identifier) (<) (identifier)) (?) (identifier) (:) (identifier)) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (array_declarator (parenthesized_declarator (() (pointer_declarator (*) (identifier)) ())) ([) (number_literal) (]))) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (<) (number_literal)) (||) (binary_expression (identifier) (>) (binary_expression (identifier) (-) (number_literal)))) ())) (return_statement (return) (identifier) (;))) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (if_statement (if) (parenthesized_expression (() (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) ())) (return_statement (return) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (binary_expression (identifier) (-) (number_literal))) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (=) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (]))) (;)) (return_statement (return) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (;)) (}))) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (binary_expression (identifier) (+) (number_literal)) (,) (binary_expression (identifier) (-) (number_literal)) (,) (identifier) ())))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (binary_expression (identifier) (+) (number_literal)) (,) (identifier) (,) (identifier) ())))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (binary_expression (identifier) (+) (number_literal)) (,) (binary_expression (identifier) (+) (number_literal)) (,) (identifier) ())))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (+) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) ()))))) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (=) (identifier)) (;)) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (array_declarator (array_declarator (identifier) ([) (number_literal) (])) ([) (number_literal) (])) (=) (initializer_list ({) (number_literal) (}))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (identifier)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (number_literal) (,) (identifier) (,) (identifier) ()))) ())))) (;)) (}))) (return_statement (return) (identifier) (;)) (}))))