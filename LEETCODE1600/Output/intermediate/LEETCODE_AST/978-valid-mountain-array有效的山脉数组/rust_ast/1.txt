(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>)))) ())) (->) (primitive_type) (block ({) (let_declaration (let) (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (expression_statement (while_expression (while) (binary_expression (binary_expression (binary_expression (identifier) (+) (integer_literal)) (<) (identifier)) (&&) (binary_expression (index_expression (identifier) ([) (identifier) (])) (<) (index_expression (identifier) ([) (binary_expression (identifier) (+) (integer_literal)) (])))) (block ({) (expression_statement (compound_assignment_expr (identifier) (+=) (integer_literal)) (;)) (})))) (expression_statement (if_expression (if) (binary_expression (binary_expression (identifier) (==) (integer_literal)) (||) (binary_expression (binary_expression (identifier) (+) (integer_literal)) (==) (identifier))) (block ({) (expression_statement (return_expression (return) (boolean_literal (false))) (;)) (})))) (expression_statement (while_expression (while) (binary_expression (binary_expression (binary_expression (identifier) (+) (integer_literal)) (<) (identifier)) (&&) (binary_expression (index_expression (identifier) ([) (identifier) (])) (>) (index_expression (identifier) ([) (binary_expression (identifier) (+) (integer_literal)) (])))) (block ({) (expression_statement (compound_assignment_expr (identifier) (+=) (integer_literal)) (;)) (})))) (binary_expression (binary_expression (identifier) (+) (integer_literal)) (==) (identifier)) (}))) (}))))