(source_file (use_declaration (use) (scoped_identifier (scoped_identifier (identifier) (::) (identifier)) (::) (identifier)) (;)) (use_declaration (use) (scoped_identifier (scoped_identifier (identifier) (::) (identifier)) (::) (identifier)) (;)) (attribute_item (#) ([) (attribute (identifier) (token_tree (() (identifier) (,) (identifier) ()))) (])) (enum_item (enum) (type_identifier) (enum_variant_list ({) (enum_variant (identifier) (ordered_field_declaration_list (() (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (,) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) ()))) (,) (enum_variant (identifier) (ordered_field_declaration_list (() (primitive_type) ()))) (,) (enum_variant (identifier) (ordered_field_declaration_list (() (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) ()))) (,) (enum_variant (identifier)) (,) (}))) (attribute_item (#) ([) (attribute (identifier) (token_tree (() (identifier) (,) (identifier) (,) (identifier) ()))) (])) (enum_item (enum) (type_identifier) (enum_variant_list ({) (enum_variant (identifier) (ordered_field_declaration_list (() (primitive_type) ()))) (,) (enum_variant (identifier) (ordered_field_declaration_list (() (primitive_type) (,) (primitive_type) ()))) (,) (enum_variant (identifier) (ordered_field_declaration_list (() (primitive_type) ()))) (,) (enum_variant (identifier) (ordered_field_declaration_list (() (primitive_type) ()))) (,) (enum_variant (identifier)) (,) (enum_variant (identifier)) (,) (}))) (attribute_item (#) ([) (attribute (identifier) (token_tree (() (identifier) (,) (identifier) (,) (identifier) ()))) (])) (struct_item (struct) (type_identifier) (field_declaration_list ({) (field_declaration (field_identifier) (:) (primitive_type)) (,) (field_declaration (field_identifier) (:) (primitive_type)) (,) (}))) (function_item (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>)))) (,) (parameter (identifier) (:) (reference_type (&) (mutable_specifier) (primitive_type))) ())) (->) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (=) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() ()))) (;)) (expression_statement (match_expression (match) (unary_expression (*) (identifier)) (match_block ({) (match_arm (match_pattern (tuple_struct_pattern (scoped_identifier (identifier) (::) (identifier)) (() (identifier) (,) (identifier) ()))) (=>) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (call_expression (identifier) (arguments (() (identifier) (,) (identifier) ()))) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (reference_expression (&) (mutable_specifier) (identifier)) ()))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (call_expression (identifier) (arguments (() (identifier) (,) (identifier) ()))) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (reference_expression (&) (mutable_specifier) (identifier)) ()))) (;)) (})) (,)) (match_arm (match_pattern (tuple_struct_pattern (scoped_identifier (identifier) (::) (identifier)) (() (identifier) ()))) (=>) (block ({) (let_declaration (let) (identifier) (=) (unary_expression (*) (identifier)) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (identifier) ()))) ()))) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (binary_expression (identifier) (+) (integer_literal)) (,) (binary_expression (identifier) (+) (integer_literal)) ()))) ()))) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (binary_expression (identifier) (+) (integer_literal)) ()))) ()))) (;)) (expression_statement (compound_assignment_expr (unary_expression (*) (identifier)) (+=) (integer_literal)) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (call_expression (identifier) (arguments (() (identifier) (,) (identifier) ()))) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (reference_expression (&) (mutable_specifier) (identifier)) ()))) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (identifier) ()))) ()))) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (binary_expression (identifier) (+) (integer_literal)) ()))) ()))) (;)) (})) (,)) (match_arm (match_pattern (tuple_struct_pattern (scoped_identifier (identifier) (::) (identifier)) (() (identifier) ()))) (=>) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (identifier) ()))) ()))) (;)) (})) (,)) (match_arm (match_pattern (scoped_identifier (identifier) (::) (identifier))) (=>) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (scoped_identifier (identifier) (::) (identifier)) ()))) (;)) (})) (,)) (})))) (expression_statement (return_expression (return) (identifier)) (;)) (}))) (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (type_identifier)) (,) (parameter (identifier) (:) (type_identifier)) ())) (->) (primitive_type) (block ({) (expression_statement (if_expression (if) (binary_expression (identifier) (==) (string_literal (") ("))) (block ({) (return_expression (return) (if_expression (if) (binary_expression (identifier) (==) (string_literal (") ("))) (block ({) (boolean_literal (true)) (})) (else_clause (else) (block ({) (boolean_literal (false)) (}))))) (})))) (empty_statement (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (>))) (=) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() ()))) (;)) (expression_statement (loop_expression (loop) (block ({) (expression_statement (match_expression (match) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (match_block ({) (match_arm (match_pattern (tuple_struct_pattern (identifier) (() (char_literal) ()))) (=>) (block ({) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (scoped_identifier (identifier) (::) (identifier)) ()))) ()))) (})) (,)) (match_arm (match_pattern (tuple_struct_pattern (identifier) (() (char_literal) ()))) (=>) (block ({) (let_declaration (let) (identifier) (=) (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (identifier) ()))) ()))) ()))) (;)) (})) (,)) (match_arm (match_pattern (tuple_struct_pattern (identifier) (() (identifier) ()))) (=>) (block ({) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (identifier) ()))) ()))) ()))) (})) (,)) (match_arm (match_pattern (identifier)) (=>) (break_expression (break)) (,)) (})))) (})))) (let_declaration (let) (mutable_specifier) (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (integer_literal) ()))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (>))) (=) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() ()))) (;)) (expression_statement (loop_expression (loop) (block ({) (expression_statement (if_expression (if) (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (==) (integer_literal)) (block ({) (expression_statement (break_expression (break)) (;)) (})))) (let_declaration (let) (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (integer_literal) ()))) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (identifier) (,) (identifier) ()))) ())))) (;)) (})))) (let_declaration (let) (identifier) (=) (identifier) (;)) (line_comment (//)) (let_declaration (let) (mutable_specifier) (identifier) (:) (primitive_type) (=) (integer_literal) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (call_expression (identifier) (arguments (() (identifier) (,) (reference_expression (&) (mutable_specifier) (identifier)) ()))) (;)) (line_comment (//)) (let_declaration (let) (mutable_specifier) (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (reference_type (&) (primitive_type)) (,) (primitive_type) (>))) (=) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() ()))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (:) (primitive_type) (=) (integer_literal) (;)) (let_declaration (let) (mutable_specifier) (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (=) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() ()))) (;)) (expression_statement (for_expression (for) (identifier) (in) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (block ({) (expression_statement (match_expression (match) (identifier) (match_block ({) (match_arm (match_pattern (tuple_struct_pattern (scoped_identifier (identifier) (::) (identifier)) (() (identifier) ()))) (=>) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (identifier) (,) (identifier) ()))) (;)) (})) (,)) (match_arm (match_pattern (_)) (=>) (block ({) (expression_statement (compound_assignment_expr (identifier) (+=) (integer_literal)) (;)) (})) (,)) (})))) (})))) (expression_statement (for_expression (for) (identifier) (in) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (block ({) (expression_statement (match_expression (match) (identifier) (match_block ({) (match_arm (match_pattern (tuple_struct_pattern (scoped_identifier (identifier) (::) (identifier)) (() (_) ()))) (=>) (block ({) (})) (,)) (match_arm (match_pattern (tuple_struct_pattern (scoped_identifier (identifier) (::) (identifier)) (() (identifier) ()))) (=>) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (unary_expression (*) (parenthesized_expression (() (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (identifier) ()))) (.) (field_identifier)) (arguments (() ()))) ()))) ()))) ()))) (;)) (})) (,)) (match_arm (match_pattern (tuple_struct_pattern (scoped_identifier (identifier) (::) (identifier)) (() (identifier) (,) (identifier) ()))) (=>) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (unary_expression (*) (parenthesized_expression (() (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (identifier) ()))) (.) (field_identifier)) (arguments (() ()))) ()))) (,) (unary_expression (*) (parenthesized_expression (() (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (identifier) ()))) (.) (field_identifier)) (arguments (() ()))) ()))) ()))) ()))) (;)) (})) (,)) (match_arm (match_pattern (identifier)) (=>) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (unary_expression (*) (identifier)) ()))) (;)) (})) (,)) (})))) (})))) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (scoped_identifier (identifier) (::) (identifier)) ()))) (;)) (line_comment (//)) (let_declaration (let) (mutable_specifier) (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (=) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() ()))) (;)) (let_declaration (let) (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (;)) (let_declaration (let) (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (;)) (line_comment (//)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (struct_expression (type_identifier) (field_initializer_list ({) (field_initializer (field_identifier) (:) (integer_literal)) (,) (field_initializer (field_identifier) (:) (integer_literal)) (}))) ()))) (;)) (expression_statement (loop_expression (loop) (block ({) (expression_statement (if_expression (if) (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (==) (integer_literal)) (block ({) (expression_statement (break_expression (break)) (;)) (})))) (let_declaration (let) (mutable_specifier) (identifier) (=) (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (;)) (expression_statement (if_expression (if) (binary_expression (field_expression (identifier) (.) (field_identifier)) (>=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ())))) (block ({) (expression_statement (continue_expression (continue)) (;)) (})))) (expression_statement (match_expression (match) (index_expression (identifier) ([) (field_expression (identifier) (.) (field_identifier)) (])) (match_block ({) (line_comment (//)) (match_arm (match_pattern (tuple_struct_pattern (scoped_identifier (identifier) (::) (identifier)) (() (identifier) ()))) (=>) (block ({) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (type_cast_expression (identifier) (as) (primitive_type))) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (identifier) ()))) (;)) (})) (,)) (match_arm (match_pattern (tuple_struct_pattern (scoped_identifier (identifier) (::) (identifier)) (() (identifier) (,) (identifier) ()))) (=>) (block ({) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (type_cast_expression (identifier) (as) (primitive_type))) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (identifier) ()))) (;)) (line_comment (//)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (struct_expression (type_identifier) (field_initializer_list ({) (field_initializer (field_identifier) (:) (type_cast_expression (identifier) (as) (primitive_type))) (,) (field_initializer (field_identifier) (:) (field_expression (identifier) (.) (field_identifier))) (}))) ()))) (;)) (})) (,)) (match_arm (match_pattern (tuple_struct_pattern (scoped_identifier (identifier) (::) (identifier)) (() (identifier) ()))) (=>) (block ({) (expression_statement (if_expression (if) (binary_expression (binary_expression (field_expression (identifier) (.) (field_identifier)) (<) (identifier)) (&&) (binary_expression (identifier) (==) (type_cast_expression (index_expression (identifier) ([) (field_expression (identifier) (.) (field_identifier)) (])) (as) (primitive_type)))) (block ({) (line_comment (//)) (expression_statement (compound_assignment_expr (field_expression (identifier) (.) (field_identifier)) (+=) (integer_literal)) (;)) (expression_statement (compound_assignment_expr (field_expression (identifier) (.) (field_identifier)) (+=) (integer_literal)) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (identifier) ()))) (;)) (})))) (})) (,)) (match_arm (match_pattern (scoped_identifier (identifier) (::) (identifier))) (=>) (block ({) (expression_statement (if_expression (if) (binary_expression (field_expression (identifier) (.) (field_identifier)) (<) (identifier)) (block ({) (expression_statement (compound_assignment_expr (field_expression (identifier) (.) (field_identifier)) (+=) (integer_literal)) (;)) (expression_statement (compound_assignment_expr (field_expression (identifier) (.) (field_identifier)) (+=) (integer_literal)) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (identifier) ()))) (;)) (})))) (})) (,)) (match_arm (match_pattern (scoped_identifier (identifier) (::) (identifier))) (=>) (block ({) (expression_statement (if_expression (if) (binary_expression (field_expression (identifier) (.) (field_identifier)) (==) (identifier)) (block ({) (expression_statement (return_expression (return) (boolean_literal (true))) (;)) (})))) (})) (,)) (match_arm (match_pattern (_)) (=>) (block ({) (})) (,)) (})))) (})))) (return_expression (return) (boolean_literal (false))) (}))) (}))))