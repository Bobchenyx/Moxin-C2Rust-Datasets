(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (identifier) (,) (identifier) (,) (identifier) (,) (identifier) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (-) (identifier)) (+) (number_literal)) (==) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (+) (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (]))) (+) (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) (+) (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (]))) (>) (identifier)) ())) (expression_statement (assignment_expression (identifier) (=) (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) (+) (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])))) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (+) (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (]))) (>) (identifier)) ())) (expression_statement (assignment_expression (identifier) (=) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (+) (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])))) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) (+) (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (]))) (>) (identifier)) ())) (expression_statement (assignment_expression (identifier) (=) (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) (+) (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])))) (;))) (return_statement (return) (identifier) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (-) (identifier)) (+) (number_literal)) (==) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (+) (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) (+) (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (]))) (>) (identifier)) ())) (expression_statement (assignment_expression (identifier) (=) (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) (+) (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])))) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (+) (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (]))) (>) (identifier)) ())) (expression_statement (assignment_expression (identifier) (=) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (+) (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])))) (;))) (return_statement (return) (identifier) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (-) (identifier)) (+) (number_literal)) (==) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (+) (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) (>) (identifier)) ())) (expression_statement (assignment_expression (identifier) (=) (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (]))) (;))) (return_statement (return) (identifier) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (-) (identifier)) (+) (number_literal)) (==) (number_literal)) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (>) (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (]))) ())) (return_statement (return) (subscript_expression (identifier) ([) (identifier) (])) (;)) (else_clause (else) (return_statement (return) (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) (;)))) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (-) (identifier)) (+) (number_literal)) (==) (number_literal)) ())) (return_statement (return) (subscript_expression (identifier) ([) (identifier) (])) (;))) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (binary_expression (binary_expression (identifier) (+) (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (identifier) (-) (identifier)) (+) (number_literal)) ())) (/) (number_literal))) (-) (number_literal)) (,) (identifier) ())))) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (binary_expression (identifier) (+) (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (identifier) (-) (identifier)) (+) (number_literal)) ())) (/) (number_literal))) (+) (number_literal)) (,) (identifier) (,) (identifier) ())))) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (binary_expression (binary_expression (identifier) (+) (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (identifier) (-) (identifier)) (+) (number_literal)) ())) (/) (number_literal))) (-) (number_literal)) (,) (identifier) ())))) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (binary_expression (identifier) (+) (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (identifier) (-) (identifier)) (+) (number_literal)) ())) (/) (number_literal))) (+) (number_literal)) (,) (identifier) (,) (identifier) ())))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (binary_expression (identifier) (+) (identifier)) (+) (subscript_expression (identifier) ([) (binary_expression (binary_expression (identifier) (+) (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (identifier) (-) (identifier)) (+) (number_literal)) ())) (/) (number_literal))) (-) (number_literal)) (])))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (binary_expression (identifier) (+) (identifier)) (+) (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (identifier) (-) (identifier)) (+) (number_literal)) ())) (/) (number_literal))) (])))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (identifier))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (identifier) (>) (identifier)) ())) (&&) (parenthesized_expression (() (binary_expression (identifier) (>) (identifier)) ()))) ())) (return_statement (return) (identifier) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>) (identifier)) ())) (return_statement (return) (identifier) (;)) (else_clause (else) (return_statement (return) (identifier) (;)))) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (identifier) (,) (identifier) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (return_statement (return) (number_literal) (;))) (return_statement (return) (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (binary_expression (identifier) (-) (number_literal)) (,) (identifier) ()))) (;)) (}))))