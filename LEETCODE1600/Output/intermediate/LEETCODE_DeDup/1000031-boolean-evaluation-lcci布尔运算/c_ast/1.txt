(translation_unit (preproc_def (#define) (identifier) (preproc_arg)) (type_definition (typedef) (struct_specifier (struct) (type_identifier) (field_declaration_list ({) (field_declaration (primitive_type) (field_identifier) (;)) (field_declaration (primitive_type) (field_identifier) (;)) (field_declaration (primitive_type) (field_identifier) (;)) (}))) (type_identifier) (;)) (declaration (type_identifier) (array_declarator (array_declarator (identifier) ([) (identifier) (])) ([) (identifier) (])) (;)) (declaration (primitive_type) (pointer_declarator (*) (identifier)) (;)) (declaration (primitive_type) (identifier) (;)) (function_definition (type_identifier) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ())))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (.) (field_identifier)) (==) (true)) ())) (compound_statement ({) (return_statement (return) (pointer_expression (&) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (]))) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (field_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (.) (field_identifier)) (=) (true)) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (.) (field_identifier)) (=) (conditional_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (char_literal (') (character) ('))) (?) (number_literal) (:) (number_literal))) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (.) (field_identifier)) (=) (conditional_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (char_literal (') (character) ('))) (?) (number_literal) (:) (number_literal))) (;)) (return_statement (return) (pointer_expression (&) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (]))) (;)) (}))) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (/) (number_literal))) (;)) (declaration (type_identifier) (init_declarator (identifier) (=) (initializer_list ({) (number_literal) (}))) (;)) (comment) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (binary_expression (identifier) (+) (binary_expression (identifier) (*) (number_literal))) (+) (number_literal))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (binary_expression (identifier) (*) (number_literal)) (+) (number_literal))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (binary_expression (identifier) (-) (identifier)) (-) (number_literal))) (;)) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ())))) (;)) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (+) (number_literal)) (,) (identifier) ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (char_literal (') (character) ('))) ())) (compound_statement ({) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (+=) (binary_expression (field_expression (identifier) (->) (field_identifier)) (*) (field_expression (identifier) (->) (field_identifier)))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (+=) (binary_expression (binary_expression (binary_expression (field_expression (identifier) (->) (field_identifier)) (*) (field_expression (identifier) (->) (field_identifier))) (+) (binary_expression (field_expression (identifier) (->) (field_identifier)) (*) (field_expression (identifier) (->) (field_identifier)))) (+) (binary_expression (field_expression (identifier) (->) (field_identifier)) (*) (field_expression (identifier) (->) (field_identifier))))) (;)) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (char_literal (') (character) ('))) ())) (compound_statement ({) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (+=) (binary_expression (binary_expression (binary_expression (field_expression (identifier) (->) (field_identifier)) (*) (field_expression (identifier) (->) (field_identifier))) (+) (binary_expression (field_expression (identifier) (->) (field_identifier)) (*) (field_expression (identifier) (->) (field_identifier)))) (+) (binary_expression (field_expression (identifier) (->) (field_identifier)) (*) (field_expression (identifier) (->) (field_identifier))))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (+=) (binary_expression (field_expression (identifier) (->) (field_identifier)) (*) (field_expression (identifier) (->) (field_identifier)))) (;)) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (char_literal (') (character) ('))) ())) (compound_statement ({) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (+=) (binary_expression (binary_expression (field_expression (identifier) (->) (field_identifier)) (*) (field_expression (identifier) (->) (field_identifier))) (+) (binary_expression (field_expression (identifier) (->) (field_identifier)) (*) (field_expression (identifier) (->) (field_identifier))))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (+=) (binary_expression (binary_expression (field_expression (identifier) (->) (field_identifier)) (*) (field_expression (identifier) (->) (field_identifier))) (+) (binary_expression (field_expression (identifier) (->) (field_identifier)) (*) (field_expression (identifier) (->) (field_identifier))))) (;)) (}))))))) (}))) (expression_statement (assignment_expression (field_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (.) (field_identifier)) (=) (true)) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (.) (field_identifier)) (=) (field_expression (identifier) (.) (field_identifier))) (;)) (expression_statement (assignment_expression (field_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (.) (field_identifier)) (=) (field_expression (identifier) (.) (field_identifier))) (;)) (return_statement (return) (pointer_expression (&) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (]))) (;)) (}))) (comment) (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (compound_statement ({) (return_statement (return) (number_literal) (;)) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (compound_statement ({) (return_statement (return) (conditional_expression (binary_expression (subscript_expression (identifier) ([) (number_literal) (])) (==) (binary_expression (identifier) (+) (char_literal (') (character) (')))) (?) (number_literal) (:) (number_literal)) (;)) (}))))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<=) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<=) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (field_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (.) (field_identifier)) (=) (false)) (;)) (}))) (}))) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (call_expression (identifier) (argument_list (() (number_literal) (,) (identifier) ())))) (;)) (return_statement (return) (conditional_expression (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (?) (field_expression (identifier) (->) (field_identifier)) (:) (field_expression (identifier) (->) (field_identifier))) (;)) (}))))