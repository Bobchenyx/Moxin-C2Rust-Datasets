(source_file (line_comment (//)) (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (type_identifier)) ())) (->) (primitive_type) (block ({) (let_declaration (let) (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (macro_invocation (identifier) (!) (token_tree ([) (integer_literal) (;) (token_tree (() (char_literal) (as) (primitive_type) (as) (primitive_type) ())) (+) (integer_literal) (]))) (;)) (line_comment (//)) (expression_statement (for_expression (for) (identifier) (in) (identifier) (block ({) (expression_statement (compound_assignment_expr (index_expression (identifier) ([) (type_cast_expression (parenthesized_expression (() (type_cast_expression (identifier) (as) (primitive_type)) ())) (as) (primitive_type)) (])) (+=) (integer_literal)) (;)) (})))) (expression_statement (for_expression (for) (reference_pattern (&) (identifier)) (in) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (block ({) (expression_statement (if_expression (if) (binary_expression (identifier) (>) (integer_literal)) (block ({) (expression_statement (return_expression (return) (boolean_literal (false))) (;)) (})))) (})))) (boolean_literal (true)) (}))) (}))))