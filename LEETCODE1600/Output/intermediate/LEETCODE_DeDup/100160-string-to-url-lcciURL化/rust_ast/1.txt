(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (type_identifier)) (,) (parameter (identifier) (:) (primitive_type)) ())) (->) (type_identifier) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (:) (type_identifier) (=) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (string_literal (") (")) ()))) (;)) (expression_statement (for_expression (for) (tuple_pattern (() (identifier) (,) (identifier) ())) (in) (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (block ({) (expression_statement (if_expression (if) (binary_expression (type_cast_expression (identifier) (as) (primitive_type)) (==) (identifier)) (block ({) (break_expression (break)) (})))) (expression_statement (match_expression (match) (identifier) (match_block ({) (match_arm (match_pattern (char_literal)) (=>) (block ({) (compound_assignment_expr (identifier) (+=) (string_literal (") (string_content) ("))) (})) (,)) (match_arm (match_pattern (_)) (=>) (block ({) (compound_assignment_expr (identifier) (+=) (reference_expression (&) (parenthesized_expression (() (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) ())))) (}))) (})))) (})))) (identifier) (}))) (}))))