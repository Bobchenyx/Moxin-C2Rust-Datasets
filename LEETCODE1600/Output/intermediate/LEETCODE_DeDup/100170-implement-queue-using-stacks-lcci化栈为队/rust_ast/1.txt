(source_file (struct_item (struct) (type_identifier) (field_declaration_list ({) (field_declaration (field_identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (>)))) (,) (field_declaration (field_identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (>)))) (,) (}))) (impl_item (impl) (type_identifier) (declaration_list ({) (block_comment (/*) (outer_doc_comment_marker) (doc_comment) (*/)) (function_item (fn) (identifier) (parameters (() ())) (->) (type_identifier) (block ({) (struct_expression (type_identifier) (field_initializer_list ({) (field_initializer (field_identifier) (:) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() ())))) (,) (field_initializer (field_identifier) (:) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() ())))) (,) (}))) (}))) (block_comment (/*) (outer_doc_comment_marker) (doc_comment) (*/)) (function_item (fn) (identifier) (parameters (() (self_parameter (&) (mutable_specifier) (self)) (,) (parameter (identifier) (:) (primitive_type)) ())) (block ({) (call_expression (field_expression (field_expression (self) (.) (field_identifier)) (.) (field_identifier)) (arguments (() (call_expression (identifier) (arguments (() (identifier) ()))) ()))) (}))) (block_comment (/*) (outer_doc_comment_marker) (doc_comment) (*/)) (function_item (fn) (identifier) (parameters (() (self_parameter (&) (mutable_specifier) (self)) ())) (->) (primitive_type) (block ({) (return_expression (return) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (self) (,) (boolean_literal (true)) ())))) (}))) (function_item (fn) (identifier) (parameters (() (parameter (identifier) (:) (reference_type (&) (mutable_specifier) (type_identifier))) (,) (parameter (identifier) (:) (primitive_type)) ())) (->) (primitive_type) (block ({) (expression_statement (if_expression (if) (call_expression (field_expression (field_expression (identifier) (.) (field_identifier)) (.) (field_identifier)) (arguments (() ()))) (block ({) (expression_statement (while_expression (while) (unary_expression (!) (call_expression (field_expression (field_expression (identifier) (.) (field_identifier)) (.) (field_identifier)) (arguments (() ())))) (block ({) (expression_statement (call_expression (field_expression (field_expression (identifier) (.) (field_identifier)) (.) (field_identifier)) (arguments (() (call_expression (field_expression (call_expression (field_expression (field_expression (identifier) (.) (field_identifier)) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) ()))) (;)) (})))) (})))) (let_declaration (let) (identifier) (=) (if_expression (if) (identifier) (block ({) (call_expression (field_expression (call_expression (field_expression (field_expression (identifier) (.) (field_identifier)) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (})) (else_clause (else) (block ({) (call_expression (field_expression (call_expression (field_expression (call_expression (field_expression (field_expression (identifier) (.) (field_identifier)) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (})))) (;)) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (}))) (block_comment (/*) (outer_doc_comment_marker) (doc_comment) (*/)) (function_item (fn) (identifier) (parameters (() (self_parameter (&) (mutable_specifier) (self)) ())) (->) (primitive_type) (block ({) (return_expression (return) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (self) (,) (boolean_literal (false)) ())))) (}))) (block_comment (/*) (outer_doc_comment_marker) (doc_comment) (*/)) (function_item (fn) (identifier) (parameters (() (self_parameter (&) (mutable_specifier) (self)) ())) (->) (primitive_type) (block ({) (binary_expression (call_expression (field_expression (field_expression (self) (.) (field_identifier)) (.) (field_identifier)) (arguments (() ()))) (&&) (call_expression (field_expression (field_expression (self) (.) (field_identifier)) (.) (field_identifier)) (arguments (() ())))) (}))) (}))))