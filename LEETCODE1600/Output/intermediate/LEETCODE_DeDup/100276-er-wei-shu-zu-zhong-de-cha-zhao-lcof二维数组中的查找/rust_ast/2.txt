(ERROR (identifier) ([) (ERROR (]) (identifier) (identifier) (:) (identifier)) (call_expression (identifier) (arguments (() (self) (,) (index_expression (identifier) (ERROR (:) (identifier)) ([) (index_expression (identifier) ([) (identifier) (])) (])) (,) (identifier) (ERROR (:) (identifier)) ()))) (-) (ERROR (>) (primitive_type) (:)) (if) (ERROR (identifier) (identifier) (index_expression (identifier) ([) (integer_literal) (])) (:)) (identifier) (=) (ERROR (call_expression (identifier) (arguments (() (index_expression (identifier) ([) (integer_literal) (])) ())))) (for) (identifier) (in) (ERROR (identifier) (:)) (if) (index_expression (identifier) ([) (unary_expression (-) (integer_literal)) (])) (<) (ERROR (identifier) (:) (continue)) (if) (binary_expression (index_expression (identifier) ([) (integer_literal) (])) (>) (ERROR (identifier) (:)) (return_expression (return) (identifier))) (ERROR (identifier)) (=) (ERROR (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (identifier) (,) (identifier) (,) (assignment_expression (identifier) (=) (identifier)) ())))) (if) (binary_expression (index_expression (identifier) ([) (binary_expression (identifier) (-) (integer_literal)) (])) (==) (ERROR (identifier) (:)) (return_expression (return) (identifier))) (ERROR (identifier)) (=) (ERROR (identifier)) (return_expression (return) (identifier)))