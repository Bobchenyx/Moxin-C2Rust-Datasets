(source_file (ERROR (identifier) ([) (])) (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>)))) ())) (->) (primitive_type) (block ({) (let_declaration (let) (tuple_pattern (() (mut_pattern (mutable_specifier) (identifier)) (,) (mut_pattern (mutable_specifier) (identifier)) ())) (=) (tuple_expression (() (integer_literal) (,) (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (-) (integer_literal)) ())) (;)) (expression_statement (while_expression (while) (binary_expression (identifier) (<) (identifier)) (block ({) (let_declaration (let) (identifier) (=) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ())) (/) (integer_literal)) (;)) (expression_statement (if_expression (if) (binary_expression (index_expression (identifier) ([) (identifier) (])) (>) (index_expression (identifier) ([) (identifier) (]))) (block ({) (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (integer_literal))) (})) (else_clause (else) (if_expression (if) (binary_expression (index_expression (identifier) ([) (identifier) (])) (<) (index_expression (identifier) ([) (identifier) (]))) (block ({) (assignment_expression (identifier) (=) (identifier)) (})) (else_clause (else) (block ({) (compound_assignment_expr (identifier) (-=) (integer_literal)) (}))))))) (})))) (index_expression (identifier) ([) (identifier) (])) (}))) (}))))