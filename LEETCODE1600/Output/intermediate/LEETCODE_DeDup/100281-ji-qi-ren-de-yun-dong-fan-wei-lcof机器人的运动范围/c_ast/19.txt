(translation_unit (declaration (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (;)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (array_declarator (array_declarator (identifier) ([) (identifier) (])) ([) (identifier) (])) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (sizeof_expression (sizeof) (parenthesized_expression (() (identifier) ()))) ()))) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (number_literal) (])) ([) (number_literal) (])) (=) (number_literal)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) ()))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (identifier) (-) (number_literal)) (>=) (number_literal)) ())) (&&) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) ([) (identifier) (])) (==) (number_literal)) ()))) ())) (||) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (identifier) (-) (number_literal)) (>=) (number_literal)) ())) (&&) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (binary_expression (identifier) (-) (number_literal)) (])) (==) (number_literal)) ()))) ()))) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (=) (number_literal)) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (}))) (}))) (}))) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (binary_expression (binary_expression (identifier) (/) (number_literal)) (+) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (%) (number_literal)) ())) (/) (number_literal))) (+) (parenthesized_expression (() (binary_expression (identifier) (%) (number_literal)) ())))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (binary_expression (binary_expression (identifier) (/) (number_literal)) (+) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (%) (number_literal)) ())) (/) (number_literal))) (+) (parenthesized_expression (() (binary_expression (identifier) (%) (number_literal)) ())))) (;)) (return_statement (return) (parenthesized_expression (() (conditional_expression (binary_expression (binary_expression (identifier) (+) (identifier)) (>) (identifier)) (?) (false) (:) (true)) ())) (;)) (}))))