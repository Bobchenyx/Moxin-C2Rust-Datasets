(source_file (use_declaration (use) (scoped_identifier (scoped_identifier (identifier) (::) (identifier)) (::) (identifier)) (;)) (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (self_parameter (&) (self)) (,) (parameter (identifier) (:) (primitive_type)) ())) (->) (primitive_type) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (identifier) (;)) (expression_statement (while_expression (while) (binary_expression (identifier) (!=) (integer_literal)) (block ({) (expression_statement (compound_assignment_expr (identifier) (+=) (binary_expression (identifier) (%) (integer_literal))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (/) (integer_literal))) (;)) (})))) (identifier) (}))) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (primitive_type)) (,) (parameter (identifier) (:) (primitive_type)) (,) (parameter (identifier) (:) (primitive_type)) ())) (->) (primitive_type) (block ({) (expression_statement (if_expression (if) (binary_expression (identifier) (==) (integer_literal)) (block ({) (expression_statement (return_expression (return) (integer_literal)) (;)) (})))) (let_declaration (let) (identifier) (=) (macro_invocation (identifier) (!) (token_tree ([) (integer_literal) (,) (integer_literal) (]))) (;)) (let_declaration (let) (identifier) (=) (macro_invocation (identifier) (!) (token_tree ([) (integer_literal) (,) (integer_literal) (]))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (macro_invocation (identifier) (!) (token_tree ([) (identifier) (!) (token_tree ([) (integer_literal) (;) (identifier) (as) (primitive_type) (])) (;) (identifier) (as) (primitive_type) (]))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (tuple_type (() (primitive_type) (,) (primitive_type) ())) (>))) (=) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() ()))) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (tuple_expression (() (integer_literal) (,) (integer_literal) ())) ()))) (;)) (expression_statement (assignment_expression (index_expression (index_expression (identifier) ([) (integer_literal) (])) ([) (integer_literal) (])) (=) (integer_literal)) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (expression_statement (while_expression (while) (let_condition (let) (tuple_struct_pattern (identifier) (() (tuple_pattern (() (identifier) (,) (identifier) ())) ())) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ())))) (block ({) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (integer_literal)) (block ({) (let_declaration (let) (identifier) (=) (binary_expression (identifier) (+) (index_expression (identifier) ([) (identifier) (]))) (;)) (let_declaration (let) (identifier) (=) (binary_expression (identifier) (+) (index_expression (identifier) ([) (identifier) (]))) (;)) (let_declaration (let) (identifier) (=) (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (identifier) ()))) (+) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (identifier) ())))) (;)) (expression_statement (if_expression (if) (binary_expression (binary_expression (binary_expression (binary_expression (binary_expression (binary_expression (identifier) (<) (integer_literal)) (||) (binary_expression (identifier) (>=) (identifier))) (||) (binary_expression (identifier) (<) (integer_literal))) (||) (binary_expression (identifier) (>=) (identifier))) (||) (binary_expression (index_expression (index_expression (identifier) ([) (type_cast_expression (identifier) (as) (primitive_type)) (])) ([) (type_cast_expression (identifier) (as) (primitive_type)) (])) (==) (integer_literal))) (||) (binary_expression (identifier) (>) (identifier))) (block ({) (continue_expression (continue)) (})) (else_clause (else) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (tuple_expression (() (identifier) (,) (identifier) ())) ()))) (;)) (expression_statement (assignment_expression (index_expression (index_expression (identifier) ([) (type_cast_expression (identifier) (as) (primitive_type)) (])) ([) (type_cast_expression (identifier) (as) (primitive_type)) (])) (=) (integer_literal)) (;)) (expression_statement (compound_assignment_expr (identifier) (+=) (integer_literal)) (;)) (}))))) (})))) (})))) (identifier) (}))) (}))))