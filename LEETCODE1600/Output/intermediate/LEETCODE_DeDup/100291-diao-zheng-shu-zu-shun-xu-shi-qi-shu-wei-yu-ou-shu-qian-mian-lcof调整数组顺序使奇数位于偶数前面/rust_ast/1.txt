(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>)))) ())) (->) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (block ({) (expression_statement (if_expression (if) (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (==) (integer_literal)) (block ({) (expression_statement (return_expression (return) (identifier)) (;)) (})))) (let_declaration (let) (tuple_pattern (() (mut_pattern (mutable_specifier) (identifier)) (,) (mut_pattern (mutable_specifier) (identifier)) (,) (mut_pattern (mutable_specifier) (identifier)) ())) (=) (tuple_expression (() (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (,) (integer_literal) (,) (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (-) (integer_literal)) ())) (;)) (expression_statement (while_expression (label (') (identifier)) (:) (while) (binary_expression (identifier) (<) (identifier)) (block ({) (expression_statement (while_expression (while) (binary_expression (binary_expression (index_expression (identifier) ([) (identifier) (])) (&) (integer_literal)) (==) (integer_literal)) (block ({) (expression_statement (compound_assignment_expr (identifier) (+=) (integer_literal)) (;)) (expression_statement (if_expression (if) (binary_expression (identifier) (>=) (identifier)) (block ({) (expression_statement (break_expression (break) (label (') (identifier))) (;)) (})))) (})))) (expression_statement (while_expression (while) (binary_expression (binary_expression (index_expression (identifier) ([) (identifier) (])) (&) (integer_literal)) (==) (integer_literal)) (block ({) (expression_statement (compound_assignment_expr (identifier) (-=) (integer_literal)) (;)) (expression_statement (if_expression (if) (binary_expression (identifier) (>=) (identifier)) (block ({) (expression_statement (break_expression (break) (label (') (identifier))) (;)) (})))) (})))) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (identifier) (,) (identifier) ()))) (;)) (expression_statement (compound_assignment_expr (identifier) (+=) (integer_literal)) (;)) (expression_statement (compound_assignment_expr (identifier) (-=) (integer_literal)) (;)) (})))) (identifier) (}))) (}))))