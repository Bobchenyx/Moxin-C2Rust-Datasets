(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_qualifier (const)) (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (type_qualifier (const)) (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (type_qualifier (const)) (primitive_type) (init_declarator (identifier) (=) (pointer_expression (*) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (identifier)))) (;)) (declaration (type_qualifier (const)) (primitive_type) (init_declarator (identifier) (=) (pointer_expression (*) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (identifier)))) (;)) (return_statement (return) (binary_expression (identifier) (-) (identifier)) (;)) (}))) (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (==) (null (NULL))) (||) (binary_expression (identifier) (<=) (number_literal))) (||) (binary_expression (identifier) (<=) (number_literal))) ())) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (number_literal)) (;)) (return_statement (return) (null (NULL)) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (identifier)) (;)) (return_statement (return) (identifier) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (,) (identifier) ()))) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (identifier)) (;)) (return_statement (return) (identifier) (;)) (}))))