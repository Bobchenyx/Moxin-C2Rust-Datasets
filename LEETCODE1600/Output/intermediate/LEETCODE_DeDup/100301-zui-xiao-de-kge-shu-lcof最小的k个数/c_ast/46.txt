(translation_unit (comment) (function_definition (type_identifier) (identifier) (compound_statement ({) (comment) (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (ERROR (<) (primitive_type) (>) (&)) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (while_statement (while) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (*) (number_literal)) (+) (number_literal)) (<) (identifier)) ())) (compound_statement ({) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (binary_expression (identifier) (*) (number_literal)) (+) (number_literal))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (<) (identifier)) (&&) (binary_expression (binary_expression (identifier) (+) (number_literal)) (<) (identifier))) (&&) (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) (>) (subscript_expression (identifier) ([) (identifier) (])))) ())) (expression_statement (update_expression (identifier) (++)) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (>=) (subscript_expression (identifier) ([) (identifier) (]))) ())) (break_statement (break) (;))) (expression_statement (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) (,) (subscript_expression (identifier) ([) (identifier) (])) ()))) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (}))) (}))) (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (ERROR (<) (primitive_type) (>) (&)) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ())))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (binary_expression (identifier) (/) (number_literal)) (-) (number_literal))) (;)) (binary_expression (identifier) (>=) (number_literal)) (;) (update_expression (identifier) (--)) ()) (compound_statement ({) (comment) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) ()))) (;)) (}))) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (ERROR (<) (primitive_type) (>) (&)) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ())))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (comment) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (>) (number_literal)) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (number_literal) (])) (,) (subscript_expression (identifier) ([) (update_expression (--) (identifier)) (])) ()))) (;)) (comment) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (identifier) ()))) (;)) (comment) (}))) (}))) (labeled_statement (statement_identifier) (:) (expression_statement (binary_expression (binary_expression (identifier) (<) (identifier)) (>) (call_expression (identifier) (argument_list (() (binary_expression (binary_expression (identifier) (<) (identifier)) (>) (pointer_expression (&) (identifier))) (,) (identifier) (ERROR (identifier)) ())))) (;))) (compound_statement ({) (expression_statement (binary_expression (binary_expression (identifier) (<) (identifier)) (>) (identifier)) (;)) (comment) (comment) (comment) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ()))) (;)) (}))) (return_statement (return) (identifier) (;)) (})) (}))) (expression_statement (;)))