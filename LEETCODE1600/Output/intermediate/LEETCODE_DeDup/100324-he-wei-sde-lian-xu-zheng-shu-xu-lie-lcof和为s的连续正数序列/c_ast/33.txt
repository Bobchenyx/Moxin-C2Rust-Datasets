(translation_unit (function_definition (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) ()))))) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (number_literal)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<) (number_literal)) ())) (return_statement (return) (null (NULL)) (;))) (preproc_def (#define) (identifier) (preproc_arg)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (identifier))) (=) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ())) (*) (identifier)) ())))) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (identifier)) ())))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (pointer_expression (*) (identifier)) (,) (number_literal) (,) (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (identifier)) ()))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (+) (identifier))) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (<=) (binary_expression (identifier) (+) (number_literal))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (identifier)) ())) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (update_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (++))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (binary_expression (identifier) (-) (identifier)) (+) (number_literal))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (identifier) (>=) (number_literal)) ()))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (identifier)) ())))) (;)) (expression_statement (assignment_expression (subscript_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) ([) (identifier) (])) (=) (identifier)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (identifier)) (;)) (binary_expression (identifier) (<=) (identifier)) (;) (update_expression (identifier) (++)) ()) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (binary_expression (identifier) (-) (identifier)) (])) (=) (identifier)) (;))) (expression_statement (assignment_expression (identifier) (-=) (update_expression (identifier) (++))) (;)) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (assignment_expression (identifier) (+=) (identifier)) (;)) (})) (else_clause (else) (comment) (compound_statement ({) (expression_statement (assignment_expression (identifier) (-=) (update_expression (identifier) (++))) (;)) (})))))) (}))) (return_statement (return) (identifier) (;)) (}))))