(translation_unit (comment) (comment) (function_definition (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) ()))))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (compound_statement ({) (expression_statement (assignment_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (=) (number_literal)) (;)) (return_statement (return) (null (NULL)) (;)) (}))) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (identifier))) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*) (abstract_pointer_declarator (*)))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ())) (*) (number_literal)) ()))))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (number_literal)) (;) (update_expression (++) (identifier)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (number_literal)) ())))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) (,) (number_literal) (,) (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (number_literal)) ()))) (;)) (}))) (expression_statement (assignment_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (=) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ())) (*) (number_literal)) ())))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (parenthesized_expression (() (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) ())) (,) (number_literal) (,) (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ())) (*) (number_literal)) ()))) (;)) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (array_declarator (identifier) ([) (number_literal) (]))) (=) (initializer_list ({) (number_literal) (}))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (identifier)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (!=) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (=) (binary_expression (identifier) (+) (number_literal))) (;)) (expression_statement (assignment_expression (subscript_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) ([) (identifier) (])) (=) (identifier)) (;)) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (array_declarator (identifier) ([) (number_literal) (]))) (=) (initializer_list ({) (number_literal) (}))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (++) (identifier)) ()) (compound_statement ({) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (%) (number_literal)) (==) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (=) (field_expression (subscript_expression (identifier) ([) (identifier) (])) (->) (field_identifier))) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (binary_expression (binary_expression (identifier) (-) (identifier)) (-) (number_literal)) (])) (=) (field_expression (subscript_expression (identifier) ([) (identifier) (])) (->) (field_identifier))) (;)) (})))) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (->) (field_identifier)) (!=) (null (NULL))) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (field_expression (subscript_expression (identifier) ([) (identifier) (])) (->) (field_identifier))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (->) (field_identifier)) (!=) (null (NULL))) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (field_expression (subscript_expression (identifier) ([) (identifier) (])) (->) (field_identifier))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (}))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (struct_specifier (struct) (type_identifier)) (abstract_pointer_declarator (*))) ())) (*) (identifier)) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (struct_specifier (struct) (type_identifier)) (abstract_pointer_declarator (*))) ())) (*) (identifier)) ()))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (}))) (return_statement (return) (identifier) (;)) (}))))