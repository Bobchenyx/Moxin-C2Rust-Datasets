(translation_unit (type_definition (typedef) (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (type_identifier)) (;)) (type_definition (typedef) (struct_specifier (struct) (field_declaration_list ({) (field_declaration (type_identifier) (pointer_declarator (*) (field_identifier)) (;)) (field_declaration (primitive_type) (field_identifier) (;)) (field_declaration (primitive_type) (field_identifier) (,) (field_identifier) (;)) (field_declaration (primitive_type) (field_identifier) (;)) (}))) (type_identifier) (;)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (cast_expression (() (type_descriptor (type_identifier) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (parenthesized_expression (() (identifier) ()))) (*) (identifier)) ()))))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (number_literal)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (number_literal)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (number_literal)) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (type_qualifier (const)) (type_identifier) (identifier)) ()))) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (field_expression (identifier) (->) (field_identifier)) (])) (=) (identifier)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (binary_expression (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (+) (number_literal)) ())) (%) (field_expression (identifier) (->) (field_identifier)))) (;)) (expression_statement (update_expression (field_expression (identifier) (->) (field_identifier)) (++)) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (field_expression (identifier) (->) (field_identifier)) (]))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (binary_expression (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (+) (number_literal)) ())) (%) (field_expression (identifier) (->) (field_identifier)))) (;)) (expression_statement (update_expression (field_expression (identifier) (->) (field_identifier)) (--)) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (return_statement (return) (conditional_expression (binary_expression (field_expression (identifier) (->) (field_identifier)) (==) (number_literal)) (?) (number_literal) (:) (number_literal)) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (return_statement (return) (number_literal) (;))) (return_statement (return) (call_expression (identifier) (argument_list (() (binary_expression (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) ()))) (+) (number_literal)) (,) (binary_expression (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) ()))) (+) (number_literal)) ()))) (;)) (}))) (function_definition (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) ()))))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (number_literal)) (;)) (return_statement (return) (identifier) (;)) (}))) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (comment) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (identifier)) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (identifier))) (=) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ())) (*) (identifier)) ())))) (;)) (expression_statement (assignment_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (=) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (identifier)) ())))) (;)) (declaration (type_identifier) (identifier) (;)) (expression_statement (call_expression (identifier) (argument_list (() (pointer_expression (&) (identifier)) (,) (number_literal) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (pointer_expression (&) (identifier)) (,) (identifier) ()))) (;)) (declaration (type_identifier) (identifier) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (comment) (while_statement (while) (parenthesized_expression (() (unary_expression (!) (call_expression (identifier) (argument_list (() (pointer_expression (&) (identifier)) ())))) ())) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (field_expression (identifier) (.) (field_identifier))) (;)) (comment) (expression_statement (assignment_expression (subscript_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) ([) (identifier) (])) (=) (identifier)) (;)) (comment) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (identifier)) ()))))) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (pointer_expression (&) (identifier)) (,) (pointer_expression (&) (identifier)) ()))) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (update_expression (identifier) (++)) (])) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (comment) (if_statement (if) (parenthesized_expression (() (field_expression (identifier) (->) (field_identifier)) ())) (expression_statement (call_expression (identifier) (argument_list (() (pointer_expression (&) (identifier)) (,) (field_expression (identifier) (->) (field_identifier)) ()))) (;))) (if_statement (if) (parenthesized_expression (() (field_expression (identifier) (->) (field_identifier)) ())) (expression_statement (call_expression (identifier) (argument_list (() (pointer_expression (&) (identifier)) (,) (field_expression (identifier) (->) (field_identifier)) ()))) (;))) (}))) (expression_statement (update_expression (identifier) (--)) (;)) (comment) (}))) (return_statement (return) (identifier) (;)) (}))))