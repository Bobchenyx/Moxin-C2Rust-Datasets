(translation_unit (function_definition (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ())))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<=) (number_literal)) ())) (return_statement (return) (null (NULL)) (;))) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (struct_specifier (struct) (type_identifier)) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (number_literal) (,) (sizeof_expression (sizeof) (() (type_descriptor (struct_specifier (struct) (type_identifier))) ())) ()))))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (subscript_expression (identifier) ([) (binary_expression (identifier) (/) (number_literal)) (]))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (identifier) (/) (number_literal)) ())))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (call_expression (identifier) (argument_list (() (binary_expression (binary_expression (identifier) (+) (binary_expression (identifier) (/) (number_literal))) (+) (number_literal)) (,) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (-) (number_literal)) ())) (/) (number_literal)) ())))) (;)) (return_statement (return) (identifier) (;)) (}))))