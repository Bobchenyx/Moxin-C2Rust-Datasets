(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (>)))) ())) (->) (primitive_type) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (identifier) (;)) (let_declaration (let) (identifier) (=) (type_cast_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (as) (primitive_type)) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() ()))) (;)) (expression_statement (for_expression (for) (identifier) (in) (parenthesized_expression (() (range_expression (integer_literal) (..) (identifier)) ())) (block ({) (expression_statement (for_expression (for) (identifier) (in) (parenthesized_expression (() (range_expression (integer_literal) (..) (identifier)) ())) (block ({) (expression_statement (if_expression (if) (binary_expression (index_expression (index_expression (identifier) ([) (type_cast_expression (identifier) (as) (primitive_type)) (])) ([) (type_cast_expression (identifier) (as) (primitive_type)) (])) (==) (integer_literal)) (block ({) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (tuple_expression (() (identifier) (,) (identifier) ())) ()))) (})))) (})))) (})))) (expression_statement (if_expression (if) (binary_expression (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (==) (type_cast_expression (integer_literal) (as) (primitive_type))) (||) (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (==) (type_cast_expression (parenthesized_expression (() (binary_expression (identifier) (*) (identifier)) ())) (as) (primitive_type)))) (block ({) (return_expression (return) (unary_expression (-) (integer_literal))) (})))) (let_declaration (let) (identifier) (=) (macro_invocation (identifier) (!) (token_tree ([) (token_tree (() (integer_literal) (,) (integer_literal) ())) (,) (token_tree (() (-) (integer_literal) (,) (integer_literal) ())) (,) (token_tree (() (integer_literal) (,) (integer_literal) ())) (,) (token_tree (() (integer_literal) (,) (-) (integer_literal) ())) (]))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (unary_expression (-) (integer_literal)) (;)) (expression_statement (while_expression (while) (unary_expression (!) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ())))) (block ({) (expression_statement (compound_assignment_expr (identifier) (+=) (integer_literal)) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() ()))) (;)) (expression_statement (for_expression (for) (tuple_pattern (() (identifier) (,) (identifier) ())) (in) (identifier) (block ({) (expression_statement (for_expression (for) (tuple_pattern (() (identifier) (,) (identifier) ())) (in) (reference_expression (&) (identifier)) (block ({) (let_declaration (let) (tuple_pattern (() (identifier) (,) (identifier) ())) (=) (tuple_expression (() (binary_expression (identifier) (+) (identifier)) (,) (binary_expression (identifier) (+) (identifier)) ())) (;)) (expression_statement (if_expression (if) (binary_expression (binary_expression (binary_expression (binary_expression (binary_expression (unary_expression (-) (integer_literal)) (<) (identifier)) (&&) (binary_expression (identifier) (<) (identifier))) (&&) (binary_expression (unary_expression (-) (integer_literal)) (<) (identifier))) (&&) (binary_expression (identifier) (<) (identifier))) (&&) (binary_expression (index_expression (index_expression (identifier) ([) (type_cast_expression (identifier) (as) (primitive_type)) (])) ([) (type_cast_expression (identifier) (as) (primitive_type)) (])) (==) (integer_literal))) (block ({) (expression_statement (assignment_expression (index_expression (index_expression (identifier) ([) (type_cast_expression (identifier) (as) (primitive_type)) (])) ([) (type_cast_expression (identifier) (as) (primitive_type)) (])) (=) (unary_expression (-) (integer_literal))) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (tuple_expression (() (identifier) (,) (identifier) ())) ()))) (;)) (})))) (})))) (})))) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (})))) (identifier) (}))) (}))))