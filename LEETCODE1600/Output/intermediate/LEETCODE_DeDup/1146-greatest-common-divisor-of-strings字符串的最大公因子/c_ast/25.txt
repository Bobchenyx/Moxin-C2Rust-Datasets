(translation_unit (preproc_include (#include) (system_lib_string)) (preproc_include (#include) (system_lib_string)) (preproc_function_def (#define) (identifier) (preproc_params (() (identifier) (,) (identifier) ())) (preproc_arg)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ()))) ()))))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) ()))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (char_literal (') (escape_sequence) ('))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (call_expression (identifier) (argument_list (() (identifier) ())))) (;) (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (identifier))) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (number_literal) (!=) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (+) (identifier)) (,) (identifier) (,) (identifier) ())))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (return_statement (return) (false) (;)) (}))) (}))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (call_expression (identifier) (argument_list (() (identifier) ())))) (;) (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (identifier))) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (number_literal) (!=) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (+) (identifier)) (,) (identifier) (,) (identifier) ())))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (return_statement (return) (false) (;)) (}))) (}))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (return_statement (return) (true) (;)) (}))) (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (binary_expression (identifier) (==) (null (NULL))) (||) (binary_expression (identifier) (==) (null (NULL)))) (||) (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (==) (number_literal))) (||) (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (==) (number_literal))) ())) (compound_statement ({) (return_statement (return) (string_literal (") (")) (;)) (}))) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (call_expression (identifier) (argument_list (() (identifier) ()))) (,) (call_expression (identifier) (argument_list (() (identifier) ()))) ())))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (identifier)) (;)) (binary_expression (identifier) (>=) (number_literal)) (;) (update_expression (--) (identifier)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (%) (identifier)) (==) (number_literal)) (&&) (binary_expression (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (%) (identifier)) (==) (number_literal))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (break_statement (break) (;)) (}))) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (compound_statement ({) (return_statement (return) (string_literal (") (")) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (true) (==) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) ())))) ())) (compound_statement ({) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ()))) ()))))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) ()))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (char_literal (') (escape_sequence) ('))) (;)) (return_statement (return) (identifier) (;)) (})) (else_clause (else) (compound_statement ({) (return_statement (return) (string_literal (") (")) (;)) (})))) (}))))