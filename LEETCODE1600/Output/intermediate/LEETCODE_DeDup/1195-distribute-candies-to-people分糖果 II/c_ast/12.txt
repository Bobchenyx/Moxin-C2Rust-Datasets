(translation_unit (preproc_include (#include) (system_lib_string)) (preproc_include (#include) (system_lib_string)) (comment) (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (binary_expression (identifier) (*) (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ()))) (/) (number_literal))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (identifier)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (*) (identifier))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (+=) (identifier)) (;)) (}))) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (identifier)) ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (binary_expression (binary_expression (binary_expression (binary_expression (identifier) (*) (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ()))) (*) (identifier)) (/) (number_literal)) (+) (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ())))) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (+) (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ())))) (;)) (}))) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (binary_expression (binary_expression (binary_expression (binary_expression (identifier) (*) (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ()))) (*) (identifier)) (/) (number_literal)) (+) (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ())))) (;)) (expression_statement (assignment_expression (identifier) (-=) (subscript_expression (identifier) ([) (number_literal) (]))) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (+) (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ())))) (;)) (expression_statement (assignment_expression (identifier) (-=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (}))) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (binary_expression (identifier) (*) (identifier)) (+) (number_literal))) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (>) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (+=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (-=) (identifier)) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (+=) (identifier)) (;)) (})))) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (identifier)) (;)) (return_statement (return) (identifier) (;)) (}))))