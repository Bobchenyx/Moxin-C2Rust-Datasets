(translation_unit (comment) (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (binary_expression (binary_expression (parenthesized_expression (() (binary_expression (number_literal) (+) (identifier)) ())) (*) (identifier)) (/) (number_literal))) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (parenthesized_expression (() (call_expression (identifier) (argument_list (() (binary_expression (identifier) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ()))) ()))) ())))) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (>) (identifier)) ())) (compound_statement ({) (comment) (expression_statement (assignment_expression (identifier) (-=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (binary_expression (parenthesized_expression (() (binary_expression (number_literal) (+) (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (number_literal) (*) (identifier)) (+) (number_literal)) ())) (*) (identifier))) ())) (*) (identifier)) (/) (number_literal))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (!=) (number_literal)) ())) (expression_statement (update_expression (identifier) (++)) (;))) (}))) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (conditional_expression (binary_expression (identifier) (==) (number_literal)) (?) (number_literal) (:) (number_literal))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (-) (number_literal)) ())) (*) (identifier)))) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (>) (identifier)) ())) (compound_statement ({) (comment) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (=) (parenthesized_expression (() (binary_expression (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ())) (*) (identifier)) (/) (number_literal)) ()))) (;)) (expression_statement (assignment_expression (identifier) (-=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (update_expression (++) (identifier)) (+) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (-) (number_literal)) ())) (*) (identifier)))) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (!=) (number_literal)) ())) (compound_statement ({) (comment) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (=) (binary_expression (binary_expression (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (number_literal) (*) (identifier)) (+) (binary_expression (parenthesized_expression (() (conditional_expression (binary_expression (parenthesized_expression (() (binary_expression (identifier) (-) (number_literal)) ())) (<) (number_literal)) (?) (number_literal) (:) (parenthesized_expression (() (binary_expression (identifier) (-) (number_literal)) ()))) ())) (*) (identifier))) ())) (*) (parenthesized_expression (() (binary_expression (identifier) (-) (number_literal)) ()))) (/) (number_literal)) (+) (identifier))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (while_statement (while) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (-) (number_literal)) (<) (identifier)) ())) (compound_statement ({) (comment) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (=) (conditional_expression (binary_expression (identifier) (==) (number_literal)) (?) (number_literal) (:) (parenthesized_expression (() (binary_expression (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (number_literal) (*) (identifier)) (+) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (-) (identifier)) ())) (*) (identifier))) ())) (*) (parenthesized_expression (() (binary_expression (identifier) (-) (number_literal)) ()))) (/) (number_literal)) ())))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (identifier)) (;)) (return_statement (return) (identifier) (;)) (}))))