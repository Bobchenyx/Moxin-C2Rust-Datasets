(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (comment) (comment) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (]))) ()))))) (;)) (comment) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (,) (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (]))) ()))) (;)) (comment) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (binary_expression (identifier) (>=) (number_literal)) (;) (update_expression (identifier) (--)) ()) (compound_statement ({) (comment) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (subscript_expression (identifier) ([) (identifier) (]))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (conditional_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (<) (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (]))) (?) (subscript_expression (identifier) ([) (identifier) (])) (:) (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (+) (identifier))) (;)) (}))) (}))) (return_statement (return) (subscript_expression (identifier) ([) (number_literal) (])) (;)) (}))))