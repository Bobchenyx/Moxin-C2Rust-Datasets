(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (>)))) ())) (->) (primitive_type) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (array_expression ([) (integer_literal) (;) (integer_literal) (])) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (expression_statement (for_expression (for) (identifier) (in) (identifier) (block ({) (let_declaration (let) (identifier) (=) (type_cast_expression (call_expression (field_expression (index_expression (identifier) ([) (integer_literal) (])) (.) (field_identifier)) (arguments (() (index_expression (identifier) ([) (integer_literal) (])) ()))) (as) (primitive_type)) (;)) (let_declaration (let) (identifier) (=) (type_cast_expression (call_expression (field_expression (index_expression (identifier) ([) (integer_literal) (])) (.) (field_identifier)) (arguments (() (index_expression (identifier) ([) (integer_literal) (])) ()))) (as) (primitive_type)) (;)) (expression_statement (compound_assignment_expr (identifier) (+=) (index_expression (identifier) ([) (binary_expression (binary_expression (identifier) (*) (integer_literal)) (+) (identifier)) (]))) (;)) (expression_statement (compound_assignment_expr (index_expression (identifier) ([) (binary_expression (binary_expression (identifier) (*) (integer_literal)) (+) (identifier)) (])) (+=) (integer_literal)) (;)) (})))) (identifier) (}))) (}))))