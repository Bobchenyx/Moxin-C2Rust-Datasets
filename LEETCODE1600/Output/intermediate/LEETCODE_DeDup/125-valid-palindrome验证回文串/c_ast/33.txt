(translation_unit (function_definition (type_identifier) (identifier) (compound_statement ({) (labeled_statement (statement_identifier) (:) (ERROR (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ())))) (compound_statement ({) (return_statement (return) (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (||) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (compound_statement ({) (comment) (return_statement (return) (true) (;)) (}))) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ()))) (&&) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ())))) ())) (compound_statement ({) (comment) (if_statement (if) (parenthesized_expression (() (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ()))) ())) (compound_statement ({) (comment) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ())))) (;)) (}))) (if_statement (if) (parenthesized_expression (() (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ()))) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ())))) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (subscript_expression (identifier) ([) (identifier) (]))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (update_expression (identifier) (--)) (;)) (continue_statement (continue) (;)) (})) (else_clause (else) (compound_statement ({) (return_statement (return) (false) (;)) (})))) (}))) (comment) (if_statement (if) (parenthesized_expression (() (unary_expression (!) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ())))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (if_statement (if) (parenthesized_expression (() (unary_expression (!) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ())))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (--)) (;)) (}))) (}))) (return_statement (return) (true) (;)) (}))) (}))) (expression_statement (;)))