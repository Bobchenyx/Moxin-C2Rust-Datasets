(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (%) (number_literal)) (==) (number_literal)) (&&) (binary_expression (binary_expression (identifier) (%) (number_literal)) (!=) (number_literal))) ())) (||) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (%) (number_literal)) (==) (number_literal)) ()))) ())) (return_statement (return) (number_literal) (;))) (return_statement (return) (number_literal) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (switch_statement (switch) (parenthesized_expression (() (identifier) ())) (compound_statement ({) (case_statement (case) (number_literal) (:) (break_statement (break) (;))) (case_statement (case) (number_literal) (:) (expression_statement (assignment_expression (identifier) (+=) (number_literal)) (;)) (break_statement (break) (;))) (case_statement (case) (number_literal) (:) (expression_statement (assignment_expression (identifier) (+=) (parenthesized_expression (() (binary_expression (number_literal) (+) (call_expression (identifier) (argument_list (() (identifier) ())))) ()))) (;)) (break_statement (break) (;))) (case_statement (case) (number_literal) (:) (expression_statement (assignment_expression (identifier) (+=) (parenthesized_expression (() (binary_expression (number_literal) (+) (call_expression (identifier) (argument_list (() (identifier) ())))) ()))) (;)) (break_statement (break) (;))) (case_statement (case) (number_literal) (:) (expression_statement (assignment_expression (identifier) (+=) (parenthesized_expression (() (binary_expression (number_literal) (+) (call_expression (identifier) (argument_list (() (identifier) ())))) ()))) (;)) (break_statement (break) (;))) (case_statement (case) (number_literal) (:) (expression_statement (assignment_expression (identifier) (+=) (parenthesized_expression (() (binary_expression (number_literal) (+) (call_expression (identifier) (argument_list (() (identifier) ())))) ()))) (;)) (break_statement (break) (;))) (case_statement (case) (number_literal) (:) (expression_statement (assignment_expression (identifier) (+=) (parenthesized_expression (() (binary_expression (number_literal) (+) (call_expression (identifier) (argument_list (() (identifier) ())))) ()))) (;)) (break_statement (break) (;))) (case_statement (case) (number_literal) (:) (expression_statement (assignment_expression (identifier) (+=) (parenthesized_expression (() (binary_expression (number_literal) (+) (call_expression (identifier) (argument_list (() (identifier) ())))) ()))) (;)) (break_statement (break) (;))) (case_statement (case) (number_literal) (:) (expression_statement (assignment_expression (identifier) (+=) (parenthesized_expression (() (binary_expression (number_literal) (+) (call_expression (identifier) (argument_list (() (identifier) ())))) ()))) (;)) (break_statement (break) (;))) (case_statement (case) (number_literal) (:) (expression_statement (assignment_expression (identifier) (+=) (parenthesized_expression (() (binary_expression (number_literal) (+) (call_expression (identifier) (argument_list (() (identifier) ())))) ()))) (;)) (break_statement (break) (;))) (case_statement (case) (number_literal) (:) (expression_statement (assignment_expression (identifier) (+=) (parenthesized_expression (() (binary_expression (number_literal) (+) (call_expression (identifier) (argument_list (() (identifier) ())))) ()))) (;)) (break_statement (break) (;))) (case_statement (case) (number_literal) (:) (expression_statement (assignment_expression (identifier) (+=) (parenthesized_expression (() (binary_expression (number_literal) (+) (call_expression (identifier) (argument_list (() (identifier) ())))) ()))) (;)) (break_statement (break) (;))) (case_statement (default) (:) (break_statement (break) (;))) (}))) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (identifier) (;)) (declaration (primitive_type) (identifier) (;)) (declaration (primitive_type) (identifier) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (string_literal (") (string_content) (")) (,) (pointer_expression (&) (identifier)) (,) (pointer_expression (&) (identifier)) (,) (pointer_expression (&) (identifier)) ()))) (;)) (return_statement (return) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) ()))) (;)) (}))))