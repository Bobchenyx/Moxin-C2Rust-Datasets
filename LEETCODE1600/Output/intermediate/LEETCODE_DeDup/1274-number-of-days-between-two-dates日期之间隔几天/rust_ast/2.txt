(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (type_identifier)) (,) (parameter (identifier) (:) (type_identifier)) ())) (->) (primitive_type) (block ({) (let_declaration (let) (identifier) (:) (primitive_type) (=) (call_expression (field_expression (call_expression (field_expression (call_expression (field_expression (index_expression (identifier) ([) (range_expression (integer_literal) (..) (integer_literal)) (])) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() (string_literal (") (")) ()))) (;)) (let_declaration (let) (identifier) (:) (primitive_type) (=) (call_expression (field_expression (call_expression (field_expression (call_expression (field_expression (index_expression (identifier) ([) (range_expression (integer_literal) (..) (integer_literal)) (])) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() (string_literal (") (")) ()))) (;)) (let_declaration (let) (identifier) (:) (primitive_type) (=) (call_expression (field_expression (call_expression (field_expression (call_expression (field_expression (index_expression (identifier) ([) (range_expression (integer_literal) (..) (integer_literal)) (])) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() (string_literal (") (")) ()))) (;)) (let_declaration (let) (identifier) (:) (primitive_type) (=) (call_expression (field_expression (call_expression (field_expression (call_expression (field_expression (index_expression (identifier) ([) (range_expression (integer_literal) (..) (integer_literal)) (])) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() (string_literal (") (")) ()))) (;)) (let_declaration (let) (identifier) (:) (primitive_type) (=) (call_expression (field_expression (call_expression (field_expression (call_expression (field_expression (index_expression (identifier) ([) (range_expression (integer_literal) (..) (integer_literal)) (])) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() (string_literal (") (")) ()))) (;)) (let_declaration (let) (identifier) (:) (primitive_type) (=) (call_expression (field_expression (call_expression (field_expression (call_expression (field_expression (index_expression (identifier) ([) (range_expression (integer_literal) (..) (integer_literal)) (])) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() (string_literal (") (")) ()))) (;)) (line_comment (//)) (let_declaration (let) (mutable_specifier) (identifier) (=) (macro_invocation (identifier) (!) (token_tree ([) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (]))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (identifier)) (block ({) (expression_statement (if_expression (if) (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (%) (integer_literal)) (==) (integer_literal)) (&&) (binary_expression (binary_expression (identifier) (%) (integer_literal)) (!=) (integer_literal))) ())) (||) (binary_expression (binary_expression (identifier) (%) (integer_literal)) (==) (integer_literal))) (block ({) (expression_statement (compound_assignment_expr (identifier) (+=) (integer_literal)) (;)) (})) (else_clause (else) (block ({) (expression_statement (compound_assignment_expr (identifier) (+=) (integer_literal)) (;)) (}))))) (})))) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (identifier)) (block ({) (expression_statement (if_expression (if) (binary_expression (binary_expression (identifier) (==) (integer_literal)) (&&) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (%) (integer_literal)) (==) (integer_literal)) (&&) (binary_expression (binary_expression (identifier) (%) (integer_literal)) (!=) (integer_literal))) ())) (||) (binary_expression (binary_expression (identifier) (%) (integer_literal)) (==) (integer_literal))) ()))) (block ({) (expression_statement (compound_assignment_expr (identifier) (+=) (integer_literal)) (;)) (})))) (expression_statement (compound_assignment_expr (identifier) (+=) (index_expression (identifier) ([) (type_cast_expression (parenthesized_expression (() (binary_expression (identifier) (-) (integer_literal)) ())) (as) (primitive_type)) (]))) (;)) (})))) (expression_statement (compound_assignment_expr (identifier) (+=) (identifier)) (;)) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (identifier)) (block ({) (expression_statement (if_expression (if) (binary_expression (binary_expression (binary_expression (binary_expression (identifier) (%) (integer_literal)) (==) (integer_literal)) (&&) (binary_expression (binary_expression (identifier) (%) (integer_literal)) (!=) (integer_literal))) (||) (binary_expression (binary_expression (identifier) (%) (integer_literal)) (==) (integer_literal))) (block ({) (expression_statement (compound_assignment_expr (identifier) (+=) (integer_literal)) (;)) (})) (else_clause (else) (block ({) (expression_statement (compound_assignment_expr (identifier) (+=) (integer_literal)) (;)) (}))))) (})))) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (identifier)) (block ({) (expression_statement (if_expression (if) (binary_expression (binary_expression (identifier) (==) (integer_literal)) (&&) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (%) (integer_literal)) (==) (integer_literal)) (&&) (binary_expression (binary_expression (identifier) (%) (integer_literal)) (!=) (integer_literal))) ())) (||) (binary_expression (binary_expression (identifier) (%) (integer_literal)) (==) (integer_literal))) ()))) (block ({) (expression_statement (compound_assignment_expr (identifier) (+=) (integer_literal)) (;)) (})))) (expression_statement (compound_assignment_expr (identifier) (+=) (index_expression (identifier) ([) (type_cast_expression (parenthesized_expression (() (binary_expression (identifier) (-) (integer_literal)) ())) (as) (primitive_type)) (]))) (;)) (})))) (expression_statement (compound_assignment_expr (identifier) (+=) (identifier)) (;)) (call_expression (field_expression (parenthesized_expression (() (binary_expression (identifier) (-) (identifier)) ())) (.) (field_identifier)) (arguments (() ()))) (}))) (}))))