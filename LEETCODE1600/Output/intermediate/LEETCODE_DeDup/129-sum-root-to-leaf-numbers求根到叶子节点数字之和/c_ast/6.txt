(translation_unit (function_definition (type_identifier) (identifier) (compound_statement ({) (labeled_statement (statement_identifier) (:) (ERROR (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (unary_expression (!) (identifier)) ())) (ERROR (return)) (compound_statement ({) (}))) (expression_statement (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (identifier)) (;)) (expression_statement (binary_expression (binary_expression (identifier) (<) (identifier)) (ERROR (*)) (>) (identifier)) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() (identifier) ()))) (;)) (while_statement (while) (parenthesized_expression (() (unary_expression (!) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ())))) ())) (compound_statement ({) (declaration (storage_class_specifier (auto)) (type_identifier) (init_declarator (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (field_expression (identifier) (->) (field_identifier)) (&&) (binary_expression (field_expression (identifier) (->) (field_identifier)) (!=) (identifier))) (&&) (binary_expression (field_expression (identifier) (->) (field_identifier)) (!=) (identifier))) ())) (compound_statement ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() (field_expression (identifier) (->) (field_identifier)) ()))) (;)) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (&&) (binary_expression (field_expression (identifier) (->) (field_identifier)) (!=) (identifier))) ())) (compound_statement ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() (field_expression (identifier) (->) (field_identifier)) ()))) (;)) (})) (else_clause (else) (compound_statement ({) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (unary_expression (!) (field_expression (identifier) (->) (field_identifier))) (&&) (unary_expression (!) (field_expression (identifier) (->) (field_identifier)))) ())) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (expression_statement (call_expression (identifier) (argument_list (() (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ()))) (,) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ()))) (,) (ERROR (call_expression (subscript_expression (identifier) ([) (pointer_expression (&) (identifier)) (])) (argument_list (() (binary_expression (identifier) (&) (identifier)) ())))) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (*) (number_literal))) (;)) (expression_statement (assignment_expression (identifier) (+=) (field_expression (identifier) (->) (field_identifier))) (;)) (})) ()))) (;)) (comment) (expression_statement (assignment_expression (identifier) (+=) (identifier)) (;)) (}))) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ()))) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (})))))) (}))) (return_statement (return) (identifier) (;)) (}))) (}))) (expression_statement (;)))