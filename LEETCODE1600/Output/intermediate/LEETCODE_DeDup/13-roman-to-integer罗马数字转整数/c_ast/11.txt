(translation_unit (function_definition (type_identifier) (identifier) (compound_statement ({) (labeled_statement (statement_identifier) (:) (ERROR (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (identifier)) ())))) (compound_statement ({) (declaration (primitive_type) (init_declarator (array_declarator (identifier) ([) (])) (=) (initializer_list ({) (char_literal (') (character) (')) (,) (char_literal (') (character) (')) (,) (char_literal (') (character) (')) (,) (char_literal (') (character) (')) (,) (char_literal (') (character) (')) (,) (char_literal (') (character) (')) (,) (char_literal (') (character) (')) (}))) (;)) (declaration (primitive_type) (init_declarator (array_declarator (identifier) ([) (])) (=) (initializer_list ({) (number_literal) (,) (number_literal) (,) (number_literal) (,) (number_literal) (,) (number_literal) (,) (number_literal) (,) (number_literal) (}))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (sizeof_expression (sizeof) (parenthesized_expression (() (identifier) ()))) (/) (sizeof_expression (sizeof) (parenthesized_expression (() (subscript_expression (identifier) ([) (number_literal) (])) ()))))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ()))) (-) (number_literal))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (!=) (subscript_expression (identifier) ([) (identifier) (]))) ())) (compound_statement ({) (continue_statement (continue) (;)) (}))) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) (==) (subscript_expression (identifier) ([) (identifier) (]))) ())) (compound_statement ({) (break_statement (break) (;)) (}))) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (<) (subscript_expression (identifier) ([) (identifier) (]))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (-=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (})))) (}))) (}))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ()))) (-) (number_literal)) (])) (==) (subscript_expression (identifier) ([) (identifier) (]))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (}))) (}))) (return_statement (return) (identifier) (;)) (}))) (}))) (expression_statement (;)))