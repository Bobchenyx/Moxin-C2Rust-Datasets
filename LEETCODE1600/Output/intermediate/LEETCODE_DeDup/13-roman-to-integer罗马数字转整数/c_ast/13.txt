(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (call_expression (identifier) (argument_list (() (identifier) ())))) (;) (update_expression (++) (identifier)) ()) (compound_statement ({) (switch_statement (switch) (parenthesized_expression (() (subscript_expression (identifier) ([) (identifier) (])) ())) (compound_statement ({) (case_statement (case) (char_literal (') (character) (')) (:) (expression_statement (update_expression (++) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (break_statement (break) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (binary_expression (number_literal) (-) (parenthesized_expression (() (binary_expression (identifier) (<<) (number_literal)) ())))) (;)) (})) (else_clause (else) (expression_statement (assignment_expression (identifier) (+=) (number_literal)) (;)))) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (break_statement (break) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (binary_expression (number_literal) (-) (parenthesized_expression (() (binary_expression (identifier) (<<) (number_literal)) ())))) (;)) (})) (else_clause (else) (expression_statement (assignment_expression (identifier) (+=) (number_literal)) (;)))) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (break_statement (break) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (binary_expression (number_literal) (-) (parenthesized_expression (() (binary_expression (identifier) (<<) (number_literal)) ())))) (;)) (})) (else_clause (else) (expression_statement (assignment_expression (identifier) (+=) (number_literal)) (;)))) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (break_statement (break) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (binary_expression (number_literal) (-) (parenthesized_expression (() (binary_expression (identifier) (<<) (number_literal)) ())))) (;)) (})) (else_clause (else) (expression_statement (assignment_expression (identifier) (+=) (number_literal)) (;)))) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (break_statement (break) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (binary_expression (number_literal) (-) (parenthesized_expression (() (binary_expression (identifier) (<<) (number_literal)) ())))) (;)) (})) (else_clause (else) (expression_statement (assignment_expression (identifier) (+=) (number_literal)) (;)))) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (break_statement (break) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (binary_expression (number_literal) (-) (parenthesized_expression (() (binary_expression (identifier) (<<) (number_literal)) ())))) (;)) (})) (else_clause (else) (expression_statement (assignment_expression (identifier) (+=) (number_literal)) (;)))) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (break_statement (break) (;))) (case_statement (default) (:) (expression_statement (call_expression (identifier) (argument_list (() (string_literal (") (string_content) (escape_sequence) (")) ()))) (;)) (return_statement (return) (number_literal) (;)) (break_statement (break) (;))) (}))) (}))) (return_statement (return) (identifier) (;)) (}))))