(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (switch_statement (switch) (parenthesized_expression (() (identifier) ())) (compound_statement ({) (case_statement (case) (char_literal (') (character) (')) (:) (return_statement (return) (number_literal) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (return_statement (return) (number_literal) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (return_statement (return) (number_literal) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (return_statement (return) (number_literal) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (return_statement (return) (number_literal) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (return_statement (return) (number_literal) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (return_statement (return) (number_literal) (;))) (case_statement (default) (:) (return_statement (return) (number_literal) (;))) (}))) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (identifier) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (identifier)) (;)) (declaration (primitive_type) (identifier) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (assignment_expression (identifier) (=) (pointer_expression (*) (update_expression (identifier) (++)))) ())) (!=) (char_literal (') (escape_sequence) ('))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (expression_statement (assignment_expression (identifier) (+=) (identifier)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>) (identifier)) ())) (expression_statement (assignment_expression (identifier) (-=) (binary_expression (identifier) (*) (number_literal))) (;))) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (}))) (return_statement (return) (identifier) (;)) (}))))