(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (type_identifier)) ())) (->) (primitive_type) (block ({) (function_item (fn) (identifier) (parameters (() (parameter (identifier) (:) (primitive_type)) ())) (->) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (block ({) (expression_statement (match_expression (match) (identifier) (match_block ({) (match_arm (match_pattern (char_literal)) (=>) (call_expression (identifier) (arguments (() (integer_literal) ()))) (,)) (match_arm (match_pattern (char_literal)) (=>) (call_expression (identifier) (arguments (() (integer_literal) ()))) (,)) (match_arm (match_pattern (char_literal)) (=>) (call_expression (identifier) (arguments (() (integer_literal) ()))) (,)) (match_arm (match_pattern (char_literal)) (=>) (call_expression (identifier) (arguments (() (integer_literal) ()))) (,)) (match_arm (match_pattern (char_literal)) (=>) (call_expression (identifier) (arguments (() (integer_literal) ()))) (,)) (match_arm (match_pattern (char_literal)) (=>) (call_expression (identifier) (arguments (() (integer_literal) ()))) (,)) (match_arm (match_pattern (char_literal)) (=>) (call_expression (identifier) (arguments (() (integer_literal) ()))) (,)) (match_arm (match_pattern (_)) (=>) (identifier) (,)) (})))) (}))) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (expression_statement (if_expression (if) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (block ({) (expression_statement (return_expression (return) (integer_literal)) (;)) (})))) (expression_statement (call_expression (field_expression (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() (integer_literal) ()))) ()))) (.) (field_identifier)) (arguments (() (closure_expression (closure_parameters (|) (tuple_pattern (() (identifier) (,) (identifier) ())) (|)) (block ({) (let_declaration (let) (identifier) (=) (call_expression (field_expression (call_expression (identifier) (arguments (() (identifier) ()))) (.) (field_identifier)) (arguments (() ()))) (;)) (let_declaration (let) (identifier) (=) (call_expression (field_expression (call_expression (identifier) (arguments (() (identifier) ()))) (.) (field_identifier)) (arguments (() ()))) (;)) (expression_statement (compound_assignment_expr (identifier) (+=) (parenthesized_expression (() (if_expression (if) (binary_expression (identifier) (<) (identifier)) (block ({) (binary_expression (unary_expression (-) (integer_literal)) (*) (identifier)) (})) (else_clause (else) (block ({) (identifier) (})))) ()))) (;)) (}))) ()))) (;)) (expression_statement (compound_assignment_expr (identifier) (+=) (call_expression (field_expression (call_expression (identifier) (arguments (() (call_expression (field_expression (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) ()))) (.) (field_identifier)) (arguments (() ())))) (;)) (identifier) (}))) (}))))