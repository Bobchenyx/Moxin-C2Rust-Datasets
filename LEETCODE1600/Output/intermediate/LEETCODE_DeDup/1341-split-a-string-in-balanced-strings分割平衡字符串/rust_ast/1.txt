(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (type_identifier)) ())) (->) (primitive_type) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (expression_statement (for_expression (for) (identifier) (in) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (block ({) (expression_statement (match_expression (match) (identifier) (match_block ({) (match_arm (match_pattern (char_literal)) (=>) (compound_assignment_expr (identifier) (+=) (integer_literal)) (,)) (match_arm (match_pattern (char_literal)) (=>) (compound_assignment_expr (identifier) (+=) (integer_literal)) (,)) (match_arm (match_pattern (_)) (=>) (return_expression (return) (unary_expression (-) (integer_literal))) (,)) (})))) (expression_statement (if_expression (if) (binary_expression (identifier) (==) (identifier)) (block ({) (expression_statement (compound_assignment_expr (identifier) (+=) (integer_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (integer_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (integer_literal)) (;)) (})))) (})))) (parenthesized_expression (() (identifier) ())) (}))) (}))))