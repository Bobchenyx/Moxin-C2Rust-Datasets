(translation_unit (function_definition (type_identifier) (identifier) (compound_statement ({) (labeled_statement (statement_identifier) (:) (ERROR (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (ERROR (<) (primitive_type) (>) (&)) (identifier)) ())))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ()))) ())) (return_statement (return) (number_literal) (;))) (expression_statement (comma_expression (binary_expression (identifier) (<) (identifier)) (,) (binary_expression (identifier) (>) (identifier))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ())))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (binary_expression (identifier) (*) (number_literal))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (>=) (identifier)) (&&) (binary_expression (subscript_expression (identifier) ([) (subscript_expression (identifier) ([) (binary_expression (identifier) (%) (identifier)) (])) (])) (==) (number_literal))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (subscript_expression (identifier) ([) (binary_expression (identifier) (%) (identifier)) (]))) (;)) (break_statement (break) (;)) (}))) (expression_statement (update_expression (subscript_expression (identifier) ([) (subscript_expression (identifier) ([) (binary_expression (identifier) (%) (identifier)) (])) (])) (++)) (;)) (}))) (return_statement (return) (identifier) (;)) (}))) (}))) (expression_statement (;)))