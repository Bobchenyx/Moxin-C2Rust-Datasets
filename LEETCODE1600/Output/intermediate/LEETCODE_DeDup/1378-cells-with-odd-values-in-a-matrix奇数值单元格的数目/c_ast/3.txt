(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (array_declarator (identifier) ([) (number_literal) (])) (=) (initializer_list ({) (number_literal) (}))) (;)) (declaration (primitive_type) (init_declarator (array_declarator (identifier) ([) (number_literal) (])) (=) (initializer_list ({) (number_literal) (}))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (,) (identifier) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (pointer_expression (&) (subscript_expression (subscript_expression (identifier) ([) (number_literal) (])) ([) (number_literal) (])))) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (identifier)) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (identifier)) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (number_literal) (])) (])) (^=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (number_literal) (])) (])) (^=) (number_literal)) (;)) (}))) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (while_statement (while) (parenthesized_expression (() (update_expression (identifier) (--)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (pointer_expression (*) (update_expression (identifier) (++)))) (;)) (expression_statement (assignment_expression (identifier) (+=) (pointer_expression (*) (update_expression (identifier) (++)))) (;)) (}))) (return_statement (return) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (*) (identifier)) (+) (binary_expression (identifier) (*) (identifier))) (-) (binary_expression (binary_expression (number_literal) (*) (identifier)) (*) (identifier))) ())) (;)) (}))))