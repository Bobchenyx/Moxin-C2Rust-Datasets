(translation_unit (function_definition (type_identifier) (identifier) (compound_statement ({) (ERROR (binary_expression (binary_expression (identifier) (ERROR (:) (type_identifier) (identifier) (() (identifier)) (<) (identifier)) (>) (pointer_expression (&) (identifier))) ())) (compound_statement ({) (declaration (type_identifier) (identifier) (;)) (if_statement (if) (parenthesized_expression (() (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ()))) ())) (return_statement (return) (identifier) (;))) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (call_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (.) (field_identifier)) (argument_list (() ()))) (-) (number_literal))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ())))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<) (number_literal)) ())) (break_statement (break) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (call_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) (argument_list (() ()))) (<=) (identifier)) ())) (expression_statement (assignment_expression (identifier) (=) (binary_expression (call_expression (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) (argument_list (() ()))) (-) (number_literal))) (;))) (declaration (primitive_type) (init_declarator (identifier) (=) (identifier)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (identifier)) (;)) (binary_expression (identifier) (>=) (number_literal)) (;) (update_expression (identifier) (--)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) ([) (identifier) (])) (!=) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (]))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (}))) (}))) (}))) (expression_statement (assignment_expression (identifier) (+=) (number_literal)) (;)) (return_statement (return) (conditional_expression (binary_expression (identifier) (==) (number_literal)) (?) (identifier) (:) (call_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (.) (field_identifier)) (argument_list (() (number_literal) (,) (identifier) ())))) (;)) (})) (}))) (expression_statement (;)))