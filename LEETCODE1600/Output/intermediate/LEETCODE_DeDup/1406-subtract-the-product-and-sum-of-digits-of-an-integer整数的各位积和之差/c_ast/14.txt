(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (,) (identifier) (,) (identifier) (,) (identifier) (,) (identifier) (,) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (,) (identifier) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (!=) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (/=) (number_literal)) (;)) (expression_statement (update_expression (++) (identifier)) (;)) (}))) (for_statement (for) (() (comma_expression (assignment_expression (identifier) (=) (number_literal)) (,) (comma_expression (assignment_expression (identifier) (=) (number_literal)) (,) (comma_expression (assignment_expression (identifier) (=) (number_literal)) (,) (assignment_expression (identifier) (=) (number_literal))))) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (/) (identifier))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (%) (number_literal))) (;)) (expression_statement (assignment_expression (identifier) (+=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (*=) (number_literal)) (;)) (}))) (for_statement (for) (() (comma_expression (assignment_expression (identifier) (=) (number_literal)) (,) (comma_expression (assignment_expression (identifier) (=) (number_literal)) (,) (comma_expression (assignment_expression (identifier) (=) (number_literal)) (,) (assignment_expression (identifier) (=) (number_literal))))) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (/) (identifier))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (%) (number_literal))) (;)) (expression_statement (assignment_expression (identifier) (*=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (*=) (number_literal)) (;)) (}))) (return_statement (return) (binary_expression (identifier) (-) (identifier)) (;)) (}))))