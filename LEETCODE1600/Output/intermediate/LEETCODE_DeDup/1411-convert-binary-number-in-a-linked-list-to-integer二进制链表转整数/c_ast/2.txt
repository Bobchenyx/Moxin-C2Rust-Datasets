(translation_unit (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier)) (;)) (declaration (primitive_type) (identifier) (,) (identifier) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (compound_statement ({) (return_statement (return) (number_literal) (;)) (}))) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (field_expression (identifier) (->) (field_identifier)) (==) (null (NULL))) (&&) (binary_expression (field_expression (identifier) (->) (field_identifier)) (==) (number_literal))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (return_statement (return) (identifier) (;)) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (field_expression (identifier) (->) (field_identifier)) (==) (null (NULL))) (&&) (binary_expression (field_expression (identifier) (->) (field_identifier)) (==) (number_literal))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (return_statement (return) (identifier) (;)) (}))))) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;) (binary_expression (identifier) (!=) (null (NULL))) (;) (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) ()) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (string_literal (") (string_content) (escape_sequence) (")) (,) (identifier) ()))) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (!=) (null (NULL))) ())) (compound_statement ({) (for_statement (for) (() (comma_expression (assignment_expression (identifier) (=) (identifier)) (,) (assignment_expression (identifier) (=) (number_literal))) (;) (binary_expression (identifier) (>) (number_literal)) (;) (update_expression (identifier) (--)) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (*=) (number_literal)) (;)) (}))) (expression_statement (assignment_expression (identifier) (/=) (number_literal)) (;)) (expression_statement (call_expression (identifier) (argument_list (() (string_literal (") (string_content) (escape_sequence) (")) (,) (field_expression (identifier) (->) (field_identifier)) (,) (identifier) ()))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (!=) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (binary_expression (field_expression (identifier) (->) (field_identifier)) (*) (identifier))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (string_literal (") (string_content) (escape_sequence) (")) (,) (identifier) ()))) (;)) (}))) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (expression_statement (update_expression (identifier) (--)) (;)) (}))) (return_statement (return) (identifier) (;)) (}))))