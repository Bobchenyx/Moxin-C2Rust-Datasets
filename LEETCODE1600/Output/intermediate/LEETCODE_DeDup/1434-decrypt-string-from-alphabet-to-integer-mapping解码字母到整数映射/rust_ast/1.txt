(source_file (line_comment (//)) (const_item (const) (identifier) (:) (primitive_type) (=) (type_cast_expression (char_literal) (as) (primitive_type)) (;)) (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (type_identifier)) ())) (->) (type_identifier) (block ({) (line_comment (//)) (line_comment (//)) (let_declaration (let) (mutable_specifier) (identifier) (=) (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (;)) (line_comment (//)) (let_declaration (let) (mutable_specifier) (identifier) (=) (macro_invocation (identifier) (!) (token_tree ([) (]))) (;)) (line_comment (//)) (line_comment (//)) (expression_statement (loop_expression (loop) (block ({) (expression_statement (match_expression (match) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (match_block ({) (match_arm (match_pattern (identifier)) (=>) (block ({) (expression_statement (break_expression (break)) (;)) (})) (,)) (match_arm (match_pattern (tuple_struct_pattern (identifier) (() (identifier) ()))) (=>) (block ({) (expression_statement (if_expression (if) (binary_expression (identifier) (==) (char_literal)) (block ({) (line_comment (//)) (line_comment (//)) (let_declaration (let) (identifier) (=) (type_cast_expression (call_expression (field_expression (call_expression (field_expression (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() (integer_literal) ()))) (.) (field_identifier)) (arguments (() ()))) (as) (primitive_type)) (;)) (let_declaration (let) (identifier) (=) (type_cast_expression (call_expression (field_expression (call_expression (field_expression (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() (integer_literal) ()))) (.) (field_identifier)) (arguments (() ()))) (as) (primitive_type)) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (binary_expression (binary_expression (identifier) (*) (integer_literal)) (+) (identifier)) ()))) (;)) (})) (else_clause (else) (block ({) (let_declaration (let) (identifier) (=) (type_cast_expression (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (integer_literal) ()))) (.) (field_identifier)) (arguments (() ()))) (as) (primitive_type)) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (identifier) ()))) (;)) (}))))) (}))) (})))) (})))) (line_comment (//)) (line_comment (//)) (call_expression (generic_function (field_expression (call_expression (field_expression (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() (closure_expression (closure_parameters (|) (reference_pattern (&) (identifier)) (|)) (type_cast_expression (type_cast_expression (parenthesized_expression (() (binary_expression (binary_expression (identifier) (-) (integer_literal)) (+) (identifier)) ())) (as) (primitive_type)) (as) (primitive_type))) ()))) (.) (field_identifier)) (::) (type_arguments (<) (type_identifier) (>))) (arguments (() ()))) (}))) (}))))