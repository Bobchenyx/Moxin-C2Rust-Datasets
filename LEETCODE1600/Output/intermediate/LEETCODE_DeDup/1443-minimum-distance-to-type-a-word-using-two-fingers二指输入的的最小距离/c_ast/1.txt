(translation_unit (preproc_def (#define) (identifier) (preproc_arg)) (preproc_def (#define) (identifier) (preproc_arg)) (type_definition (typedef) (struct_specifier (struct) (type_identifier) (field_declaration_list ({) (field_declaration (primitive_type) (field_identifier) (;)) (field_declaration (primitive_type) (field_identifier) (;)) (}))) (type_identifier) (;)) (function_definition (type_identifier) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (type_identifier) (identifier) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (-) (char_literal (') (character) (')))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (binary_expression (identifier) (/) (identifier))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (binary_expression (identifier) (%) (identifier))) (;)) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (type_identifier) (array_declarator (identifier) ([) (identifier) (]))) ()))) (compound_statement ({) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (string_literal (") (string_content) (")) (,) (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) (,) (field_expression (subscript_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) ()))) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (string_literal (") (escape_sequence) (")) ()))) (;)) (}))) (preproc_function_def (#define) (identifier) (preproc_params (() (identifier) (,) (identifier) ())) (preproc_arg)) (preproc_function_def (#define) (identifier) (preproc_params (() (identifier) (,) (identifier) ())) (preproc_arg)) (declaration (primitive_type) (array_declarator (array_declarator (array_declarator (identifier) ([) (identifier) (])) ([) (number_literal) (])) ([) (number_literal) (])) (;)) (preproc_function_def (#define) (identifier) (preproc_params (() (identifier) ())) (preproc_arg)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (identifier)) (,) (parameter_declaration (type_identifier) (identifier)) (,) (parameter_declaration (type_identifier) (array_declarator (identifier) ([) (]))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>=) (identifier)) ())) (compound_statement ({) (return_statement (return) (number_literal) (;)) (}))) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) ([) (identifier) (])) (!=) (number_literal)) ())) (compound_statement ({) (return_statement (return) (subscript_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) ([) (identifier) (])) (;)) (}))) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) (,) (identifier) ()))) (+) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) (,) (identifier) (,) (identifier) (,) (binary_expression (identifier) (+) (number_literal)) (,) (identifier) ()))))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) (,) (identifier) ()))) (+) (call_expression (identifier) (argument_list (() (identifier) (,) (subscript_expression (identifier) ([) (identifier) (])) (,) (identifier) (,) (binary_expression (identifier) (+) (number_literal)) (,) (identifier) ()))))) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) ([) (identifier) (])) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ())))) (;)) (return_statement (return) (subscript_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) ([) (identifier) (])) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (type_identifier) (init_declarator (array_declarator (identifier) ([) (identifier) (])) (=) (initializer_list ({) (number_literal) (}))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (identifier)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (!=) (char_literal (') (escape_sequence) ('))) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (identifier) (++)) (])) (=) (call_expression (identifier) (argument_list (() (pointer_expression (*) (identifier)) ())))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (call_expression (identifier) (argument_list (() (identifier) ())))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (number_literal)) (;) (update_expression (++) (identifier)) ()) (compound_statement ({) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (number_literal)) (;) (update_expression (++) (identifier)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) ([) (identifier) (])) (=) (number_literal)) (;)) (}))) (}))) (}))) (comment) (declaration (type_identifier) (init_declarator (identifier) (=) (subscript_expression (identifier) ([) (number_literal) (]))) (;)) (declaration (type_identifier) (init_declarator (identifier) (=) (initializer_list ({) (initializer_pair (field_designator (.) (field_identifier)) (=) (number_literal)) (,) (initializer_pair (field_designator (.) (field_identifier)) (=) (number_literal)) (}))) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (identifier)) (;)) (comment) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (subscript_expression (identifier) ([) (number_literal) (]))) (;)) (expression_statement (assignment_expression (identifier) (=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) (,) (number_literal) (,) (identifier) ())))) (;)) (comment) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ())))) (;)) (}))) (return_statement (return) (identifier) (;)) (}))))