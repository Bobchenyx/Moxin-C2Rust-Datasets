(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (cast_expression (() (type_descriptor (primitive_type)) ()) (call_expression (identifier) (argument_list (() (cast_expression (() (type_descriptor (primitive_type)) ()) (identifier)) ()))))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (identifier)) (;)) (do_statement (do) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (/) (call_expression (identifier) (argument_list (() (number_literal) (,) (identifier) ()))))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (break_statement (break) (;)) (}))) (expression_statement (assignment_expression (identifier) (+=) (binary_expression (identifier) (*) (call_expression (identifier) (argument_list (() (number_literal) (,) (identifier) ()))))) (;)) (expression_statement (assignment_expression (identifier) (-=) (binary_expression (identifier) (*) (call_expression (identifier) (argument_list (() (number_literal) (,) (identifier) ()))))) (;)) (expression_statement (update_expression (identifier) (--)) (;)) (})) (while) (parenthesized_expression (() (binary_expression (identifier) (!=) (number_literal)) ())) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (return_statement (return) (binary_expression (binary_expression (identifier) (+) (binary_expression (number_literal) (*) (call_expression (identifier) (argument_list (() (number_literal) (,) (identifier) ()))))) (+) (binary_expression (identifier) (%) (cast_expression (() (type_descriptor (primitive_type)) ()) (call_expression (identifier) (argument_list (() (number_literal) (,) (identifier) ())))))) (;)) (else_clause (else) (return_statement (return) (identifier) (;)))) (}))))