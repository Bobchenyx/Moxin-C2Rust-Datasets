(translation_unit (function_definition (type_identifier) (identifier) (compound_statement ({) (labeled_statement (statement_identifier) (:) (declaration (struct_specifier (struct) (type_identifier) (field_declaration_list ({) (field_declaration (type_identifier) (ERROR (field_identifier) ({)) (field_identifier) (,) (field_identifier) (ERROR (})) (;)) (field_declaration (type_identifier) (pointer_declarator (*) (field_identifier)) (ERROR (=) (&) (identifier)) (;)) (field_declaration (type_identifier) (pointer_declarator (*) (pointer_declarator (*) (field_identifier))) (ERROR (=) (&) (identifier)) (;)) (field_declaration (type_identifier) (pointer_declarator (*) (pointer_declarator (*) (field_identifier))) (ERROR (=) (&) (identifier)) (;)) (field_declaration (primitive_type) (function_declarator (function_declarator (field_identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (ERROR ({) (if)) (parameter_list (() (parameter_declaration (type_identifier) (ERROR (->)) (function_declarator (identifier) (ERROR (<)) (parameter_list (() (ERROR (*)) (parameter_declaration (type_identifier)) ())) (ERROR (->)) (identifier))) ()))) (ERROR (identifier) (=) (identifier) (() (&) (identifier)) (,) (field_identifier) (ERROR ())) (;)) (field_declaration (type_identifier) (ERROR (field_identifier) (=)) (function_declarator (field_identifier) (parameter_list (() (parameter_declaration (type_identifier)) (,) (parameter_declaration (type_identifier)) ()))) (;)) (}))) (ERROR (identifier) (function_declarator (identifier) (parameter_list (() ()))) ({)) (init_declarator (pointer_declarator (*) (identifier)) (=) (null (nullptr))) (;))) (}))) (labeled_statement (statement_identifier) (:) (ERROR (type_identifier) (pointer_declarator (*) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ())))))) (compound_statement ({) (while_statement (while) (parenthesized_expression (() (binary_expression (field_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (->) (field_identifier)) (<) (field_expression (identifier) (->) (field_identifier))) ())) (expression_statement (assignment_expression (identifier) (=) (pointer_expression (&) (field_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (->) (field_identifier)))) (;))) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (pointer_expression (*) (identifier))) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (identifier)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (==) (pointer_expression (&) (identifier))) ())) (expression_statement (assignment_expression (identifier) (=) (pointer_expression (&) (field_expression (identifier) (->) (field_identifier)))) (;))) (return_statement (return) (identifier) (;)) (}))) (ERROR (})) (expression_statement (;)) (function_definition (type_identifier) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (declaration (type_identifier) (identifier) (;)) (while_statement (while) (parenthesized_expression (() (identifier) ())) (compound_statement ({) (declaration (storage_class_specifier (auto)) (type_identifier) (ERROR (=)) (identifier) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() (identifier) ()))) (;)) (}))) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ()))) (;)) (return_statement (return) (field_expression (identifier) (.) (field_identifier)) (;)) (}))) (ERROR (})) (expression_statement (;)))