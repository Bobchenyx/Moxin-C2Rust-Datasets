(translation_unit (comment) (comment) (function_definition (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (identifier)) (=) (null (NULL))) (;)) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (identifier)) (=) (null (NULL))) (;)) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (identifier)) (=) (null (NULL))) (;)) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (identifier)) (=) (null (NULL))) (;)) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (identifier) (=) (initializer_list ({) (number_literal) (}))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (number_literal)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (null (NULL))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (null (NULL)) (==) (identifier)) ())) (||) (parenthesized_expression (() (binary_expression (null (NULL)) (==) (field_expression (identifier) (->) (field_identifier))) ()))) ())) (compound_statement ({) (return_statement (return) (identifier) (;)) (}))) (comment) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (comment) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (identifier)) (;)) (comment) (comment) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (assignment_expression (identifier) (<<=) (number_literal)) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (pointer_expression (&) (identifier))) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (.) (field_identifier))) (;)) (comment) (while_statement (while) (parenthesized_expression (() (binary_expression (null (NULL)) (!=) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ())))) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ())))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ())))) (;)) (comment) (while_statement (while) (parenthesized_expression (() (binary_expression (null (NULL)) (!=) (field_expression (identifier) (->) (field_identifier))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (}))) (}))) (}))) (return_statement (return) (field_expression (identifier) (.) (field_identifier)) (;)) (}))) (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (identifier)) (=) (null (NULL))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (null (NULL)) (==) (identifier)) ())) (compound_statement ({) (return_statement (return) (identifier) (;)) (}))) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (null (NULL)) (!=) (identifier)) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (}))) (return_statement (return) (identifier) (;)) (}))) (comment) (function_definition (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ())))) (compound_statement ({) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (identifier)) (=) (null (NULL))) (;)) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (identifier)) (=) (null (NULL))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (null (NULL)) (==) (identifier)) ())) (compound_statement ({) (return_statement (return) (identifier) (;)) (}))) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (&&) (parenthesized_expression (() (binary_expression (null (NULL)) (!=) (field_expression (identifier) (->) (field_identifier))) ()))) (;) (update_expression (identifier) (++)) ()) (comment) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (}))) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (null (NULL))) (;)) (return_statement (return) (identifier) (;)) (}))) (comment) (function_definition (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (identifier)) (=) (null (NULL))) (;)) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (identifier)) (=) (null (NULL))) (;)) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (identifier)) (=) (null (NULL))) (;)) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (identifier) (=) (initializer_list ({) (number_literal) (}))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (null (NULL)) (==) (identifier)) ())) (compound_statement ({) (return_statement (return) (identifier) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (null (NULL)) (==) (identifier)) ())) (compound_statement ({) (return_statement (return) (identifier) (;)) (}))) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (number_literal)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (null (NULL))) (;)) (expression_statement (assignment_expression (identifier) (=) (pointer_expression (&) (identifier))) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (null (NULL)) (!=) (identifier)) ())) (&&) (parenthesized_expression (() (binary_expression (null (NULL)) (!=) (identifier)) ()))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (>) (field_expression (identifier) (->) (field_identifier))) ())) (compound_statement ({) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (})))) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (}))) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (conditional_expression (parenthesized_expression (() (binary_expression (null (NULL)) (==) (identifier)) ())) (?) (identifier) (:) (identifier))) (;)) (return_statement (return) (field_expression (identifier) (.) (field_identifier)) (;)) (}))) (comment) (function_definition (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (null (NULL)) (==) (identifier)) ())) (||) (parenthesized_expression (() (binary_expression (null (NULL)) (==) (field_expression (identifier) (->) (field_identifier))) ()))) ())) (compound_statement ({) (return_statement (return) (identifier) (;)) (}))) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (comment) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (struct_specifier (struct) (type_identifier)) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (sizeof_expression (sizeof) (() (type_descriptor (struct_specifier (struct) (type_identifier))) ())) ()))))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (identifier)) (;)) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (identifier)) (=) (null (NULL))) (;)) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (identifier)) (=) (null (NULL))) (;)) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (identifier)) (=) (null (NULL))) (;)) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (identifier)) (=) (null (NULL))) (;)) (comment) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (assignment_expression (identifier) (<<=) (number_literal)) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (comment) (while_statement (while) (parenthesized_expression (() (binary_expression (null (NULL)) (!=) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ())))) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ())))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ())))) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (null (NULL)) (!=) (field_expression (identifier) (->) (field_identifier))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (}))) (}))) (}))) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (expression_statement (assignment_expression (identifier) (=) (null (NULL))) (;)) (return_statement (return) (identifier) (;)) (}))) (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (null (NULL)) (==) (identifier)) ())) (compound_statement ({) (return_statement (return) (number_literal) (;)) (}))) (while_statement (while) (parenthesized_expression (() (binary_expression (null (NULL)) (!=) (identifier)) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (}))) (return_statement (return) (identifier) (;)) (}))) (comment) (function_definition (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ())))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (null (NULL)) (==) (identifier)) ())) (compound_statement ({) (return_statement (return) (identifier) (;)) (}))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (&&) (parenthesized_expression (() (binary_expression (null (NULL)) (!=) (field_expression (identifier) (->) (field_identifier))) ()))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (}))) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (identifier)) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (null (NULL))) (;)) (return_statement (return) (identifier) (;)) (}))) (comment) (function_definition (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (null (NULL)) (==) (identifier)) ())) (compound_statement ({) (return_statement (return) (identifier) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (null (NULL)) (==) (identifier)) ())) (compound_statement ({) (return_statement (return) (identifier) (;)) (}))) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (struct_specifier (struct) (type_identifier)) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (sizeof_expression (sizeof) (() (type_descriptor (struct_specifier (struct) (type_identifier))) ())) ()))))) (;)) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (identifier)) (=) (null (NULL))) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (null (NULL)) (!=) (identifier)) ())) (&&) (parenthesized_expression (() (binary_expression (null (NULL)) (!=) (identifier)) ()))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (>) (field_expression (identifier) (->) (field_identifier))) ())) (compound_statement ({) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (})))) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (}))) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (parenthesized_expression (() (conditional_expression (binary_expression (null (NULL)) (==) (identifier)) (?) (identifier) (:) (identifier)) ()))) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (expression_statement (assignment_expression (identifier) (=) (null (NULL))) (;)) (return_statement (return) (identifier) (;)) (}))) (comment) (function_definition (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (identifier)) (=) (null (NULL))) (;)) (declaration (struct_specifier (struct) (type_identifier)) (init_declarator (pointer_declarator (*) (identifier)) (=) (null (NULL))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (null (NULL)) (==) (identifier)) ())) (compound_statement ({) (return_statement (return) (identifier) (;)) (}))) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (comment) (while_statement (while) (parenthesized_expression (() (binary_expression (null (NULL)) (!=) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (null (NULL)) (!=) (identifier)) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (field_expression (identifier) (->) (field_identifier)) ())) (<) (parenthesized_expression (() (field_expression (identifier) (->) (field_identifier)) ()))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (identifier)) (;)) (}))) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (}))) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (}))) (return_statement (return) (identifier) (;)) (comment) (}))))