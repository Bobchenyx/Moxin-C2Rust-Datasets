(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>)))) ())) (->) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (identifier) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (array_expression ([) (integer_literal) (;) (integer_literal) (])) (;)) (expression_statement (for_expression (for) (identifier) (in) (reference_expression (&) (identifier)) (block ({) (expression_statement (compound_assignment_expr (index_expression (identifier) ([) (type_cast_expression (unary_expression (*) (identifier)) (as) (primitive_type)) (])) (+=) (integer_literal)) (;)) (})))) (expression_statement (for_expression (for) (identifier) (in) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (block ({) (let_declaration (let) (identifier) (=) (type_cast_expression (unary_expression (*) (identifier)) (as) (primitive_type)) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (expression_statement (for_expression (for) (identifier) (in) (reference_expression (&) (index_expression (identifier) ([) (range_expression (integer_literal) (..) (identifier)) (]))) (block ({) (expression_statement (compound_assignment_expr (identifier) (+=) (identifier)) (;)) (})))) (expression_statement (assignment_expression (unary_expression (*) (identifier)) (=) (identifier)) (;)) (})))) (identifier) (}))) (}))))