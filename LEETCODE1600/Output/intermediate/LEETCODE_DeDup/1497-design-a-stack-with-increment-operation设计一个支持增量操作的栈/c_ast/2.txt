(translation_unit (function_definition (type_identifier) (identifier) (compound_statement ({) (labeled_statement (statement_identifier) (:) (declaration (macro_type_specifier (identifier) (() (ERROR (primitive_type)) (type_descriptor (type_identifier)) ())) (ERROR ({)) (init_declarator (identifier) (=) (identifier)) (;))) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (ERROR (identifier)) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (}))) (expression_statement (unary_expression (~) (call_expression (identifier) (argument_list (() ())))) (;)) (compound_statement ({) (expression_statement (subscript_expression (identifier) ([) (ERROR (])) (identifier) (])) (;)) (})) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (number_literal))) (;)) (}))) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (compound_statement ({) (return_statement (return) (number_literal) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (return_statement (return) (subscript_expression (identifier) ([) (identifier) (])) (;)) (})))) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (conditional_expression (binary_expression (identifier) (<) (identifier)) (?) (identifier) (:) (identifier))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (++) (identifier)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (+) (identifier))) (;)) (}))) (}))) (labeled_statement (statement_identifier) (:) (declaration (primitive_type) (identifier) (;))) (declaration (primitive_type) (identifier) (;)) (declaration (primitive_type) (pointer_declarator (*) (identifier)) (;)) (expression_statement (call_expression (identifier) (argument_list (() ()))) (;)) (compound_statement ({) (})) (ERROR (})) (expression_statement (;)) (comment))