(translation_unit (function_definition (type_identifier) (identifier) (compound_statement ({) (labeled_statement (statement_identifier) (:) (ERROR (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (ERROR (<) (primitive_type) (>)) (identifier)) (,) (parameter_declaration (type_identifier) (ERROR (<) (identifier) (<) (primitive_type) (>>) (&)) (identifier)) ())))) (compound_statement ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() (identifier) ()))) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (ERROR (<) (primitive_type) (>) (&)) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (type_identifier) (ERROR (<) (identifier) (<) (primitive_type) (>>) (&)) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (identifier)) (,) (init_declarator (identifier) (=) (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ()))) (-) (number_literal))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (identifier)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (identifier)) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (continue_statement (continue) (;)) (}))) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (-) (identifier))) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (>) (identifier)) (&&) (binary_expression (identifier) (>) (identifier))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (--)) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (identifier)) (&&) (binary_expression (identifier) (<) (identifier))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (expression_statement (call_expression (identifier) (argument_list (() (compound_statement ({) (expression_statement (comma_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (,) (comma_expression (subscript_expression (identifier) ([) (identifier) (])) (,) (subscript_expression (identifier) ([) (identifier) (])))) (;)) (})) (,) (identifier) ()))) (;)) (expression_statement (update_expression (identifier) (--)) (;)) (}))) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (}))) (expression_statement (binary_expression (binary_expression (identifier) (<) (identifier)) (<) (binary_expression (identifier) (>>) (call_expression (identifier) (argument_list (() (binary_expression (binary_expression (identifier) (<) (identifier)) (>) (pointer_expression (&) (identifier))) ()))))) (;)) (compound_statement ({) (expression_statement (binary_expression (binary_expression (identifier) (<) (identifier)) (<) (binary_expression (identifier) (>>) (identifier))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ())))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ()))) (,) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ()))) ()))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (identifier)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (binary_expression (identifier) (-) (number_literal))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (!=) (identifier)) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (identifier) (+) (number_literal)) (,) (binary_expression (number_literal) (-) (subscript_expression (identifier) ([) (identifier) (]))) (,) (identifier) ()))) (;)) (expression_statement (assignment_expression (identifier) (=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (}))) (}))) (return_statement (return) (identifier) (;)) (})) (}))) (expression_statement (;)))