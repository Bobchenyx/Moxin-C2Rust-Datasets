(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (>)))) ())) (->) (primitive_type) (block ({) (expression_statement (if_expression (if) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (block ({) (expression_statement (return_expression (return) (boolean_literal (false))) (;)) (})))) (expression_statement (if_expression (if) (binary_expression (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (==) (integer_literal)) (&&) (binary_expression (call_expression (field_expression (index_expression (identifier) ([) (integer_literal) (])) (.) (field_identifier)) (arguments (() ()))) (==) (integer_literal))) (block ({) (expression_statement (return_expression (return) (boolean_literal (true))) (;)) (})))) (let_declaration (let) (identifier) (=) (closure_expression (closure_parameters (|) (parameter (mutable_specifier) (identifier) (:) (tuple_type (() (primitive_type) (,) (primitive_type) ()))) (|)) (block ({) (expression_statement (if_expression (if) (binary_expression (binary_expression (field_expression (identifier) (.) (integer_literal)) (>=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ())))) (||) (binary_expression (field_expression (identifier) (.) (integer_literal)) (>=) (call_expression (field_expression (index_expression (identifier) ([) (integer_literal) (])) (.) (field_identifier)) (arguments (() ()))))) (block ({) (expression_statement (return_expression (return) (boolean_literal (false))) (;)) (})))) (let_declaration (let) (mutable_specifier) (identifier) (=) (macro_invocation (identifier) (!) (token_tree ([) (identifier) (!) (token_tree ([) (boolean_literal (false)) (;) (identifier) (token_tree ([) (integer_literal) (])) (.) (identifier) (token_tree (() ())) (])) (;) (identifier) (.) (identifier) (token_tree (() ())) (]))) (;)) (expression_statement (assignment_expression (index_expression (index_expression (identifier) ([) (integer_literal) (])) ([) (integer_literal) (])) (=) (boolean_literal (true))) (;)) (macro_definition (macro_rules!) (identifier) ({) (macro_rule (token_tree_pattern (() (identifier) ())) (=>) (token_tree ({) (identifier) (.) (integer_literal) (>=) (integer_literal) (&&) (!) (identifier) (token_tree ([) (identifier) (.) (integer_literal) (-) (integer_literal) (])) (token_tree ([) (identifier) (.) (integer_literal) (])) (&&) (token_tree ([) (integer_literal) (,) (integer_literal) (,) (integer_literal) (])) (.) (identifier) (token_tree (() (&) (identifier) (token_tree ([) (identifier) (.) (integer_literal) (-) (integer_literal) (])) (token_tree ([) (identifier) (.) (integer_literal) (])) ())) (}))) (;) (macro_rule (token_tree_pattern (() (identifier) ())) (=>) (token_tree ({) (identifier) (.) (integer_literal) (+) (integer_literal) (<) (identifier) (.) (identifier) (token_tree (() ())) (&&) (!) (identifier) (token_tree ([) (identifier) (.) (integer_literal) (+) (integer_literal) (])) (token_tree ([) (identifier) (.) (integer_literal) (])) (&&) (token_tree ([) (integer_literal) (,) (integer_literal) (,) (integer_literal) (])) (.) (identifier) (token_tree (() (&) (identifier) (token_tree ([) (identifier) (.) (integer_literal) (+) (integer_literal) (])) (token_tree ([) (identifier) (.) (integer_literal) (])) ())) (}))) (;) (macro_rule (token_tree_pattern (() (identifier) ())) (=>) (token_tree ({) (identifier) (.) (integer_literal) (>=) (integer_literal) (&&) (!) (identifier) (token_tree ([) (identifier) (.) (integer_literal) (])) (token_tree ([) (identifier) (.) (integer_literal) (-) (integer_literal) (])) (&&) (token_tree ([) (integer_literal) (,) (integer_literal) (,) (integer_literal) (])) (.) (identifier) (token_tree (() (&) (identifier) (token_tree ([) (identifier) (.) (integer_literal) (])) (token_tree ([) (identifier) (.) (integer_literal) (-) (integer_literal) (])) ())) (}))) (;) (macro_rule (token_tree_pattern (() (identifier) ())) (=>) (token_tree ({) (identifier) (.) (integer_literal) (+) (integer_literal) (<) (identifier) (token_tree ([) (integer_literal) (])) (.) (identifier) (token_tree (() ())) (&&) (!) (identifier) (token_tree ([) (identifier) (.) (integer_literal) (])) (token_tree ([) (identifier) (.) (integer_literal) (+) (integer_literal) (])) (&&) (token_tree ([) (integer_literal) (,) (integer_literal) (,) (integer_literal) (])) (.) (identifier) (token_tree (() (&) (identifier) (token_tree ([) (identifier) (.) (integer_literal) (])) (token_tree ([) (identifier) (.) (integer_literal) (+) (integer_literal) (])) ())) (}))) (;) (})) (expression_statement (while_expression (while) (unary_expression (!) (index_expression (index_expression (identifier) ([) (field_expression (identifier) (.) (integer_literal)) (])) ([) (field_expression (identifier) (.) (integer_literal)) (]))) (block ({) (expression_statement (assignment_expression (index_expression (index_expression (identifier) ([) (field_expression (identifier) (.) (integer_literal)) (])) ([) (field_expression (identifier) (.) (integer_literal)) (])) (=) (boolean_literal (true))) (;)) (expression_statement (assignment_expression (identifier) (=) (match_expression (match) (index_expression (index_expression (identifier) ([) (field_expression (identifier) (.) (integer_literal)) (])) ([) (field_expression (identifier) (.) (integer_literal)) (])) (match_block ({) (match_arm (match_pattern (or_pattern (or_pattern (integer_literal) (|) (integer_literal)) (|) (integer_literal)) (if) (macro_invocation (identifier) (!) (token_tree (() (identifier) ())))) (=>) (tuple_expression (() (field_expression (identifier) (.) (integer_literal)) (,) (binary_expression (field_expression (identifier) (.) (integer_literal)) (-) (integer_literal)) ())) (,)) (match_arm (match_pattern (or_pattern (or_pattern (integer_literal) (|) (integer_literal)) (|) (integer_literal)) (if) (macro_invocation (identifier) (!) (token_tree (() (identifier) ())))) (=>) (tuple_expression (() (field_expression (identifier) (.) (integer_literal)) (,) (binary_expression (field_expression (identifier) (.) (integer_literal)) (+) (integer_literal)) ())) (,)) (match_arm (match_pattern (or_pattern (or_pattern (integer_literal) (|) (integer_literal)) (|) (integer_literal)) (if) (macro_invocation (identifier) (!) (token_tree (() (identifier) ())))) (=>) (tuple_expression (() (binary_expression (field_expression (identifier) (.) (integer_literal)) (-) (integer_literal)) (,) (field_expression (identifier) (.) (integer_literal)) ())) (,)) (match_arm (match_pattern (or_pattern (or_pattern (integer_literal) (|) (integer_literal)) (|) (integer_literal)) (if) (macro_invocation (identifier) (!) (token_tree (() (identifier) ())))) (=>) (tuple_expression (() (binary_expression (field_expression (identifier) (.) (integer_literal)) (+) (integer_literal)) (,) (field_expression (identifier) (.) (integer_literal)) ())) (,)) (match_arm (match_pattern (_)) (=>) (identifier) (,)) (})))) (;)) (expression_statement (if_expression (if) (binary_expression (tuple_expression (() (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (-) (integer_literal)) (,) (binary_expression (call_expression (field_expression (index_expression (identifier) ([) (integer_literal) (])) (.) (field_identifier)) (arguments (() ()))) (-) (integer_literal)) ())) (==) (identifier)) (block ({) (expression_statement (return_expression (return) (boolean_literal (true))) (;)) (})))) (})))) (boolean_literal (false)) (}))) (;)) (expression_statement (match_expression (match) (index_expression (index_expression (identifier) ([) (integer_literal) (])) ([) (integer_literal) (])) (match_block ({) (match_arm (match_pattern (or_pattern (integer_literal) (|) (integer_literal))) (=>) (call_expression (identifier) (arguments (() (tuple_expression (() (integer_literal) (,) (integer_literal) ())) ()))) (,)) (match_arm (match_pattern (or_pattern (integer_literal) (|) (integer_literal))) (=>) (call_expression (identifier) (arguments (() (tuple_expression (() (integer_literal) (,) (integer_literal) ())) ()))) (,)) (match_arm (match_pattern (integer_literal)) (=>) (binary_expression (call_expression (identifier) (arguments (() (tuple_expression (() (integer_literal) (,) (integer_literal) ())) ()))) (||) (call_expression (identifier) (arguments (() (tuple_expression (() (integer_literal) (,) (integer_literal) ())) ())))) (,)) (match_arm (match_pattern (_)) (=>) (boolean_literal (false)) (,)) (})))) (}))) (}))))