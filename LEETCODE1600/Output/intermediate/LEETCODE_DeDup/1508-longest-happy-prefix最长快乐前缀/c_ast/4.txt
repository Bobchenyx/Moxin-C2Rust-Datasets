(translation_unit (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (-) (number_literal))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (call_expression (identifier) (argument_list (() (number_literal) ())))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (-) (number_literal))) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (>=) (number_literal)) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (!=) (subscript_expression (identifier) ([) (identifier) (]))) ())) (expression_statement (update_expression (identifier) (--)) (;)) (else_clause (else) (compound_statement ({) (comment) (comment) (comment) (comment) (comment) (comment) (if_statement (if) (parenthesized_expression (() (unary_expression (!) (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (binary_expression (identifier) (+) (identifier)) (-) (identifier)) (,) (binary_expression (identifier) (+) (number_literal)) ())))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (binary_expression (identifier) (+) (number_literal)) ()))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) (=) (char_literal (') (escape_sequence) ('))) (;)) (break_statement (break) (;)) (})) (else_clause (else) (expression_statement (update_expression (identifier) (--)) (;)))) (})))) (}))) (if_statement (if) (parenthesized_expression (() (identifier) ())) (return_statement (return) (identifier) (;)) (else_clause (else) (return_statement (return) (string_literal (") (")) (;)))) (}))))