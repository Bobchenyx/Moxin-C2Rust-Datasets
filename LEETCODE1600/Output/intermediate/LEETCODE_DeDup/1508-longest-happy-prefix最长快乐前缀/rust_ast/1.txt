(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (type_identifier)) ())) (->) (type_identifier) (block ({) (let_declaration (let) (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (;)) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ())))) (block ({) (expression_statement (if_expression (if) (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (range_expression (integer_literal) (..) (parenthesized_expression (() (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (-) (identifier)) ()))) ()))) (==) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (range_expression (identifier) (..) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ())))) ())))) (block ({) (expression_statement (return_expression (return) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (range_expression (identifier) (..) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ())))) ()))) (.) (field_identifier)) (arguments (() ()))) ())))) (;)) (})))) (})))) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (string_literal (") (")) ()))) (}))) (}))))