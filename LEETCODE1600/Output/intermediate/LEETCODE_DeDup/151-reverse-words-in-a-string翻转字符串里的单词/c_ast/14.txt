(translation_unit (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (return_statement (return) (string_literal (") (")) (;))) (comment) (while_statement (while) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (char_literal (') (character) ('))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (==) (number_literal)) ())) (return_statement (return) (string_literal (") (")) (;))) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (binary_expression (binary_expression (identifier) (+) (call_expression (identifier) (argument_list (() (identifier) ())))) (-) (number_literal))) (;)) (comment) (while_statement (while) (parenthesized_expression (() (binary_expression (binary_expression (pointer_expression (*) (identifier)) (==) (char_literal (') (character) ('))) (&&) (binary_expression (identifier) (<=) (identifier))) ())) (expression_statement (update_expression (identifier) (--)) (;))) (expression_statement (assignment_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ()))) (=) (char_literal (') (escape_sequence) ('))) (;)) (comment) (comment) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (parenthesized_expression (() (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (+) (number_literal)) ()))) ()))))) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (declaration (primitive_type) (pointer_declarator (*) (identifier)) (;)) (comment) (for_statement (for) (() (assignment_expression (identifier) (=) (identifier)) (;) (binary_expression (identifier) (>=) (identifier)) (;) (update_expression (identifier) (--)) ()) (compound_statement ({) (while_statement (while) (parenthesized_expression (() (binary_expression (binary_expression (pointer_expression (*) (identifier)) (!=) (char_literal (') (character) ('))) (&&) (binary_expression (identifier) (>) (identifier))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (update_expression (identifier) (--)) (;)) (}))) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (identifier)) ())) (compound_statement ({) (comment) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (identifier) (+) (identifier)) (,) (identifier) (,) (binary_expression (identifier) (+) (number_literal)) ()))) (;)) (comment) (expression_statement (assignment_expression (identifier) (+=) (identifier)) (;)) (comment) (expression_statement (assignment_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (+) (identifier)) (+) (number_literal)) ()))) (=) (char_literal (') (escape_sequence) ('))) (;)) (return_statement (return) (identifier) (;)) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>) (number_literal)) ())) (compound_statement ({) (comment) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (identifier) (+) (identifier)) (,) (binary_expression (identifier) (+) (number_literal)) (,) (identifier) ()))) (;)) (comment) (expression_statement (assignment_expression (identifier) (+=) (identifier)) (;)) (comment) (expression_statement (assignment_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (=) (char_literal (') (character) ('))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (}))))) (}))) (return_statement (return) (identifier) (;)) (}))))