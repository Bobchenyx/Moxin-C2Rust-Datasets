(translation_unit (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (null (NULL))) (||) (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (==) (number_literal))) ())) (compound_statement ({) (return_statement (return) (string_literal (") (")) (;)) (}))) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (identifier))) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ())) (*) (number_literal)) ()))))) (;)) (declaration (primitive_type) (identifier) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (number_literal)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (number_literal)) ()))))) (;)) (}))) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (string_literal (") (string_content) (")) ())))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (while_statement (while) (parenthesized_expression (() (identifier) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (update_expression (identifier) (++)) (])) (,) (identifier) ()))) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (null (NULL)) (,) (string_literal (") (string_content) (")) ())))) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<=) (number_literal)) ())) (compound_statement ({) (return_statement (return) (string_literal (") (")) (;)) (}))) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (string_literal (") (string_content) (escape_sequence) (")) (,) (subscript_expression (identifier) ([) (identifier) (])) ()))) (;)) (}))) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) ()))))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) ()))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (-) (number_literal)) (<) (number_literal)) ())) (compound_statement ({) (return_statement (return) (identifier) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (string_literal (") (string_content) (")) ()))) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;) (binary_expression (identifier) (>=) (number_literal)) (;) (update_expression (identifier) (--)) ()) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (subscript_expression (identifier) ([) (identifier) (])) ()))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (binary_expression (identifier) (+) (identifier)) (-) (number_literal)) (])) (=) (char_literal (') (escape_sequence) ('))) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (string_literal (") (string_content) (")) ()))) (;)) (})))) (}))) (expression_statement (call_expression (identifier) (argument_list (() (string_literal (") (string_content) (escape_sequence) (")) (,) (identifier) ()))) (;)) (return_statement (return) (identifier) (;)) (}))))