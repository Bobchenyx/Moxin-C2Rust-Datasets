(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (char_literal (') (escape_sequence) ('))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (char_literal (') (escape_sequence) ('))) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (compound_statement ({) (while_statement (while) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (identifier)) (||) (binary_expression (identifier) (==) (char_literal (') (escape_sequence) (')))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (while_statement (while) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (&&) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (identifier)) (||) (binary_expression (identifier) (==) (char_literal (') (escape_sequence) (')))) ()))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (while_statement (while) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (&&) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (identifier)) (||) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (identifier))) ()))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (-) (identifier))) (;)) (expression_statement (assignment_expression (identifier) (=) (conditional_expression (binary_expression (identifier) (>) (identifier)) (?) (identifier) (:) (identifier))) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (]))) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (identifier) (!=) (char_literal (') (escape_sequence) ('))) ())) (&&) (parenthesized_expression (() (binary_expression (identifier) (==) (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (]))) ()))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (--)) (;)) (}))) (expression_statement (assignment_expression (identifier) (=) (char_literal (') (escape_sequence) ('))) (;)) (comment) (}))) (return_statement (return) (identifier) (;)) (}))))