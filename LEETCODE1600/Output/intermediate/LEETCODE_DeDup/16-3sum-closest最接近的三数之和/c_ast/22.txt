(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (return_statement (return) (binary_expression (pointer_expression (*) (identifier)) (-) (pointer_expression (*) (identifier))) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (identifier) (;)) (comment) (declaration (primitive_type) (identifier) (;)) (comment) (declaration (primitive_type) (identifier) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (,) (identifier) (,) (identifier) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (,) (identifier) ()))) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (<) (binary_expression (identifier) (-) (number_literal))) ())) (compound_statement ({) (comment) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (number_literal))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (+) (subscript_expression (identifier) ([) (identifier) (]))) (+) (subscript_expression (identifier) ([) (identifier) (])))) (;)) (comment) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (-) (identifier))) (;)) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (return_statement (return) (identifier) (;)) (comment) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>) (number_literal)) ())) (compound_statement ({) (comment) (expression_statement (update_expression (identifier) (--)) (;)) (})) (else_clause (else) (compound_statement ({) (comment) (expression_statement (update_expression (identifier) (++)) (;)) (})))))) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (compound_statement ({) (comment) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (comment) (}))) (}))) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (return_statement (return) (identifier) (;)) (}))))