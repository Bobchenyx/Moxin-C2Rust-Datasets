(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>)))) (,) (parameter (identifier) (:) (primitive_type)) ())) (->) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (block ({) (let_declaration (let) (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (integer_literal) ()))) (;)) (let_declaration (let) (tuple_pattern (() (mut_pattern (mutable_specifier) (identifier)) (,) (mut_pattern (mutable_specifier) (identifier)) ())) (=) (tuple_expression (() (integer_literal) (,) (binary_expression (identifier) (-) (integer_literal)) ())) (;)) (expression_statement (loop_expression (loop) (block ({) (let_declaration (let) (identifier) (=) (binary_expression (index_expression (identifier) ([) (identifier) (])) (+) (index_expression (identifier) ([) (identifier) (]))) (;)) (expression_statement (if_expression (if) (binary_expression (identifier) (==) (identifier)) (block ({) (expression_statement (break_expression (break)) (;)) (})) (else_clause (else) (if_expression (if) (binary_expression (identifier) (<) (identifier)) (block ({) (expression_statement (compound_assignment_expr (identifier) (-=) (integer_literal)) (;)) (})) (else_clause (else) (block ({) (expression_statement (compound_assignment_expr (identifier) (+=) (integer_literal)) (;)) (}))))))) (})))) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (type_cast_expression (parenthesized_expression (() (binary_expression (identifier) (+) (integer_literal)) ())) (as) (primitive_type)) ()))) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (type_cast_expression (parenthesized_expression (() (binary_expression (identifier) (+) (integer_literal)) ())) (as) (primitive_type)) ()))) (;)) (identifier) (}))) (}))))