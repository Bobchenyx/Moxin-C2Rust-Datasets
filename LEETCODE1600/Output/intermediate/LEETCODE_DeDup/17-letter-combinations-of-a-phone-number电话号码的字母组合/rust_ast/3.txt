(source_file (const_item (const) (identifier) (:) (array_type ([) (reference_type (&) (lifetime (') (identifier)) (primitive_type)) (;) (integer_literal) (])) (=) (array_expression ([) (string_literal (") (string_content) (")) (,) (string_literal (") (string_content) (")) (,) (string_literal (") (string_content) (")) (,) (string_literal (") (string_content) (")) (,) (string_literal (") (string_content) (")) (,) (string_literal (") (string_content) (")) (,) (string_literal (") (string_content) (")) (,) (string_literal (") (string_content) (")) (])) (;)) (struct_item (struct) (type_identifier) (type_parameters (<) (lifetime_parameter (lifetime (') (identifier))) (>)) (field_declaration_list ({) (field_declaration (field_identifier) (:) (reference_type (&) (lifetime (') (identifier)) (generic_type (type_identifier) (type_arguments (<) (reference_type (&) (lifetime (') (identifier)) (primitive_type)) (>))))) (,) (field_declaration (field_identifier) (:) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>)))) (,) (}))) (impl_item (impl) (type_parameters (<) (lifetime_parameter (lifetime (') (identifier))) (>)) (generic_type (type_identifier) (type_arguments (<) (lifetime (') (identifier)) (>))) (declaration_list ({) (function_item (fn) (identifier) (parameters (() (parameter (identifier) (:) (reference_type (&) (lifetime (') (identifier)) (generic_type (type_identifier) (type_arguments (<) (reference_type (&) (lifetime (') (identifier)) (primitive_type)) (>))))) ())) (->) (type_identifier) (block ({) (struct_expression (type_identifier) (field_initializer_list ({) (shorthand_field_initializer (identifier)) (,) (field_initializer (field_identifier) (:) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (call_expression (field_expression (integer_literal) (.) (field_identifier)) (arguments (() (type_cast_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (as) (primitive_type)) ()))) ())))) (,) (}))) (}))) (function_item (fn) (identifier) (parameters (() (self_parameter (&) (mutable_specifier) (self)) (,) (parameter (identifier) (:) (type_identifier)) (,) (parameter (identifier) (:) (primitive_type)) ())) (block ({) (expression_statement (if_expression (if) (binary_expression (identifier) (==) (call_expression (field_expression (field_expression (self) (.) (field_identifier)) (.) (field_identifier)) (arguments (() ())))) (block ({) (expression_statement (if_expression (if) (parenthesized_expression (() (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (>) (integer_literal)) ())) (block ({) (expression_statement (call_expression (field_expression (field_expression (self) (.) (field_identifier)) (.) (field_identifier)) (arguments (() (identifier) ()))) (;)) (})))) (expression_statement (return_expression (return)) (;)) (})))) (let_declaration (let) (identifier) (=) (index_expression (field_expression (self) (.) (field_identifier)) ([) (identifier) (])) (;)) (expression_statement (for_expression (for) (identifier) (in) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (block ({) (expression_statement (call_expression (field_expression (self) (.) (field_identifier)) (arguments (() (macro_invocation (identifier) (!) (token_tree (() (string_literal (") (string_content) (")) (,) (identifier) (,) (identifier) ()))) (,) (binary_expression (identifier) (+) (integer_literal)) ()))) (;)) (})))) (}))) (}))) (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (type_identifier)) ())) (->) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (block ({) (let_declaration (let) (identifier) (=) (char_literal) (;)) (let_declaration (let) (identifier) (=) (call_expression (generic_function (field_expression (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() (closure_expression (closure_parameters (|) (identifier) (|)) (index_expression (identifier) ([) (type_cast_expression (parenthesized_expression (() (binary_expression (identifier) (-) (identifier)) ())) (as) (primitive_type)) (]))) ()))) (.) (field_identifier)) (::) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (reference_type (&) (lifetime (') (identifier)) (primitive_type)) (>))) (>))) (arguments (() ()))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (reference_expression (&) (identifier)) ()))) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (call_expression (field_expression (string_literal (") (")) (.) (field_identifier)) (arguments (() ()))) (,) (integer_literal) ()))) (;)) (field_expression (identifier) (.) (field_identifier)) (}))) (}))))