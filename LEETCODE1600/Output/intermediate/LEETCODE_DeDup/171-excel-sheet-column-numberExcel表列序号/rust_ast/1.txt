(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (type_identifier)) ())) (->) (primitive_type) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (call_expression (generic_function (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (::) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (>))) (arguments (() ()))) (;)) (let_declaration (let) (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (identifier)) (block ({) (let_declaration (let) (identifier) (=) (binary_expression (index_expression (identifier) ([) (identifier) (])) (-) (integer_literal)) (;)) (expression_statement (if_expression (if) (binary_expression (identifier) (!=) (parenthesized_expression (() (binary_expression (identifier) (-) (integer_literal)) ()))) (block ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (type_cast_expression (identifier) (as) (primitive_type))) ())) (*) (integer_literal))) (;)) (})) (else_clause (else) (block ({) (expression_statement (compound_assignment_expr (identifier) (+=) (type_cast_expression (identifier) (as) (primitive_type))) (;)) (}))))) (})))) (parenthesized_expression (() (identifier) ())) (}))) (}))))