(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (identifier) (,) (identifier) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (identifier)) (,) (init_declarator (pointer_declarator (*) (identifier)) (=) (null (NULL))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (char_literal (') (escape_sequence) ('))) ())) (return_statement (return) (true) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (pointer_expression (*) (identifier)) (!=) (char_literal (') (character) ('))) (&&) (binary_expression (pointer_expression (*) (identifier)) (!=) (char_literal (') (character) (')))) (&&) (binary_expression (pointer_expression (*) (identifier)) (!=) (char_literal (') (character) (')))) ())) (return_statement (return) (false) (;))) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (expression_statement (assignment_expression (identifier) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (identifier) ()))))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (char_literal (') (escape_sequence) (')) (,) (identifier) ()))) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (pointer_expression (*) (identifier)) (!=) (char_literal (') (escape_sequence) ('))) (;) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (binary_expression (pointer_expression (*) (identifier)) (==) (char_literal (') (character) ('))) (||) (binary_expression (pointer_expression (*) (identifier)) (==) (char_literal (') (character) (')))) (||) (binary_expression (pointer_expression (*) (identifier)) (==) (char_literal (') (character) (')))) (||) (binary_expression (pointer_expression (*) (identifier)) (!=) (char_literal (') (escape_sequence) (')))) ())) (switch_statement (switch) (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (compound_statement ({) (case_statement (case) (char_literal (') (character) (')) (:) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (identifier) (++)) (])) (=) (pointer_expression (*) (update_expression (identifier) (++)))) (;)) (break_statement (break) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (identifier) (++)) (])) (=) (pointer_expression (*) (update_expression (identifier) (++)))) (;)) (break_statement (break) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (identifier) (++)) (])) (=) (pointer_expression (*) (update_expression (identifier) (++)))) (;)) (break_statement (break) (;))) (})))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (binary_expression (pointer_expression (*) (parenthesized_expression (() (identifier) ()))) (!=) (char_literal (') (character) ('))) (&&) (binary_expression (pointer_expression (*) (parenthesized_expression (() (identifier) ()))) (!=) (char_literal (') (character) (')))) (&&) (binary_expression (pointer_expression (*) (parenthesized_expression (() (identifier) ()))) (!=) (char_literal (') (character) (')))) (&&) (binary_expression (pointer_expression (*) (parenthesized_expression (() (identifier) ()))) (!=) (char_literal (') (escape_sequence) (')))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (return_statement (return) (false) (;))) (switch_statement (switch) (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (compound_statement ({) (case_statement (case) (char_literal (') (character) (')) (:) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) ())) (==) (char_literal (') (character) ('))) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (--) (identifier)) (])) (=) (char_literal (') (escape_sequence) ('))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (break_statement (break) (;)) (})) (else_clause (else) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (identifier) (++)) (])) (=) (pointer_expression (*) (update_expression (identifier) (++)))) (;)))) (break_statement (break) (;)) (}))) (case_statement (case) (char_literal (') (character) (')) (:) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) ())) (==) (char_literal (') (character) ('))) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (--) (identifier)) (])) (=) (char_literal (') (escape_sequence) ('))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (break_statement (break) (;)) (})) (else_clause (else) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (identifier) (++)) (])) (=) (pointer_expression (*) (update_expression (identifier) (++)))) (;)))) (break_statement (break) (;)) (}))) (case_statement (case) (char_literal (') (character) (')) (:) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) ())) (==) (char_literal (') (character) ('))) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (--) (identifier)) (])) (=) (char_literal (') (escape_sequence) ('))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (break_statement (break) (;)) (})) (else_clause (else) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (identifier) (++)) (])) (=) (pointer_expression (*) (update_expression (identifier) (++)))) (;)))) (break_statement (break) (;)) (}))) (}))) (}))) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (char_literal (') (escape_sequence) ('))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (return_statement (return) (true) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (return_statement (return) (false) (;)) (})))) (}))))