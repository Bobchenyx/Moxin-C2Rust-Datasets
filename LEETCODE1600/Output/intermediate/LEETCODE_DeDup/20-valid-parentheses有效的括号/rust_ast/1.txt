(source_file (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (type_identifier)) ())) (->) (primitive_type) (block ({) (let_declaration (let) (identifier) (=) (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (macro_invocation (identifier) (!) (token_tree ([) (]))) (;)) (expression_statement (for_expression (for) (reference_pattern (&) (identifier)) (in) (identifier) (block ({) (let_declaration (let) (identifier) (=) (type_cast_expression (identifier) (as) (primitive_type)) (;)) (expression_statement (if_expression (if) (binary_expression (binary_expression (binary_expression (identifier) (==) (char_literal)) (||) (binary_expression (identifier) (==) (char_literal))) (||) (binary_expression (identifier) (==) (char_literal))) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (identifier) ()))) (;)) (})) (else_clause (else) (if_expression (if) (let_condition (let) (tuple_struct_pattern (identifier) (() (identifier) ())) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ())))) (block ({) (expression_statement (if_expression (if) (binary_expression (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (char_literal)) (&&) (binary_expression (identifier) (==) (char_literal))) ())) (||) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (char_literal)) (&&) (binary_expression (identifier) (==) (char_literal))) ()))) (||) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (char_literal)) (&&) (binary_expression (identifier) (==) (char_literal))) ()))) (block ({) (expression_statement (continue_expression (continue)) (;)) (})) (else_clause (else) (block ({) (expression_statement (return_expression (return) (boolean_literal (false))) (;)) (}))))) (})) (else_clause (else) (block ({) (expression_statement (return_expression (return) (boolean_literal (false))) (;)) (}))))))) (})))) (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (==) (integer_literal)) (}))))