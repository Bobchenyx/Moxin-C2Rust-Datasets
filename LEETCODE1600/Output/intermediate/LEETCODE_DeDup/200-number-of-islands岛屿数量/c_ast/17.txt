(translation_unit (comment) (function_definition (primitive_type) (ERROR (ERROR)) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (ERROR (ERROR)) (identifier)))) (,) (ERROR (ERROR)) (parameter_declaration (primitive_type) (ERROR (ERROR)) (identifier)) (,) (ERROR (ERROR)) (parameter_declaration (primitive_type) (pointer_declarator (*) (ERROR (ERROR)) (identifier))) (,) (parameter_declaration (primitive_type) (ERROR (ERROR)) (identifier)) (,) (parameter_declaration (primitive_type) (ERROR (ERROR)) (identifier)) ()))) (compound_statement ({) (ERROR (ERROR)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (=) (char_literal (') (character) ('))) (;)) (ERROR (ERROR) (comment) (ERROR)) (declaration (primitive_type) (ERROR (ERROR)) (init_declarator (array_declarator (identifier) ([) (number_literal) (])) (=) (initializer_list ({) (number_literal) (,) (number_literal) (,) (number_literal) (,) (number_literal) (}))) (;)) (comment) (ERROR (ERROR)) (declaration (primitive_type) (ERROR (ERROR)) (init_declarator (array_declarator (identifier) ([) (number_literal) (])) (=) (initializer_list ({) (number_literal) (,) (number_literal) (,) (number_literal) (,) (number_literal) (}))) (;)) (ERROR (ERROR)) (declaration (primitive_type) (ERROR (ERROR)) (identifier) (;)) (ERROR (ERROR)) (declaration (primitive_type) (ERROR (ERROR)) (identifier) (,) (identifier) (;)) (ERROR (ERROR)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (number_literal)) (;) (update_expression (identifier) (++)) ()) (ERROR (ERROR)) (compound_statement ({) (ERROR (ERROR)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (subscript_expression (identifier) ([) (identifier) (])))) (;)) (ERROR (ERROR)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (subscript_expression (identifier) ([) (identifier) (])))) (;)) (ERROR (ERROR)) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (identifier) (>=) (number_literal)) (&&) (binary_expression (identifier) (<) (identifier))) ())) (&&) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (>=) (number_literal)) (&&) (binary_expression (identifier) (<) (pointer_expression (*) (identifier)))) ()))) ())) (comment) (ERROR (ERROR)) (compound_statement ({) (ERROR (ERROR)) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (==) (char_literal (') (character) ('))) ())) (ERROR (ERROR)) (compound_statement ({) (ERROR (ERROR)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) (,) (identifier) (,) (identifier) ()))) (;)) (ERROR (ERROR)) (}))) (ERROR (ERROR)) (}))) (ERROR (ERROR)) (}))) (}))) (function_definition (primitive_type) (ERROR (ERROR)) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (ERROR (ERROR)) (identifier)))) (,) (ERROR (ERROR)) (parameter_declaration (primitive_type) (ERROR (ERROR)) (identifier)) (,) (ERROR (ERROR)) (parameter_declaration (primitive_type) (pointer_declarator (*) (ERROR (ERROR)) (identifier))) ()))) (compound_statement ({) (ERROR (ERROR)) (declaration (primitive_type) (ERROR (ERROR)) (identifier) (,) (identifier) (;)) (ERROR (ERROR)) (declaration (primitive_type) (ERROR (ERROR)) (init_declarator (identifier) (=) (number_literal)) (;)) (ERROR (ERROR)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (ERROR (ERROR)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (pointer_expression (*) (identifier))) (;) (update_expression (identifier) (++)) ()) (ERROR (ERROR)) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (==) (char_literal (') (character) ('))) ())) (ERROR (ERROR)) (compound_statement ({) (ERROR (ERROR)) (expression_statement (update_expression (identifier) (++)) (;)) (ERROR (ERROR)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) (,) (identifier) (,) (identifier) ()))) (;)) (ERROR (ERROR)) (}))))) (ERROR (ERROR)) (return_statement (return) (ERROR (ERROR)) (identifier) (;)) (}))))