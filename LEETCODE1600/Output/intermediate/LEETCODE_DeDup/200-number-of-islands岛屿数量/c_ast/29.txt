(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (=) (char_literal (') (character) ('))) (;)) (declaration (primitive_type) (init_declarator (array_declarator (identifier) ([) (])) (=) (initializer_list ({) (number_literal) (,) (number_literal) (,) (number_literal) (}))) (;)) (declaration (primitive_type) (init_declarator (array_declarator (identifier) ([) (])) (=) (initializer_list ({) (number_literal) (,) (number_literal) (,) (number_literal) (}))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (number_literal)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (number_literal)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (!=) (identifier)) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (number_literal)) (&&) (binary_expression (identifier) (==) (number_literal))) ())) (||) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (number_literal)) (&&) (binary_expression (identifier) (==) (number_literal))) ()))) ())) (compound_statement ({) (continue_statement (continue) (;)) (})) (else_clause (else) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (binary_expression (binary_expression (binary_expression (identifier) (+) (subscript_expression (identifier) ([) (identifier) (]))) (<) (identifier)) (&&) (binary_expression (binary_expression (identifier) (+) (subscript_expression (identifier) ([) (identifier) (]))) (>=) (number_literal))) (&&) (binary_expression (binary_expression (identifier) (+) (subscript_expression (identifier) ([) (identifier) (]))) (<) (identifier))) (&&) (binary_expression (binary_expression (identifier) (+) (subscript_expression (identifier) ([) (identifier) (]))) (>=) (number_literal))) (&&) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (subscript_expression (identifier) ([) (identifier) (]))) (])) ([) (binary_expression (identifier) (+) (subscript_expression (identifier) ([) (identifier) (]))) (])) (==) (char_literal (') (character) (')))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (identifier) (+) (subscript_expression (identifier) ([) (identifier) (]))) (,) (binary_expression (identifier) (+) (subscript_expression (identifier) ([) (identifier) (]))) (,) (identifier) (,) (identifier) ()))) (;)) (}))) (})))) (}))) (}))) (}))) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (subscript_expression (identifier) ([) (number_literal) (]))) (,) (init_declarator (identifier) (=) (identifier)) (;)) (if_statement (if) (parenthesized_expression (() (unary_expression (!) (identifier)) ())) (compound_statement ({) (return_statement (return) (number_literal) (;)) (}))) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (==) (char_literal (') (character) ('))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) (,) (identifier) (,) (identifier) ()))) (;)) (}))) (}))) (}))) (return_statement (return) (identifier) (;)) (}))))