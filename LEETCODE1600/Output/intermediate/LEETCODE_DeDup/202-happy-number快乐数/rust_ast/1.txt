(source_file (use_declaration (use) (scoped_identifier (scoped_identifier (identifier) (::) (identifier)) (::) (identifier)) (;)) (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (primitive_type)) ())) (->) (primitive_type) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() ()))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (identifier) (;)) (let_declaration (let) (mutable_specifier) (identifier) (:) (primitive_type) (;)) (expression_statement (while_expression (while) (unary_expression (!) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (reference_expression (&) (identifier)) ())))) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (identifier) ()))) (;)) (expression_statement (assignment_expression (identifier) (=) (integer_literal)) (;)) (expression_statement (while_expression (while) (binary_expression (identifier) (>) (integer_literal)) (block ({) (expression_statement (compound_assignment_expr (identifier) (+=) (call_expression (field_expression (parenthesized_expression (() (binary_expression (identifier) (%) (integer_literal)) ())) (.) (field_identifier)) (arguments (() (integer_literal) ())))) (;)) (expression_statement (compound_assignment_expr (identifier) (/=) (integer_literal)) (;)) (})))) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (})))) (binary_expression (identifier) (==) (integer_literal)) (}))) (}))))