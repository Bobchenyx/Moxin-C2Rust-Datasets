(translation_unit (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (identifier)) (&&) (binary_expression (identifier) (==) (identifier))) ())) (compound_statement ({) (comment) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (])) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (parenthesized_expression (() (binary_expression (binary_expression (number_literal) (*) (identifier)) (+) (number_literal)) ()))) ()))))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (char_literal (') (escape_sequence) ('))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (update_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (++)) (])) (,) (identifier) ()))) (;)) (return_statement (return) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (compound_statement ({) (comment) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (char_literal (') (character) ('))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (identifier) (+) (number_literal)) (,) (identifier) (,) (identifier) (,) (identifier) (,) (binary_expression (identifier) (+) (number_literal)) (,) (identifier) (,) (identifier) ()))) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (>) (identifier)) (&&) (binary_expression (identifier) (<) (identifier))) ())) (compound_statement ({) (comment) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (char_literal (') (character) ('))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (identifier) (+) (number_literal)) (,) (identifier) (,) (identifier) (,) (binary_expression (identifier) (+) (number_literal)) (,) (identifier) (,) (identifier) ()))) (;)) (}))) (}))) (function_definition (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))))) (compound_statement ({) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (parenthesized_expression (() (binary_expression (binary_expression (number_literal) (*) (identifier)) (+) (number_literal)) ()))) ()))))) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (identifier))) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*) (abstract_pointer_declarator (*)))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ())) (*) (number_literal)) ()))))) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (number_literal)) (;)) (expression_statement (call_expression (identifier) (argument_list (() (number_literal) (,) (number_literal) (,) (identifier) (,) (identifier) (,) (number_literal) (,) (identifier) (,) (identifier) ()))) (;)) (return_statement (return) (identifier) (;)) (}))) (function_definition (type_identifier) (ERROR (ERROR) (identifier)) (identifier) (compound_statement ({) (expression_statement (binary_expression (binary_expression (identifier) (<) (identifier)) (>) (assignment_expression (identifier) (=) (ERROR (identifier)) (binary_expression (binary_expression (identifier) (<) (identifier)) (>) (parenthesized_expression (() (identifier) ()))))) (;)) (function_definition (type_identifier) (ERROR (identifier) (<) (identifier) (>)) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (string_literal (") (")) ()))) (;)) (return_statement (return) (identifier) (;)) (}))) (function_definition (type_identifier) (ERROR (identifier)) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (type_identifier) (identifier)) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (number_literal)) (&&) (binary_expression (identifier) (==) (number_literal))) ())) (compound_statement ({) (comment) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() (identifier) ()))) (;)) (return_statement (return) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>) (number_literal)) ())) (compound_statement ({) (comment) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (identifier) (-) (number_literal)) (,) (identifier) (,) (binary_expression (identifier) (+) (string_literal (") (string_content) ("))) ()))) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>) (identifier)) ())) (compound_statement ({) (comment) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (identifier) (-) (number_literal)) (,) (binary_expression (identifier) (+) (string_literal (") (string_content) ("))) ()))) (;)) (}))) (}))) (}))))