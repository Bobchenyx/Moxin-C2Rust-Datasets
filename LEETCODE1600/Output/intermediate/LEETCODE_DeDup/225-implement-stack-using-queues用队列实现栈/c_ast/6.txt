(translation_unit (type_definition (typedef) (struct_specifier (struct) (field_declaration_list ({) (field_declaration (primitive_type) (pointer_declarator (*) (field_identifier)) (;)) (field_declaration (primitive_type) (pointer_declarator (*) (field_identifier)) (;)) (field_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (field_identifier))) (;)) (field_declaration (primitive_type) (field_identifier) (;)) (}))) (type_identifier) (;)) (comment) (function_definition (type_identifier) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() ())))) (compound_statement ({) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (type_identifier) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (sizeof_expression (sizeof) (parenthesized_expression (() (identifier) ()))) ()))))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (number_literal)) ()))))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (number_literal)) ()))))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (pointer_expression (&) (parenthesized_expression (() (field_expression (identifier) (->) (field_identifier)) ())))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (number_literal)) (;)) (return_statement (return) (identifier) (;)) (}))) (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (parenthesized_expression (() (pointer_expression (*) (parenthesized_expression (() (field_expression (identifier) (->) (field_identifier)) ()))) ())) ([) (update_expression (parenthesized_expression (() (field_expression (identifier) (->) (field_identifier)) ())) (++)) (])) (=) (identifier)) (;)) (}))) (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier))) (,) (identifier) (;)) (expression_statement (assignment_expression (identifier) (=) (conditional_expression (parenthesized_expression (() (binary_expression (pointer_expression (*) (parenthesized_expression (() (field_expression (identifier) (->) (field_identifier)) ()))) (==) (field_expression (identifier) (->) (field_identifier))) ())) (?) (pointer_expression (&) (parenthesized_expression (() (field_expression (identifier) (->) (field_identifier)) ()))) (:) (pointer_expression (&) (parenthesized_expression (() (field_expression (identifier) (->) (field_identifier)) ()))))) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (binary_expression (field_expression (identifier) (->) (field_identifier)) (-) (number_literal))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) ([) (identifier) (])) (=) (subscript_expression (parenthesized_expression (() (pointer_expression (*) (parenthesized_expression (() (field_expression (identifier) (->) (field_identifier)) ()))) ())) ([) (identifier) (]))) (;)) (}))) (expression_statement (assignment_expression (identifier) (=) (subscript_expression (parenthesized_expression (() (pointer_expression (*) (parenthesized_expression (() (field_expression (identifier) (->) (field_identifier)) ()))) ())) ([) (update_expression (--) (parenthesized_expression (() (field_expression (identifier) (->) (field_identifier)) ()))) (]))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (identifier)) (;)) (return_statement (return) (identifier) (;)) (}))) (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier))) (,) (identifier) (;)) (expression_statement (assignment_expression (identifier) (=) (conditional_expression (parenthesized_expression (() (binary_expression (pointer_expression (*) (parenthesized_expression (() (field_expression (identifier) (->) (field_identifier)) ()))) (==) (field_expression (identifier) (->) (field_identifier))) ())) (?) (pointer_expression (&) (parenthesized_expression (() (field_expression (identifier) (->) (field_identifier)) ()))) (:) (pointer_expression (&) (parenthesized_expression (() (field_expression (identifier) (->) (field_identifier)) ()))))) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (field_expression (identifier) (->) (field_identifier))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) ([) (identifier) (])) (=) (subscript_expression (parenthesized_expression (() (pointer_expression (*) (parenthesized_expression (() (field_expression (identifier) (->) (field_identifier)) ()))) ())) ([) (identifier) (]))) (;)) (}))) (expression_statement (assignment_expression (identifier) (=) (subscript_expression (parenthesized_expression (() (pointer_expression (*) (parenthesized_expression (() (field_expression (identifier) (->) (field_identifier)) ()))) ())) ([) (binary_expression (field_expression (identifier) (->) (field_identifier)) (-) (number_literal)) (]))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (identifier)) (;)) (return_statement (return) (identifier) (;)) (}))) (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (return_statement (return) (parenthesized_expression (() (binary_expression (number_literal) (==) (field_expression (identifier) (->) (field_identifier))) ())) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (}))) (comment))