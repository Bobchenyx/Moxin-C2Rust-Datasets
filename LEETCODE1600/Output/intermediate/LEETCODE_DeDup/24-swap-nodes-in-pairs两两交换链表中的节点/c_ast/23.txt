(translation_unit (function_definition (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier)) (,) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (identifier))) (=) (pointer_expression (&) (identifier))) (,) (pointer_declarator (*) (identifier)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (&&) (field_expression (identifier) (->) (field_identifier))) ())) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (expression_statement (assignment_expression (identifier) (=) (pointer_expression (&) (field_expression (identifier) (->) (field_identifier)))) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (field_expression (identifier) (->) (field_identifier)) (->) (field_identifier))) (;)) (expression_statement (assignment_expression (field_expression (field_expression (identifier) (->) (field_identifier)) (->) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (}))) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (identifier)) (;)) (return_statement (return) (identifier) (;)) (}))) (comment) (function_definition (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier)) (,) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (identifier))) (=) (pointer_expression (&) (identifier))) (,) (pointer_declarator (*) (identifier)) (,) (pointer_declarator (*) (identifier)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (assignment_expression (identifier) (=) (identifier)) ())) (&&) (parenthesized_expression (() (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) ()))) ())) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (pointer_expression (&) (field_expression (identifier) (->) (field_identifier)))) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (identifier)) (;)) (}))) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (identifier)) (;)) (return_statement (return) (identifier) (;)) (}))))