(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (array_declarator (identifier) ([) (number_literal) (])) (=) (initializer_list ({) (number_literal) (}))) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (binary_expression (number_literal) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ()))) ()))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (!=) (char_literal (') (escape_sequence) ('))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (%) (number_literal)) (])) (>=) (number_literal)) ())) (comment) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (comment) (expression_statement (assignment_expression (identifier) (=) (subscript_expression (identifier) ([) (subscript_expression (identifier) ([) (identifier) (])) (]))) (;)) (comment) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (binary_expression (number_literal) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ()))) ()))) (;)) (continue_statement (continue) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (%) (number_literal)) (])) (=) (identifier)) (;)) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>) (identifier)) ())) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;))) (comment) (})))) (}))) (return_statement (return) (identifier) (;)) (}))))