(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (type_identifier)) ())) (->) (primitive_type) (block ({) (use_declaration (use) (scoped_identifier (scoped_identifier (identifier) (::) (identifier)) (::) (identifier)) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() ()))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (expression_statement (for_expression (for) (tuple_pattern (() (identifier) (,) (identifier) ())) (in) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (block ({) (expression_statement (call_expression (field_expression (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (identifier) ()))) (.) (field_identifier)) (arguments (() (closure_expression (closure_parameters (|) (identifier) (|)) (block ({) (expression_statement (if_expression (if) (binary_expression (unary_expression (*) (identifier)) (>=) (identifier)) (block ({) (assignment_expression (identifier) (=) (binary_expression (unary_expression (*) (identifier)) (+) (integer_literal))) (})))) (assignment_expression (unary_expression (*) (identifier)) (=) (identifier)) (}))) ()))) (.) (field_identifier)) (arguments (() (identifier) ()))) (;)) (expression_statement (if_expression (if) (binary_expression (identifier) (<=) (binary_expression (identifier) (-) (identifier))) (block ({) (assignment_expression (identifier) (=) (binary_expression (binary_expression (identifier) (-) (identifier)) (+) (integer_literal))) (})))) (})))) (type_cast_expression (identifier) (as) (primitive_type)) (}))) (}))))