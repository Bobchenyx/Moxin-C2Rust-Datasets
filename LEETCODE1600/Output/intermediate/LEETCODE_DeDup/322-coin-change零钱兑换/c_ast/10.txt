(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (return_statement (return) (conditional_expression (binary_expression (identifier) (>) (identifier)) (?) (identifier) (:) (identifier)) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (+) (number_literal))) (,) (identifier) (,) (identifier) (;)) (declaration (primitive_type) (array_declarator (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (number_literal)) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (binary_expression (identifier) (+) (number_literal))) (;) (update_expression (identifier) (++)) ()) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (identifier)) (;))) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<=) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>=) (subscript_expression (identifier) ([) (identifier) (]))) ())) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) (,) (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (subscript_expression (identifier) ([) (identifier) (]))) (])) (+) (number_literal)) ())))) (;))) (}))) (}))) (return_statement (return) (conditional_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (>) (identifier)) (?) (number_literal) (:) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (}))))