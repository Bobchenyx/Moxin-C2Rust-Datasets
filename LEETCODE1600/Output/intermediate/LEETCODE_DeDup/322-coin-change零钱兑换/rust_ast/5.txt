(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>)))) (,) (parameter (identifier) (:) (primitive_type)) ())) (->) (primitive_type) (block ({) (let_declaration (let) (identifier) (=) (type_cast_expression (identifier) (as) (primitive_type)) (;)) (let_declaration (let) (identifier) (=) (binary_expression (identifier) (+) (integer_literal)) (;)) (let_declaration (let) (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (=) (call_expression (field_expression (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() (closure_expression (closure_parameters (|) (identifier) (|)) (type_cast_expression (unary_expression (*) (identifier)) (as) (primitive_type))) ()))) (.) (field_identifier)) (arguments (() ()))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (=) (macro_invocation (identifier) (!) (token_tree ([) (-) (integer_literal) (;) (identifier) (]))) (;)) (expression_statement (assignment_expression (index_expression (identifier) ([) (integer_literal) (])) (=) (integer_literal)) (;)) (expression_statement (for_expression (for) (reference_pattern (&) (identifier)) (in) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (block ({) (expression_statement (for_expression (for) (identifier) (in) (range_expression (identifier) (..) (identifier)) (block ({) (assignment_expression (index_expression (identifier) ([) (identifier) (])) (=) (match_expression (match) (tuple_expression (() (binary_expression (index_expression (identifier) ([) (binary_expression (identifier) (-) (identifier)) (])) (==) (unary_expression (-) (integer_literal))) (,) (binary_expression (index_expression (identifier) ([) (identifier) (])) (==) (unary_expression (-) (integer_literal))) ())) (match_block ({) (match_arm (match_pattern (tuple_pattern (() (boolean_literal (true)) (,) (_) ()))) (=>) (index_expression (identifier) ([) (identifier) (])) (,)) (match_arm (match_pattern (tuple_pattern (() (boolean_literal (false)) (,) (boolean_literal (true)) ()))) (=>) (binary_expression (index_expression (identifier) ([) (binary_expression (identifier) (-) (identifier)) (])) (+) (integer_literal)) (,)) (match_arm (match_pattern (_)) (=>) (call_expression (field_expression (index_expression (identifier) ([) (identifier) (])) (.) (field_identifier)) (arguments (() (binary_expression (index_expression (identifier) ([) (binary_expression (identifier) (-) (identifier)) (])) (+) (integer_literal)) ()))) (,)) (})))) (})))) (})))) (index_expression (identifier) ([) (identifier) (])) (}))) (}))))