(translation_unit (function_definition (type_identifier) (identifier) (compound_statement ({) (labeled_statement (statement_identifier) (:) (ERROR (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (ERROR (<) (primitive_type) (>) (&)) (identifier)) ())))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ()))) ())) (return_statement (return) (;))) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ()))) (-) (number_literal))) (,) (init_declarator (identifier) (=) (binary_expression (identifier) (/) (number_literal))) (;)) (declaration (primitive_type) (identifier) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<=) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (identifier)) (])) (==) (subscript_expression (identifier) ([) (identifier) (]))) ())) (continue_statement (continue) (;))) (comment) (expression_statement (assignment_expression (identifier) (=) (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (identifier)) (]))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (identifier)) (])) (=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (identifier)) (;)) (comment) (}))) (}))) (}))) (expression_statement (;)))