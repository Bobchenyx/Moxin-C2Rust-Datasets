(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>)))) (,) (parameter (identifier) (:) (primitive_type)) ())) (->) (primitive_type) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (:) (primitive_type) (=) (integer_literal) (;)) (let_declaration (let) (mutable_specifier) (identifier) (:) (primitive_type) (=) (binary_expression (type_cast_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (as) (primitive_type)) (-) (integer_literal)) (;)) (expression_statement (while_expression (while) (parenthesized_expression (() (binary_expression (identifier) (<=) (identifier)) ())) (block ({) (let_declaration (let) (identifier) (:) (primitive_type) (=) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ())) (/) (integer_literal)) (;)) (expression_statement (if_expression (if) (let_condition (let) (tuple_struct_pattern (identifier) (() (identifier) ())) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (type_cast_expression (identifier) (as) (primitive_type)) ())))) (block ({) (expression_statement (if_expression (if) (binary_expression (unary_expression (*) (identifier)) (>) (identifier)) (block ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (-) (integer_literal))) (;)) (})) (else_clause (else) (if_expression (if) (binary_expression (unary_expression (*) (identifier)) (<) (identifier)) (block ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (integer_literal))) (;)) (})) (else_clause (else) (block ({) (expression_statement (return_expression (return) (identifier)) (;)) (}))))))) (})))) (})))) (expression_statement (return_expression (return) (identifier)) (;)) (}))) (}))))