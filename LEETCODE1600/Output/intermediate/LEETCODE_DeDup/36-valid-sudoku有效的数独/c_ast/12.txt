(translation_unit (comment) (comment) (comment) (comment) (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (array_declarator (identifier) ([) (number_literal) (])) (=) (initializer_list ({) (number_literal) (}))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (true)) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (number_literal)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (>=) (char_literal (') (character) ('))) ())) (&&) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (<=) (char_literal (') (character) ('))) ()))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (number_literal) (==) (subscript_expression (identifier) ([) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (-) (char_literal (') (character) ('))) (]))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (false)) (;)) (return_statement (return) (identifier) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (-) (char_literal (') (character) ('))) (])) (=) (number_literal)) (;)) (})))) (}))) (}))) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (array_declarator (identifier) ([) (number_literal) (])) (=) (initializer_list ({) (number_literal) (}))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (true)) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (number_literal)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (>=) (char_literal (') (character) ('))) ())) (&&) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (<=) (char_literal (') (character) ('))) ()))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (number_literal) (==) (subscript_expression (identifier) ([) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (-) (char_literal (') (character) ('))) (]))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (false)) (;)) (return_statement (return) (identifier) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (-) (char_literal (') (character) ('))) (])) (=) (number_literal)) (;)) (})))) (}))) (}))) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (array_declarator (identifier) ([) (number_literal) (])) (=) (initializer_list ({) (number_literal) (}))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (true)) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (number_literal)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (number_literal)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (identifier)) (])) ([) (binary_expression (identifier) (+) (identifier)) (])) (>=) (char_literal (') (character) ('))) ())) (&&) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (identifier)) (])) ([) (binary_expression (identifier) (+) (identifier)) (])) (<=) (char_literal (') (character) ('))) ()))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (number_literal) (==) (subscript_expression (identifier) ([) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (identifier)) (])) ([) (binary_expression (identifier) (+) (identifier)) (])) (-) (char_literal (') (character) ('))) (]))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (false)) (;)) (return_statement (return) (identifier) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (identifier)) (])) ([) (binary_expression (identifier) (+) (identifier)) (])) (-) (char_literal (') (character) ('))) (])) (=) (number_literal)) (;)) (})))) (}))) (}))) (}))) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (true)) (;)) (comment) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (number_literal)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (false) (==) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ())))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (false)) (;)) (return_statement (return) (identifier) (;)) (}))) (}))) (comment) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (number_literal)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (false) (==) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ())))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (false)) (;)) (return_statement (return) (identifier) (;)) (}))) (}))) (comment) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (number_literal)) (;) (assignment_expression (identifier) (+=) (number_literal)) ()) (compound_statement ({) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (number_literal)) (;) (assignment_expression (identifier) (+=) (number_literal)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (false) (==) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) ())))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (false)) (;)) (return_statement (return) (identifier) (;)) (}))) (}))) (}))) (return_statement (return) (identifier) (;)) (}))))