(translation_unit (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ())))) (compound_statement ({) (declaration (primitive_type) (pointer_declarator (*) (identifier)) (,) (pointer_declarator (*) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (number_literal)) ())))) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (number_literal)) ())))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (char_literal (') (character) ('))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (char_literal (') (escape_sequence) ('))) (;)) (declaration (primitive_type) (identifier) (,) (identifier) (,) (identifier) (;)) (declaration (primitive_type) (pointer_declarator (*) (identifier)) (,) (identifier) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (comma_expression (assignment_expression (identifier) (=) (number_literal)) (,) (assignment_expression (identifier) (=) (number_literal))) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (subscript_expression (identifier) ([) (number_literal) (]))) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (!=) (char_literal (') (escape_sequence) ('))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (identifier)) ())) (expression_statement (update_expression (identifier) (++)) (;)) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (identifier) (++)) (])) (=) (binary_expression (identifier) (+) (char_literal (') (character) (')))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (identifier) (++)) (])) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (pointer_expression (*) (identifier))) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (})))) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (identifier) (++)) (])) (=) (binary_expression (identifier) (+) (char_literal (') (character) (')))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (identifier) (++)) (])) (=) (identifier)) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (char_literal (') (escape_sequence) ('))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ()))) (;)) (}))) (return_statement (return) (identifier) (;)) (}))))