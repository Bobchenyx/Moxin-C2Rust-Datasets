(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (identifier) (;)) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (cast_expression (() (type_descriptor (primitive_type)) ()) (identifier)) (>=) (number_literal)) (&&) (binary_expression (cast_expression (() (type_descriptor (primitive_type)) ()) (identifier)) (<=) (parenthesized_expression (() (binary_expression (number_literal) (+) (number_literal)) ())))) ())) (expression_statement (assignment_expression (identifier) (=) (binary_expression (cast_expression (() (type_descriptor (primitive_type)) ()) (identifier)) (-) (number_literal))) (;)) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (cast_expression (() (type_descriptor (primitive_type)) ()) (identifier)) (>=) (number_literal)) (&&) (binary_expression (cast_expression (() (type_descriptor (primitive_type)) ()) (identifier)) (<=) (parenthesized_expression (() (binary_expression (number_literal) (+) (number_literal)) ())))) ())) (expression_statement (assignment_expression (identifier) (=) (binary_expression (cast_expression (() (type_descriptor (primitive_type)) ()) (identifier)) (-) (number_literal))) (;))))) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (declaration (primitive_type) (init_declarator (array_declarator (identifier) ([) (number_literal) (])) (=) (initializer_list ({) (number_literal) (}))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (expression_statement (update_expression (subscript_expression (identifier) ([) (call_expression (identifier) (argument_list (() (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) ()))) (])) (++)) (;))) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (number_literal)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (comment) (expression_statement (assignment_expression (identifier) (+=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (%) (number_literal)) (==) (number_literal)) ())) (compound_statement ({) (comment) (expression_statement (update_expression (identifier) (--)) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (}))) (}))) (if_statement (if) (parenthesized_expression (() (identifier) ())) (expression_statement (update_expression (identifier) (++)) (;))) (return_statement (return) (identifier) (;)) (}))))