(translation_unit (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (,) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (identifier) (+) (identifier)) (+) (number_literal)) ())) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ()))) ()))))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (char_literal (') (character) (')) (,) (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) ()))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (identifier)) (])) (=) (char_literal (') (escape_sequence) ('))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (binary_expression (identifier) (>=) (number_literal)) (;) (update_expression (identifier) (--)) ()) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (-) (char_literal (') (character) (')))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (binary_expression (identifier) (>=) (number_literal)) (;) (update_expression (identifier) (--)) ()) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (-) (char_literal (') (character) (')))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (subscript_expression (identifier) ([) (binary_expression (binary_expression (identifier) (+) (identifier)) (+) (number_literal)) (])) (-) (char_literal (') (character) (')))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (binary_expression (binary_expression (identifier) (*) (identifier)) (+) (identifier)) (+) (identifier))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (binary_expression (identifier) (+) (identifier)) (+) (number_literal)) (])) (=) (binary_expression (binary_expression (identifier) (%) (number_literal)) (+) (char_literal (') (character) (')))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (/) (number_literal))) (;)) (}))) (if_statement (if) (parenthesized_expression (() (identifier) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (binary_expression (identifier) (+) (char_literal (') (character) (')))) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (}))) (}))) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (;) (binary_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (char_literal (') (character) ('))) (&&) (binary_expression (identifier) (<=) (binary_expression (identifier) (+) (identifier)))) (;) (update_expression (identifier) (++)) ()) (expression_statement (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (binary_expression (identifier) (+) (identifier))) ())) (return_statement (return) (string_literal (") (string_content) (")) (;)) (else_clause (else) (expression_statement (assignment_expression (identifier) (+=) (identifier)) (;)))) (return_statement (return) (identifier) (;)) (}))))