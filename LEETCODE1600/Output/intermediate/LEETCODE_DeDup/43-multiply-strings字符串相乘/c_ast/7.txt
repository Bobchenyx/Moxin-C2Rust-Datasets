(translation_unit (comment) (function_definition (sized_type_specifier (short)) (function_declarator (identifier) (parameter_list (() (parameter_declaration (sized_type_specifier (short)) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (sized_type_specifier (short)) (identifier)) (,) (parameter_declaration (sized_type_specifier (short)) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (comment) (declaration (sized_type_specifier (short)) (init_declarator (identifier) (=) (binary_expression (identifier) (*) (identifier))) (;)) (declaration (sized_type_specifier (short)) (init_declarator (identifier) (=) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (*) (identifier)) ())) (/) (number_literal))) (;)) (declaration (sized_type_specifier (short)) (init_declarator (identifier) (=) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (*) (identifier)) ())) (%) (number_literal))) (;)) (declaration (sized_type_specifier (short)) (init_declarator (identifier) (=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (identifier)) (])) (=) (binary_expression (identifier) (+) (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (identifier)) (])))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (binary_expression (identifier) (+) (identifier)) (+) (number_literal)) (])) (=) (binary_expression (identifier) (+) (subscript_expression (identifier) ([) (binary_expression (binary_expression (identifier) (+) (identifier)) (+) (number_literal)) (])))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (binary_expression (binary_expression (identifier) (+) (identifier)) (+) (number_literal)) (])) (>) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (binary_expression (identifier) (+) (identifier)) (+) (number_literal)) (])) (=) (binary_expression (subscript_expression (identifier) ([) (binary_expression (binary_expression (identifier) (+) (identifier)) (+) (number_literal)) (])) (-) (number_literal))) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (}))) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (identifier)) (])) (=) (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (identifier)) (])) (+) (identifier))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (identifier)) (])) (>) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (identifier)) (])) (=) (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (identifier)) (])) (-) (number_literal))) (;)) (return_statement (return) (number_literal) (;)) (}))) (return_statement (return) (number_literal) (;)) (}))) (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (sized_type_specifier (short)) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (sized_type_specifier (short)) (identifier)) ()))) (compound_statement ({) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (binary_expression (identifier) (+) (identifier)) (-) (number_literal))) (;)) (binary_expression (identifier) (>=) (number_literal)) (;) (update_expression (identifier) (--)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (+) (identifier))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (>) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (-) (number_literal))) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (continue_statement (continue) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (break_statement (break) (;)) (})))) (}))) (}))) (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (sized_type_specifier (short)) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (sized_type_specifier (short)) (identifier)) ()))) (compound_statement ({) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (binary_expression (identifier) (-) (number_literal))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (binary_expression (char_literal (') (character) (')) (+) (subscript_expression (identifier) ([) (identifier) (])))) (;)) (}))) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (=) (char_literal (') (escape_sequence) ('))) (;)) (}))) (comment) (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (declaration (sized_type_specifier (short)) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (declaration (sized_type_specifier (short)) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (declaration (sized_type_specifier (short)) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (sized_type_specifier (short)) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (sized_type_specifier (short))) ())) (*) (identifier)) ()))))) (;)) (declaration (sized_type_specifier (short)) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (sized_type_specifier (short)) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (sized_type_specifier (short))) ())) (*) (identifier)) ()))))) (;)) (declaration (sized_type_specifier (short)) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (sized_type_specifier (short)) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (sized_type_specifier (short))) ())) (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) ()))))) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (+) (identifier)) (+) (number_literal)) ()))) ()))))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (number_literal)) (;)) (}))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (-) (char_literal (') (character) (')))) (;)) (}))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (-) (char_literal (') (character) (')))) (;)) (}))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (subscript_expression (identifier) ([) (identifier) (])) (,) (subscript_expression (identifier) ([) (identifier) (])) (,) (identifier) (,) (identifier) ())))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) (,) (identifier) ()))) (;)) (}))) (}))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (binary_expression (binary_expression (identifier) (+) (identifier)) (+) (number_literal)) ()))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (char_literal (') (character) ('))) (&&) (binary_expression (identifier) (<) (binary_expression (binary_expression (identifier) (+) (identifier)) (-) (number_literal)))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (return_statement (return) (binary_expression (identifier) (+) (identifier)) (;)) (}))))