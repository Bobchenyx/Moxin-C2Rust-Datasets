(translation_unit (comment) (comment) (comment) (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<=) (subscript_expression (identifier) ([) (identifier) (]))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (identifier)) (]))) ())) (>=) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (identifier)) (])))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (identifier))) (;)) (}))) (}))) (return_statement (return) (identifier) (;)) (}))) (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (+=) (number_literal)) (;)) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (subscript_expression (identifier) ([) (identifier) (]))) ())) (>=) (binary_expression (identifier) (-) (number_literal))) ())) (compound_statement ({) (return_statement (return) (;)) (}))) (comment) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) ())))) (;)) (comment) (comment) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) (,) (identifier) ()))) (;)) (return_statement (return) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (null (NULL)) (==) (identifier)) ())) (||) (parenthesized_expression (() (binary_expression (number_literal) (==) (identifier)) ()))) ())) (return_statement (return) (identifier) (;))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (pointer_expression (&) (identifier)) (,) (number_literal) ()))) (;)) (return_statement (return) (identifier) (;)) (}))) (comment))