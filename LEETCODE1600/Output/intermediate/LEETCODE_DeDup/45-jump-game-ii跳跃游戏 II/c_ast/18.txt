(translation_unit (comment) (preproc_def (#define) (identifier) (preproc_arg)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (parenthesized_expression (() (binary_expression (identifier) (-) (number_literal)) ()))) (;) ()) (compound_statement ({) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (binary_expression (binary_expression (identifier) (-) (number_literal)) (-) (subscript_expression (identifier) ([) (identifier) (]))) (-) (identifier))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (+) (subscript_expression (identifier) ([) (identifier) (])))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (string_literal (") (string_content) (escape_sequence) (")) (,) (identifier) (,) (identifier) ()))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>=) (parenthesized_expression (() (binary_expression (identifier) (-) (number_literal)) ()))) ())) (compound_statement ({) (comment) (expression_statement (update_expression (identifier) (++)) (;)) (break_statement (break) (;)) (}))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ()))) (;)) (binary_expression (identifier) (<=) (parenthesized_expression (() (binary_expression (identifier) (+) (subscript_expression (identifier) ([) (identifier) (]))) ()))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (binary_expression (binary_expression (identifier) (-) (number_literal)) (-) (subscript_expression (identifier) ([) (identifier) (]))) (-) (identifier))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (compound_statement ({) (comment) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (}))) (}))) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (return_statement (return) (identifier) (;)) (}))))