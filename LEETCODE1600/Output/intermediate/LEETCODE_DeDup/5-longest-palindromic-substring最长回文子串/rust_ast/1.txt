(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (type_identifier)) ())) (->) (type_identifier) (block ({) (let_declaration (let) (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (;)) (expression_statement (if_expression (if) (binary_expression (identifier) (<) (integer_literal)) (block ({) (expression_statement (return_expression (return) (identifier)) (;)) (})))) (let_declaration (let) (mutable_specifier) (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (>))) (=) (macro_invocation (identifier) (!) (token_tree ([) (identifier) (!) (token_tree ([) (boolean_literal (false)) (;) (identifier) (])) (;) (identifier) (]))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (call_expression (field_expression (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (macro_invocation (identifier) (!) (token_tree ([) (identifier) (token_tree ([) (integer_literal) (])) (]))) ()))) (.) (field_identifier)) (arguments (() ()))) (;)) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (identifier)) (block ({) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (identifier)) (block ({) (expression_statement (if_expression (if) (binary_expression (binary_expression (index_expression (identifier) ([) (identifier) (])) (==) (index_expression (identifier) ([) (identifier) (]))) (&&) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (binary_expression (identifier) (-) (identifier)) (+) (integer_literal)) (<=) (integer_literal)) (||) (index_expression (index_expression (identifier) ([) (binary_expression (identifier) (+) (integer_literal)) (])) ([) (binary_expression (identifier) (-) (integer_literal)) (]))) ()))) (block ({) (expression_statement (assignment_expression (index_expression (index_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (=) (boolean_literal (true))) (;)) (expression_statement (if_expression (if) (binary_expression (binary_expression (binary_expression (identifier) (-) (identifier)) (+) (integer_literal)) (>) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ())))) (block ({) (expression_statement (assignment_expression (identifier) (=) (call_expression (field_expression (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (call_expression (field_expression (index_expression (identifier) ([) (range_expression (identifier) (..) (binary_expression (identifier) (+) (integer_literal))) (])) (.) (field_identifier)) (arguments (() ()))) ()))) (.) (field_identifier)) (arguments (() ())))) (;)) (})))) (})))) (})))) (})))) (identifier) (}))) (}))))