(source_file (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (type_identifier)) ())) (->) (type_identifier) (block ({) (let_declaration (let) (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (=) (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (;)) (let_declaration (let) (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (;)) (expression_statement (if_expression (if) (binary_expression (identifier) (<=) (integer_literal)) (block ({) (expression_statement (return_expression (return) (identifier)) (;)) (})))) (let_declaration (let) (tuple_pattern (() (mut_pattern (mutable_specifier) (identifier)) (,) (mut_pattern (mutable_specifier) (identifier)) (,) (mut_pattern (mutable_specifier) (identifier)) (,) (mut_pattern (mutable_specifier) (identifier)) (,) (mut_pattern (mutable_specifier) (identifier)) ())) (=) (tuple_expression (() (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) ())) (;)) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (identifier)) (block ({) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (expression_statement (while_expression (while) (binary_expression (binary_expression (identifier) (>) (integer_literal)) (&&) (binary_expression (index_expression (identifier) ([) (binary_expression (identifier) (-) (integer_literal)) (])) (==) (index_expression (identifier) ([) (identifier) (])))) (block ({) (expression_statement (compound_assignment_expr (identifier) (-=) (integer_literal)) (;)) (})))) (expression_statement (while_expression (while) (binary_expression (binary_expression (identifier) (<) (binary_expression (identifier) (-) (integer_literal))) (&&) (binary_expression (index_expression (identifier) ([) (binary_expression (identifier) (+) (integer_literal)) (])) (==) (index_expression (identifier) ([) (identifier) (])))) (block ({) (expression_statement (compound_assignment_expr (identifier) (+=) (integer_literal)) (;)) (})))) (expression_statement (while_expression (while) (binary_expression (binary_expression (binary_expression (identifier) (>) (integer_literal)) (&&) (binary_expression (identifier) (<) (binary_expression (identifier) (-) (integer_literal)))) (&&) (binary_expression (index_expression (identifier) ([) (binary_expression (identifier) (-) (integer_literal)) (])) (==) (index_expression (identifier) ([) (binary_expression (identifier) (+) (integer_literal)) (])))) (block ({) (expression_statement (compound_assignment_expr (identifier) (-=) (integer_literal)) (;)) (expression_statement (compound_assignment_expr (identifier) (+=) (integer_literal)) (;)) (})))) (expression_statement (if_expression (if) (binary_expression (binary_expression (identifier) (-) (identifier)) (>) (identifier)) (block ({) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (-) (identifier))) (;)) (})))) (})))) (call_expression (field_expression (index_expression (identifier) ([) (range_expression (identifier) (..) (binary_expression (identifier) (+) (integer_literal))) (])) (.) (field_identifier)) (arguments (() ()))) (}))))