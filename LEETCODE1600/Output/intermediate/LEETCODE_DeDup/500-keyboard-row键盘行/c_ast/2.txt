(translation_unit (comment) (comment) (type_definition (typedef) (struct_specifier (struct) (type_identifier) (field_declaration_list ({) (field_declaration (primitive_type) (pointer_declarator (*) (field_identifier)) (;)) (field_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (field_identifier)) (;)) (}))) (type_identifier) (;)) (function_definition (type_identifier) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (type_identifier) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (sizeof_expression (sizeof) (parenthesized_expression (() (identifier) ()))) ()))))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (number_literal)) (;)) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (identifier)) (;)) (}))) (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (!=) (number_literal)) ())) (compound_statement ({) (expression_statement (update_expression (++) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (}))) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (!=) (number_literal)) ())) (compound_statement ({) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (}))) (}))) (comment) (function_definition (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))))) (compound_statement ({) (comment) (declaration (primitive_type) (array_declarator (identifier) ([) (number_literal) (])) (;)) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (call_expression (identifier) (argument_list (() (number_literal) ())))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (char_literal (') (character) (')) (-) (char_literal (') (character) ('))) (])) (=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (char_literal (') (character) (')) (-) (char_literal (') (character) ('))) (])) (=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (char_literal (') (character) (')) (-) (char_literal (') (character) ('))) (])) (=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (char_literal (') (character) (')) (-) (char_literal (') (character) ('))) (])) (=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (char_literal (') (character) (')) (-) (char_literal (') (character) ('))) (])) (=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (char_literal (') (character) (')) (-) (char_literal (') (character) ('))) (])) (=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (char_literal (') (character) (')) (-) (char_literal (') (character) ('))) (])) (=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (char_literal (') (character) (')) (-) (char_literal (') (character) ('))) (])) (=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (char_literal (') (character) (')) (-) (char_literal (') (character) ('))) (])) (=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (char_literal (') (character) (')) (-) (char_literal (') (character) ('))) (])) (=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (char_literal (') (character) (')) (-) (char_literal (') (character) ('))) (])) (=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (char_literal (') (character) (')) (-) (char_literal (') (character) ('))) (])) (=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (char_literal (') (character) (')) (-) (char_literal (') (character) ('))) (])) (=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (char_literal (') (character) (')) (-) (char_literal (') (character) ('))) (])) (=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (char_literal (') (character) (')) (-) (char_literal (') (character) ('))) (])) (=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (char_literal (') (character) (')) (-) (char_literal (') (character) ('))) (])) (=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (char_literal (') (character) (')) (-) (char_literal (') (character) ('))) (])) (=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (char_literal (') (character) (')) (-) (char_literal (') (character) ('))) (])) (=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (char_literal (') (character) (')) (-) (char_literal (') (character) ('))) (])) (=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (char_literal (') (character) (')) (-) (char_literal (') (character) ('))) (])) (=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (char_literal (') (character) (')) (-) (char_literal (') (character) ('))) (])) (=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (char_literal (') (character) (')) (-) (char_literal (') (character) ('))) (])) (=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (char_literal (') (character) (')) (-) (char_literal (') (character) ('))) (])) (=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (char_literal (') (character) (')) (-) (char_literal (') (character) ('))) (])) (=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (char_literal (') (character) (')) (-) (char_literal (') (character) ('))) (])) (=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (char_literal (') (character) (')) (-) (char_literal (') (character) ('))) (])) (=) (number_literal)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (++) (identifier)) ()) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (subscript_expression (identifier) ([) (binary_expression (parenthesized_expression (() (conditional_expression (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (number_literal) (])) (<) (char_literal (') (character) ('))) (?) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (number_literal) (])) (+) (parenthesized_expression (() (binary_expression (char_literal (') (character) (')) (-) (char_literal (') (character) ('))) ()))) (:) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (number_literal) (]))) ())) (-) (char_literal (') (character) ('))) (]))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (!=) (char_literal (') (escape_sequence) ('))) (;) (update_expression (++) (identifier)) ()) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (!=) (subscript_expression (identifier) ([) (binary_expression (parenthesized_expression (() (conditional_expression (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (<) (char_literal (') (character) ('))) (?) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (+) (parenthesized_expression (() (binary_expression (char_literal (') (character) (')) (-) (char_literal (') (character) ('))) ()))) (:) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (]))) ())) (-) (char_literal (') (character) ('))) (]))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (break_statement (break) (;)) (})))) (if_statement (if) (parenthesized_expression (() (identifier) ())) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (subscript_expression (identifier) ([) (identifier) (])) ()))) (;))) (}))) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (identifier))) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*) (abstract_pointer_declarator (*)))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ())) (*) (pointer_expression (*) (identifier))) ()))))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (pointer_expression (*) (identifier))) (;) (update_expression (++) (identifier)) ()) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (return_statement (return) (identifier) (;)) (}))))