(translation_unit (ERROR (identifier) ([) (])) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (number_literal) (==) (identifier)) (||) (parenthesized_expression (() (binary_expression (identifier) (&) (number_literal)) ()))) ())) (return_statement (return) (false) (;))) (declaration (primitive_type) (identifier) (,) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (++) (identifier)) ()) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (%) (identifier)) (==) (number_literal)) ())) (expression_statement (assignment_expression (identifier) (+=) (binary_expression (identifier) (+) (binary_expression (identifier) (/) (identifier)))) (;)))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (%) (identifier)) (==) (number_literal)) ())) (expression_statement (assignment_expression (identifier) (+=) (conditional_expression (parenthesized_expression (() (binary_expression (binary_expression (identifier) (/) (identifier)) (==) (identifier)) ())) (?) (identifier) (:) (binary_expression (identifier) (+) (binary_expression (identifier) (/) (identifier))))) (;))) (return_statement (return) (binary_expression (identifier) (==) (identifier)) (;)) (}))))