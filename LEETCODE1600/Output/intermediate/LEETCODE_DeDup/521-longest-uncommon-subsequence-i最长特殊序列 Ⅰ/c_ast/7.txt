(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (==) (call_expression (identifier) (argument_list (() (identifier) ())))) ())) (compound_statement ({) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (call_expression (identifier) (argument_list (() (identifier) ())))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (!=) (subscript_expression (identifier) ([) (identifier) (]))) ())) (compound_statement ({) (return_statement (return) (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (}))) (}))) (return_statement (return) (number_literal) (;)) (})) (else_clause (else) (compound_statement ({) (return_statement (return) (conditional_expression (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (>) (call_expression (identifier) (argument_list (() (identifier) ())))) (?) (call_expression (identifier) (argument_list (() (identifier) ()))) (:) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (})))) (return_statement (return) (number_literal) (;)) (}))))