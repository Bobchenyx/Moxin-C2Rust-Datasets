(translation_unit (type_definition (typedef) (struct_specifier (struct) (type_identifier) (field_declaration_list ({) (field_declaration (primitive_type) (field_identifier) (;)) (field_declaration (primitive_type) (field_identifier) (;)) (}))) (type_identifier) (;)) (preproc_def (#define) (identifier) (preproc_arg)) (preproc_def (#define) (identifier) (preproc_arg)) (declaration (primitive_type) (init_declarator (array_declarator (array_declarator (identifier) ([) (identifier) (])) ([) (identifier) (])) (=) (initializer_list ({) (initializer_list ({) (number_literal) (,) (number_literal) (})) (,) (initializer_list ({) (number_literal) (,) (number_literal) (})) (,) (initializer_list ({) (number_literal) (,) (number_literal) (})) (,) (initializer_list ({) (number_literal) (,) (number_literal) (})) (,) (initializer_list ({) (number_literal) (,) (number_literal) (})) (,) (initializer_list ({) (number_literal) (,) (number_literal) (})) (,) (initializer_list ({) (number_literal) (,) (number_literal) (})) (,) (initializer_list ({) (number_literal) (,) (number_literal) (})) (}))) (;)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (type_identifier) (identifier)) ()))) (compound_statement ({) (declaration (struct_specifier (struct) (type_identifier)) (identifier) (;)) (declaration (struct_specifier (struct) (type_identifier)) (identifier) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (field_expression (identifier) (.) (field_identifier))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (field_expression (identifier) (.) (field_identifier))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (binary_expression (field_expression (identifier) (.) (field_identifier)) (+) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (number_literal) (])))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (binary_expression (field_expression (identifier) (.) (field_identifier)) (+) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (number_literal) (])))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (parenthesized_expression (() (binary_expression (number_literal) (<=) (field_expression (identifier) (.) (field_identifier))) ())) (&&) (parenthesized_expression (() (binary_expression (identifier) (>) (field_expression (identifier) (.) (field_identifier))) ()))) (&&) (parenthesized_expression (() (binary_expression (number_literal) (<=) (field_expression (identifier) (.) (field_identifier))) ()))) (&&) (parenthesized_expression (() (binary_expression (identifier) (>) (field_expression (identifier) (.) (field_identifier))) ()))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (char_literal (') (character) (')) (==) (subscript_expression (subscript_expression (identifier) ([) (field_expression (identifier) (.) (field_identifier)) (])) ([) (field_expression (identifier) (.) (field_identifier)) (]))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (}))) (}))) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (type_identifier) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) (,) (identifier) ())))) (;)) (declaration (struct_specifier (struct) (type_identifier)) (identifier) (;)) (declaration (struct_specifier (struct) (type_identifier)) (identifier) (;)) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (field_expression (identifier) (.) (field_identifier))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (field_expression (identifier) (.) (field_identifier))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (number_literal) (<) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (field_expression (identifier) (.) (field_identifier)) (])) ([) (field_expression (identifier) (.) (field_identifier)) (])) (=) (binary_expression (identifier) (+) (char_literal (') (character) (')))) (;)) (})) (else_clause (else) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (field_expression (identifier) (.) (field_identifier)) (])) ([) (field_expression (identifier) (.) (field_identifier)) (])) (=) (char_literal (') (character) ('))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (binary_expression (field_expression (identifier) (.) (field_identifier)) (+) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (number_literal) (])))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (binary_expression (field_expression (identifier) (.) (field_identifier)) (+) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (number_literal) (])))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (binary_expression (parenthesized_expression (() (binary_expression (number_literal) (<=) (field_expression (identifier) (.) (field_identifier))) ())) (&&) (parenthesized_expression (() (binary_expression (identifier) (>) (field_expression (identifier) (.) (field_identifier))) ()))) (&&) (parenthesized_expression (() (binary_expression (number_literal) (<=) (field_expression (identifier) (.) (field_identifier))) ()))) (&&) (parenthesized_expression (() (binary_expression (identifier) (>) (field_expression (identifier) (.) (field_identifier))) ()))) (&&) (parenthesized_expression (() (binary_expression (char_literal (') (character) (')) (==) (subscript_expression (subscript_expression (identifier) ([) (field_expression (identifier) (.) (field_identifier)) (])) ([) (field_expression (identifier) (.) (field_identifier)) (]))) ()))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) (,) (identifier) ()))) (;)) (}))) (}))) (})))) (}))) (function_definition (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) ()))))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (binary_expression (binary_expression (binary_expression (parenthesized_expression (() (binary_expression (number_literal) (==) (identifier)) ())) (||) (parenthesized_expression (() (binary_expression (number_literal) (==) (identifier)) ()))) (||) (parenthesized_expression (() (binary_expression (number_literal) (==) (pointer_expression (*) (identifier))) ()))) (||) (parenthesized_expression (() (binary_expression (number_literal) (==) (identifier)) ()))) (||) (parenthesized_expression (() (binary_expression (number_literal) (==) (pointer_expression (*) (identifier))) ()))) (||) (parenthesized_expression (() (binary_expression (number_literal) (==) (identifier)) ()))) (||) (parenthesized_expression (() (binary_expression (number_literal) (==) (identifier)) ()))) ())) (compound_statement ({) (return_statement (return) (number_literal) (;)) (}))) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (identifier)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (char_literal (') (character) (')) (==) (subscript_expression (subscript_expression (identifier) ([) (subscript_expression (identifier) ([) (number_literal) (])) (])) ([) (subscript_expression (identifier) ([) (number_literal) (])) (]))) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (subscript_expression (identifier) ([) (number_literal) (])) (])) ([) (subscript_expression (identifier) ([) (number_literal) (])) (])) (=) (char_literal (') (character) ('))) (;)) (return_statement (return) (identifier) (;)) (}))) (declaration (struct_specifier (struct) (type_identifier)) (identifier) (;)) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (subscript_expression (identifier) ([) (number_literal) (]))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (subscript_expression (identifier) ([) (number_literal) (]))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (pointer_expression (*) (identifier)) (,) (identifier) ()))) (;)) (return_statement (return) (identifier) (;)) (}))))