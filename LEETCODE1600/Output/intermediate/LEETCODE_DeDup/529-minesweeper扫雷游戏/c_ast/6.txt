(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (comment) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (-) (number_literal)) (>=) (number_literal)) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) ([) (identifier) (])) (==) (char_literal (') (character) ('))) ())) (expression_statement (update_expression (identifier) (++)) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (-) (number_literal)) (>=) (number_literal)) (&&) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) ([) (binary_expression (identifier) (-) (number_literal)) (])) (==) (char_literal (') (character) (')))) ())) (expression_statement (update_expression (identifier) (++)) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (+) (number_literal)) (<) (identifier)) (&&) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) ([) (binary_expression (identifier) (+) (number_literal)) (])) (==) (char_literal (') (character) (')))) ())) (expression_statement (update_expression (identifier) (++)) (;))) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (-) (number_literal)) (>=) (number_literal)) (&&) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (binary_expression (identifier) (-) (number_literal)) (])) (==) (char_literal (') (character) (')))) ())) (expression_statement (update_expression (identifier) (++)) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (+) (number_literal)) (<) (identifier)) (&&) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (binary_expression (identifier) (+) (number_literal)) (])) (==) (char_literal (') (character) (')))) ())) (expression_statement (update_expression (identifier) (++)) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (+) (number_literal)) (<) (identifier)) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) ([) (identifier) (])) (==) (char_literal (') (character) ('))) ())) (expression_statement (update_expression (identifier) (++)) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (-) (number_literal)) (>=) (number_literal)) (&&) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) ([) (binary_expression (identifier) (-) (number_literal)) (])) (==) (char_literal (') (character) (')))) ())) (expression_statement (update_expression (identifier) (++)) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (+) (number_literal)) (<) (identifier)) (&&) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) ([) (binary_expression (identifier) (+) (number_literal)) (])) (==) (char_literal (') (character) (')))) ())) (expression_statement (update_expression (identifier) (++)) (;))) (}))) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) (,) (identifier) (,) (identifier) ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>) (number_literal)) ())) (comment) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (=) (binary_expression (identifier) (+) (char_literal (') (character) (')))) (;)) (})) (else_clause (else) (comment) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (=) (char_literal (') (character) ('))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (+) (number_literal)) (<) (identifier)) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) ([) (identifier) (])) (==) (char_literal (') (character) ('))) ())) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (identifier) (+) (number_literal)) (,) (identifier) (,) (identifier) (,) (identifier) (,) (identifier) ()))) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (+) (number_literal)) (<) (identifier)) (&&) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) ([) (binary_expression (identifier) (+) (number_literal)) (])) (==) (char_literal (') (character) (')))) ())) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (identifier) (+) (number_literal)) (,) (binary_expression (identifier) (+) (number_literal)) (,) (identifier) (,) (identifier) (,) (identifier) ()))) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (-) (number_literal)) (>=) (number_literal)) (&&) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) ([) (binary_expression (identifier) (-) (number_literal)) (])) (==) (char_literal (') (character) (')))) ())) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (identifier) (+) (number_literal)) (,) (binary_expression (identifier) (-) (number_literal)) (,) (identifier) (,) (identifier) (,) (identifier) ()))) (;))) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (-) (number_literal)) (>=) (number_literal)) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) ([) (identifier) (])) (==) (char_literal (') (character) ('))) ())) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (identifier) (-) (number_literal)) (,) (identifier) (,) (identifier) (,) (identifier) (,) (identifier) ()))) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (+) (number_literal)) (<) (identifier)) (&&) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) ([) (binary_expression (identifier) (+) (number_literal)) (])) (==) (char_literal (') (character) (')))) ())) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (identifier) (-) (number_literal)) (,) (binary_expression (identifier) (+) (number_literal)) (,) (identifier) (,) (identifier) (,) (identifier) ()))) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (-) (number_literal)) (>=) (number_literal)) (&&) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) ([) (binary_expression (identifier) (-) (number_literal)) (])) (==) (char_literal (') (character) (')))) ())) (expression_statement (call_expression (identifier) (argument_list (() (binary_expression (identifier) (-) (number_literal)) (,) (binary_expression (identifier) (-) (number_literal)) (,) (identifier) (,) (identifier) (,) (identifier) ()))) (;))) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (+) (number_literal)) (<) (identifier)) (&&) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (binary_expression (identifier) (+) (number_literal)) (])) (==) (char_literal (') (character) (')))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (identifier) (+) (number_literal)) (,) (identifier) (,) (identifier) (,) (identifier) ()))) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (-) (number_literal)) (>=) (number_literal)) (&&) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (binary_expression (identifier) (-) (number_literal)) (])) (==) (char_literal (') (character) (')))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (identifier) (-) (number_literal)) (,) (identifier) (,) (identifier) (,) (identifier) ()))) (;)) (}))) (})))) (}))) (function_definition (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) ()))))) (compound_statement ({) (declaration (primitive_type) (identifier) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (identifier)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (subscript_expression (identifier) ([) (number_literal) (])) (])) ([) (subscript_expression (identifier) ([) (number_literal) (])) (])) (==) (char_literal (') (character) ('))) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (subscript_expression (identifier) ([) (number_literal) (])) (])) ([) (subscript_expression (identifier) ([) (number_literal) (])) (])) (=) (char_literal (') (character) ('))) (;)) (return_statement (return) (identifier) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (number_literal) (])) (,) (subscript_expression (identifier) ([) (number_literal) (])) (,) (identifier) (,) (identifier) (,) (subscript_expression (identifier) ([) (number_literal) (])) ()))) (;)) (return_statement (return) (identifier) (;)) (}))))