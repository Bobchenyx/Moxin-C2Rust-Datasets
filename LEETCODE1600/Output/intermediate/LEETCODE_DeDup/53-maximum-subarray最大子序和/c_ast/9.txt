(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (-) (identifier)) (==) (number_literal)) ())) (comment) (return_statement (return) (subscript_expression (identifier) ([) (identifier) (])) (;))) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (+) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (-) (identifier)) ())) (/) (number_literal)))) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) ()))) (,) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) ()))) ())))) (;)) (comment) (declaration (primitive_type) (identifier) (,) (identifier) (,) (identifier) (;)) (expression_statement (comma_expression (assignment_expression (identifier) (=) (number_literal)) (,) (assignment_expression (identifier) (=) (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])))) (;)) (comment) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (binary_expression (identifier) (>=) (identifier)) (;) (update_expression (identifier) (--)) ()) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (assignment_expression (identifier) (+=) (subscript_expression (identifier) ([) (identifier) (]))) ())))) (;))) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (comment) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (identifier)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (assignment_expression (identifier) (+=) (subscript_expression (identifier) ([) (identifier) (]))) (,) (identifier) ())))) (;))) (return_statement (return) (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (identifier) (+) (identifier)) ()))) (;)) (comment) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (return_statement (return) (conditional_expression (binary_expression (identifier) (>=) (identifier)) (?) (identifier) (:) (identifier)) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (return_statement (return) (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (identifier) ()))) (;)) (}))))