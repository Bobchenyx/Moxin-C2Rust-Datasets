(source_file (block_comment (/*) (*/)) (line_comment (//)) (impl_item (impl) (type_identifier) (declaration_list ({) (attribute_item (#) ([) (attribute (identifier) (token_tree (() (identifier) (::) (identifier) ()))) (])) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (>)))) ())) (->) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (macro_invocation (identifier) (!) (token_tree ([) (]))) (;)) (expression_statement (if_expression (if) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (block ({) (expression_statement (return_expression (return) (identifier)) (;)) (})))) (expression_statement (if_expression (if) (call_expression (field_expression (index_expression (identifier) ([) (integer_literal) (])) (.) (field_identifier)) (arguments (() ()))) (block ({) (expression_statement (return_expression (return) (identifier)) (;)) (})))) (let_declaration (let) (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (;)) (let_declaration (let) (identifier) (=) (call_expression (field_expression (index_expression (identifier) ([) (integer_literal) (])) (.) (field_identifier)) (arguments (() ()))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (identifier) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (identifier) (;)) (expression_statement (while_expression (while) (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (<) (binary_expression (identifier) (*) (identifier))) (block ({) (expression_statement (for_expression (for) (identifier) (in) (range_expression (identifier) (..) (identifier)) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (index_expression (index_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) ()))) (;)) (})))) (expression_statement (compound_assignment_expr (identifier) (+=) (integer_literal)) (;)) (expression_statement (for_expression (for) (identifier) (in) (range_expression (identifier) (..) (identifier)) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (index_expression (index_expression (identifier) ([) (identifier) (])) ([) (binary_expression (identifier) (-) (integer_literal)) (])) ()))) (;)) (})))) (expression_statement (compound_assignment_expr (identifier) (-=) (integer_literal)) (;)) (expression_statement (if_expression (if) (binary_expression (identifier) (<=) (identifier)) (block ({) (expression_statement (break_expression (break)) (;)) (})))) (expression_statement (for_expression (for) (identifier) (in) (call_expression (field_expression (parenthesized_expression (() (range_expression (identifier) (..) (identifier)) ())) (.) (field_identifier)) (arguments (() ()))) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (index_expression (index_expression (identifier) ([) (binary_expression (identifier) (-) (integer_literal)) (])) ([) (identifier) (])) ()))) (;)) (})))) (expression_statement (compound_assignment_expr (identifier) (-=) (integer_literal)) (;)) (expression_statement (if_expression (if) (binary_expression (identifier) (>=) (identifier)) (block ({) (expression_statement (break_expression (break)) (;)) (})))) (expression_statement (for_expression (for) (identifier) (in) (call_expression (field_expression (parenthesized_expression (() (range_expression (identifier) (..) (identifier)) ())) (.) (field_identifier)) (arguments (() ()))) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (index_expression (index_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) ()))) (;)) (})))) (expression_statement (compound_assignment_expr (identifier) (+=) (integer_literal)) (;)) (})))) (identifier) (}))) (}))) (line_comment (//)) (struct_item (struct) (type_identifier) (;)) (attribute_item (#) ([) (attribute (identifier) (token_tree (() (identifier) ()))) (])) (mod_item (mod) (identifier) (declaration_list ({) (use_declaration (use) (use_wildcard (super) (::) (*)) (;)) (use_declaration (use) (scoped_identifier (scoped_identifier (scoped_identifier (crate) (::) (identifier)) (::) (identifier)) (::) (identifier)) (;)) (attribute_item (#) ([) (attribute (identifier)) (])) (function_item (fn) (identifier) (parameters (() ())) (block ({) (expression_statement (macro_invocation (identifier) (!) (token_tree (() (identifier) (::) (identifier) (token_tree (() (identifier) (token_tree (() (&) (token_tree ([) (&) (token_tree ([) (integer_literal) (,) (integer_literal) (,) (integer_literal) (])) (,) (&) (token_tree ([) (integer_literal) (,) (integer_literal) (,) (integer_literal) (])) (,) (&) (token_tree ([) (integer_literal) (,) (integer_literal) (,) (integer_literal) (])) (])) ())) ())) (,) (token_tree ([) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (])) (.) (identifier) (token_tree (() ())) ()))) (;)) (expression_statement (macro_invocation (identifier) (!) (token_tree (() (identifier) (::) (identifier) (token_tree (() (identifier) (token_tree (() (&) (token_tree ([) (&) (token_tree ([) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (])) (,) (&) (token_tree ([) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (])) (,) (&) (token_tree ([) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (])) (])) ())) ())) (,) (token_tree ([) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (,) (integer_literal) (])) (.) (identifier) (token_tree (() ())) ()))) (;)) (}))) (}))))