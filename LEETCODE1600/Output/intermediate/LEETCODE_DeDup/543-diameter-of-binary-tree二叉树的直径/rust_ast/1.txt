(source_file (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (use_declaration (use) (scoped_identifier (scoped_identifier (identifier) (::) (identifier)) (::) (identifier)) (;)) (use_declaration (use) (scoped_identifier (scoped_identifier (identifier) (::) (identifier)) (::) (identifier)) (;)) (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (>))) (>)))) (,) (parameter (identifier) (:) (reference_type (&) (mutable_specifier) (primitive_type))) ())) (->) (primitive_type) (block ({) (expression_statement (match_expression (match) (identifier) (match_block ({) (match_arm (match_pattern (tuple_struct_pattern (identifier) (() (identifier) ()))) (=>) (block ({) (let_declaration (let) (identifier) (=) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (call_expression (field_expression (field_expression (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (.) (field_identifier)) (arguments (() ()))) (,) (identifier) ()))) (;)) (let_declaration (let) (identifier) (=) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (call_expression (field_expression (field_expression (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (.) (field_identifier)) (arguments (() ()))) (,) (identifier) ()))) (;)) (expression_statement (assignment_expression (unary_expression (*) (identifier)) (=) (call_expression (scoped_identifier (scoped_identifier (identifier) (::) (identifier)) (::) (identifier)) (arguments (() (unary_expression (*) (identifier)) (,) (binary_expression (binary_expression (identifier) (+) (identifier)) (+) (integer_literal)) ())))) (;)) (binary_expression (call_expression (scoped_identifier (scoped_identifier (identifier) (::) (identifier)) (::) (identifier)) (arguments (() (identifier) (,) (identifier) ()))) (+) (integer_literal)) (})) (,)) (match_arm (match_pattern (identifier)) (=>) (integer_literal)) (})))) (}))) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (>))) (>)))) ())) (->) (primitive_type) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (:) (primitive_type) (=) (integer_literal) (;)) (expression_statement (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (identifier) (,) (reference_expression (&) (mutable_specifier) (identifier)) ()))) (;)) (binary_expression (identifier) (-) (integer_literal)) (}))) (}))))