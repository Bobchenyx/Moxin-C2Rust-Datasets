(source_file (use_declaration (use) (scoped_identifier (scoped_identifier (identifier) (::) (identifier)) (::) (identifier)) (;)) (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (>)))) ())) (->) (primitive_type) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() ()))) (;)) (expression_statement (for_expression (for) (identifier) (in) (reference_expression (&) (identifier)) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (parenthesized_expression (() (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (-) (integer_literal)) ()))) (block ({) (expression_statement (compound_assignment_expr (identifier) (+=) (index_expression (identifier) ([) (identifier) (]))) (;)) (expression_statement (compound_assignment_expr (unary_expression (*) (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (identifier) ()))) (.) (field_identifier)) (arguments (() (integer_literal) ())))) (+=) (integer_literal)) (;)) (})))) (})))) (binary_expression (type_cast_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (as) (primitive_type)) (-) (call_expression (field_expression (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() (reference_expression (&) (integer_literal)) ())))) (}))) (}))))