(source_file (use_declaration (use) (scoped_identifier (scoped_identifier (identifier) (::) (identifier)) (::) (identifier)) (;)) (use_declaration (use) (scoped_identifier (scoped_identifier (identifier) (::) (identifier)) (::) (identifier)) (;)) (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (>))) (>)))) ())) (->) (primitive_type) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (function_item (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (>))) (>)))) (,) (parameter (identifier) (:) (reference_type (&) (mutable_specifier) (primitive_type))) ())) (block ({) (expression_statement (if_expression (if) (let_condition (let) (tuple_struct_pattern (identifier) (() (identifier) ())) (=) (identifier)) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (;)) (expression_statement (match_expression (match) (tuple_expression (() (call_expression (field_expression (field_expression (identifier) (.) (field_identifier)) (.) (field_identifier)) (arguments (() ()))) (,) (call_expression (field_expression (field_expression (identifier) (.) (field_identifier)) (.) (field_identifier)) (arguments (() ()))) ())) (match_block ({) (match_arm (match_pattern (tuple_pattern (() (identifier) (,) (identifier) ()))) (=>) (unit_expression (() ())) (,)) (match_arm (match_pattern (tuple_pattern (() (identifier) (,) (tuple_struct_pattern (identifier) (() (identifier) ())) ()))) (=>) (block ({) (expression_statement (call_expression (identifier) (arguments (() (call_expression (identifier) (arguments (() (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) ()))) (,) (identifier) ()))) (;)) (expression_statement (compound_assignment_expr (field_expression (identifier) (.) (field_identifier)) (+=) (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier))) (;)) (expression_statement (compound_assignment_expr (unary_expression (*) (identifier)) (+=) (call_expression (field_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (.) (field_identifier)) (arguments (() ())))) (;)) (})) (,)) (match_arm (match_pattern (tuple_pattern (() (tuple_struct_pattern (identifier) (() (identifier) ())) (,) (identifier) ()))) (=>) (block ({) (expression_statement (call_expression (identifier) (arguments (() (call_expression (identifier) (arguments (() (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) ()))) (,) (identifier) ()))) (;)) (expression_statement (compound_assignment_expr (field_expression (identifier) (.) (field_identifier)) (+=) (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier))) (;)) (expression_statement (compound_assignment_expr (unary_expression (*) (identifier)) (+=) (call_expression (field_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (.) (field_identifier)) (arguments (() ())))) (;)) (})) (,)) (match_arm (match_pattern (tuple_pattern (() (tuple_struct_pattern (identifier) (() (identifier) ())) (,) (tuple_struct_pattern (identifier) (() (identifier) ())) ()))) (=>) (block ({) (expression_statement (call_expression (identifier) (arguments (() (call_expression (identifier) (arguments (() (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) ()))) (,) (identifier) ()))) (;)) (expression_statement (call_expression (identifier) (arguments (() (call_expression (identifier) (arguments (() (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) ()))) (,) (identifier) ()))) (;)) (expression_statement (compound_assignment_expr (field_expression (identifier) (.) (field_identifier)) (+=) (binary_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (+) (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)))) (;)) (expression_statement (compound_assignment_expr (unary_expression (*) (identifier)) (+=) (call_expression (field_expression (parenthesized_expression (() (binary_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (-) (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier))) ())) (.) (field_identifier)) (arguments (() ())))) (;)) (}))) (})))) (})))) (}))) (expression_statement (call_expression (identifier) (arguments (() (identifier) (,) (reference_expression (&) (mutable_specifier) (identifier)) ()))) (;)) (identifier) (}))) (}))))