(translation_unit (ERROR (subscript_expression (update_expression (identifier) (++)) ([) (update_expression (unary_expression (-) (identifier)) (++)) (]))) (function_definition (type_identifier) (identifier) (compound_statement ({) (labeled_statement (statement_identifier) (:) (ERROR (type_identifier) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ())))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (return_statement (return) (identifier) (;))) (expression_statement (binary_expression (binary_expression (identifier) (<) (identifier)) (>) (call_expression (identifier) (argument_list (() (call_expression (identifier) (argument_list (() (identifier) (,) (call_expression (identifier) (argument_list (() (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ()))) ()))) ()))) ())))) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (false)) (;)) (ERROR (for) (() (declaration (primitive_type) (ERROR (identifier) (:) (identifier) ()) ({) (array_declarator (identifier) ([) (identifier) (])) (+=)) (identifier) (;)) (ERROR (call_expression (identifier) (argument_list (() (binary_expression (binary_expression (identifier) (==) (number_literal)) (||) (binary_expression (identifier) (==) (binary_expression (identifier) (-) (number_literal)))) ()))) ({)) (comment) (assignment_expression (identifier) (=) (unary_expression (!) (identifier))) (;) (ERROR (}) (assignment_expression (identifier) (+=) (conditional_expression (identifier) (?) (number_literal) (:) (number_literal))) (;) (}) (call_expression (identifier) (ERROR (identifier) (;) (for)) (argument_list (() (identifier) (ERROR (identifier) (:) (identifier)) ()))) ({)) (comment) (assignment_expression (identifier) (+=) (identifier)) (;) (}) (return) (identifier) (;)) (}))) (}))) (expression_statement (;)))