(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<=) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (*=) (identifier)) (;)) (}))) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ())))) (compound_statement ({) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (+) (number_literal)) ()))))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (char_literal (') (escape_sequence) ('))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (comment) (declaration (primitive_type) (init_declarator (array_declarator (identifier) ([) (number_literal) (])) (=) (initializer_list ({) (number_literal) (}))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (type_qualifier (const)) (primitive_type) (init_declarator (identifier) (=) (identifier)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (/) (identifier))) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (%) (identifier))) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (binary_expression (identifier) (/) (identifier)) (+) (parenthesized_expression (() (conditional_expression (binary_expression (identifier) (==) (number_literal)) (?) (number_literal) (:) (number_literal)) ())))) (;)) (comment) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<=) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (unary_expression (!) (subscript_expression (identifier) ([) (identifier) (]))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (unary_expression (!) (subscript_expression (identifier) ([) (identifier) (]))) (&&) (binary_expression (identifier) (==) (identifier))) ())) (compound_statement ({) (break_statement (break) (;)) (}))) (}))) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (number_literal)) (;)) (comment) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (identifier) (++)) (])) (=) (binary_expression (identifier) (+) (char_literal (') (character) (')))) (;)) (expression_statement (assignment_expression (identifier) (=) (parenthesized_expression (() (conditional_expression (binary_expression (identifier) (==) (number_literal)) (?) (identifier) (:) (identifier)) ()))) (;)) (comment) (expression_statement (update_expression (identifier) (--)) (;)) (}))) (return_statement (return) (identifier) (;)) (}))))