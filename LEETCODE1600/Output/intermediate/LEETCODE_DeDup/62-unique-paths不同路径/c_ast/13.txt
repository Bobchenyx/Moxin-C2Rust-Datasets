(translation_unit (declaration (primitive_type) (init_declarator (array_declarator (array_declarator (identifier) ([) (number_literal) (])) ([) (number_literal) (])) (=) (initializer_list ({) (initializer_list ({) (number_literal) (,) (number_literal) (})) (,) (initializer_list ({) (number_literal) (,) (number_literal) (})) (}))) (;)) (type_definition (typedef) (struct_specifier (struct) (type_identifier) (field_declaration_list ({) (field_declaration (primitive_type) (field_identifier) (;)) (field_declaration (primitive_type) (field_identifier) (;)) (}))) (type_identifier) (;)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (<) (number_literal)) ())) (||) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (<) (number_literal)) ()))) (||) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (>=) (field_expression (identifier) (->) (field_identifier))) ()))) (||) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (>=) (field_expression (identifier) (->) (field_identifier))) ()))) ())) (compound_statement ({) (return_statement (return) (number_literal) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (field_expression (identifier) (->) (field_identifier)) (])) ([) (field_expression (identifier) (->) (field_identifier)) (])) (!=) (number_literal)) ())) (compound_statement ({) (return_statement (return) (subscript_expression (subscript_expression (identifier) ([) (field_expression (identifier) (->) (field_identifier)) (])) ([) (field_expression (identifier) (->) (field_identifier)) (])) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (==) (field_expression (identifier) (->) (field_identifier))) ())) (&&) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (==) (field_expression (identifier) (->) (field_identifier))) ()))) ())) (compound_statement ({) (return_statement (return) (number_literal) (;)) (}))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (number_literal)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (declaration (type_identifier) (init_declarator (identifier) (=) (initializer_list ({) (initializer_pair (field_designator (.) (field_identifier)) (=) (binary_expression (field_expression (identifier) (->) (field_identifier)) (+) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (number_literal) (])))) (,) (initializer_pair (field_designator (.) (field_identifier)) (=) (binary_expression (field_expression (identifier) (->) (field_identifier)) (+) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (number_literal) (])))) (}))) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (field_expression (identifier) (->) (field_identifier)) (])) ([) (field_expression (identifier) (->) (field_identifier)) (])) (+=) (call_expression (identifier) (argument_list (() (identifier) (,) (pointer_expression (&) (identifier)) (,) (identifier) (,) (identifier) ())))) (;)) (}))) (return_statement (return) (subscript_expression (subscript_expression (identifier) ([) (field_expression (identifier) (->) (field_identifier)) (])) ([) (field_expression (identifier) (->) (field_identifier)) (])) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (<=) (number_literal)) (||) (binary_expression (identifier) (<=) (number_literal))) ())) (compound_statement ({) (return_statement (return) (number_literal) (;)) (}))) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (identifier))) (=) (null (NULL))) (;)) (expression_statement (assignment_expression (identifier) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*) (abstract_pointer_declarator (*)))) ()) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()))) ()))))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ()))) ()))))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) (,) (number_literal) (,) (binary_expression (identifier) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ()))) ()))) (;)) (}))) (declaration (type_identifier) (init_declarator (identifier) (=) (initializer_list ({) (number_literal) (}))) (;)) (declaration (type_identifier) (init_declarator (identifier) (=) (initializer_list ({) (initializer_pair (field_designator (.) (field_identifier)) (=) (identifier)) (,) (initializer_pair (field_designator (.) (field_identifier)) (=) (identifier)) (}))) (;)) (declaration (type_identifier) (init_declarator (identifier) (=) (initializer_list ({) (initializer_pair (field_designator (.) (field_identifier)) (=) (binary_expression (identifier) (-) (number_literal))) (,) (initializer_pair (field_designator (.) (field_identifier)) (=) (binary_expression (identifier) (-) (number_literal))) (}))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (pointer_expression (&) (identifier)) (,) (pointer_expression (&) (identifier)) (,) (pointer_expression (&) (identifier)) ())))) (;)) (return_statement (return) (identifier) (;)) (}))))