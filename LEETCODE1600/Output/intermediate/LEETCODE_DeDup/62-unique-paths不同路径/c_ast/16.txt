(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (||) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ()))) ())) (compound_statement ({) (return_statement (return) (number_literal) (;)) (}))) (comment) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (identifier))) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*) (abstract_pointer_declarator (*)))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ())) (*) (identifier)) ()))))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ())) (*) (identifier)) ()))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (identifier)) ()))))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (,) (number_literal) (,) (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (identifier)) ()))) (;)) (}))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (||) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ()))) ())) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (+) (identifier)) ()))) (=) (number_literal)) (;)) (})) (else_clause (else) (compound_statement ({) (comment) (expression_statement (assignment_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (+) (identifier)) ()))) (=) (binary_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (+) (identifier)) (-) (number_literal)) ()))) (+) (identifier)) ()))) (+) (pointer_expression (*) (parenthesized_expression (() (binary_expression (binary_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) (+) (identifier)) (-) (number_literal)) ()))))) (;)) (})))) (}))) (}))) (expression_statement (assignment_expression (identifier) (=) (pointer_expression (*) (parenthesized_expression (() (binary_expression (binary_expression (pointer_expression (*) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (+) (identifier)) (-) (number_literal)) ()))) (+) (identifier)) (-) (number_literal)) ())))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (pointer_expression (*) (parenthesized_expression (() (binary_expression (identifier) (+) (identifier)) ()))) ()))) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (return_statement (return) (identifier) (;)) (}))))