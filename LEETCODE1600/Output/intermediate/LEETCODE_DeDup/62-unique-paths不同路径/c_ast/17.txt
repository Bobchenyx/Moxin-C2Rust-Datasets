(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (!=) (number_literal)) (&&) (binary_expression (identifier) (!=) (number_literal))) ())) (return_statement (return) (call_expression (identifier) (argument_list (() (parenthesized_expression (() (binary_expression (binary_expression (identifier) (+) (identifier)) (-) (number_literal)) ())) (,) (conditional_expression (binary_expression (parenthesized_expression (() (binary_expression (identifier) (-) (number_literal)) ())) (<) (parenthesized_expression (() (binary_expression (identifier) (-) (number_literal)) ()))) (?) (parenthesized_expression (() (binary_expression (identifier) (-) (number_literal)) ())) (:) (parenthesized_expression (() (binary_expression (identifier) (-) (number_literal)) ()))) ()))) (;)) (else_clause (else) (return_statement (return) (number_literal) (;)))) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (comment) (declaration (sized_type_specifier (long)) (identifier) (,) (init_declarator (identifier) (=) (identifier)) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (parenthesized_expression (() (conditional_expression (binary_expression (identifier) (<) (parenthesized_expression (() (binary_expression (identifier) (-) (identifier)) ()))) (?) (identifier) (:) (parenthesized_expression (() (binary_expression (identifier) (-) (identifier)) ()))) ()))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (*=) (parenthesized_expression (() (binary_expression (identifier) (-) (identifier)) ()))) (;)) (}))) (return_statement (return) (binary_expression (identifier) (/) (call_expression (identifier) (argument_list (() (conditional_expression (binary_expression (identifier) (<) (parenthesized_expression (() (binary_expression (identifier) (-) (identifier)) ()))) (?) (identifier) (:) (parenthesized_expression (() (binary_expression (identifier) (-) (identifier)) ()))) ())))) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<=) (number_literal)) ())) (return_statement (return) (number_literal) (;)) (else_clause (else) (return_statement (return) (binary_expression (identifier) (*) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (-) (number_literal)) ())))) (;)))) (}))))