(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (identifier) (,) (identifier) (;)) (declaration (primitive_type) (identifier) (,) (identifier) (;)) (declaration (sized_type_specifier (long) (long) (primitive_type)) (array_declarator (array_declarator (identifier) ([) (number_literal) (])) ([) (number_literal) (])) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (==) (null (NULL))) (||) (binary_expression (identifier) (<=) (number_literal))) (||) (binary_expression (identifier) (==) (null (NULL)))) ())) (return_statement (return) (number_literal) (;))) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (subscript_expression (identifier) ([) (number_literal) (]))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (string_literal (") (string_content) (escape_sequence) (")) (,) (identifier) (,) (identifier) ()))) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (comment) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (=) (number_literal)) (;))) (}))) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (number_literal) (])) ([) (number_literal) (])) (=) (conditional_expression (binary_expression (subscript_expression (subscript_expression (identifier) ([) (number_literal) (])) ([) (number_literal) (])) (==) (number_literal)) (?) (number_literal) (:) (number_literal))) (;)) (comment) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (==) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (+=) (conditional_expression (binary_expression (identifier) (>) (number_literal)) (?) (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) ([) (identifier) (])) (:) (number_literal))) (;)) (comment) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (+=) (conditional_expression (binary_expression (identifier) (>) (number_literal)) (?) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (binary_expression (identifier) (-) (number_literal)) (])) (:) (number_literal))) (;)) (comment) (}))) (}))) (}))) (return_statement (return) (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) ([) (binary_expression (identifier) (-) (number_literal)) (])) (;)) (}))))