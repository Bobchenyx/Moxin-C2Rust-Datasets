(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (>)))) ())) (->) (primitive_type) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (identifier) (;)) (let_declaration (let) (identifier) (=) (call_expression (field_expression (index_expression (identifier) ([) (integer_literal) (])) (.) (field_identifier)) (arguments (() ()))) (;)) (let_declaration (let) (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (;)) (line_comment (//)) (expression_statement (if_expression (if) (binary_expression (index_expression (index_expression (identifier) ([) (integer_literal) (])) ([) (integer_literal) (])) (==) (integer_literal)) (block ({) (expression_statement (return_expression (return) (integer_literal)) (;)) (})))) (line_comment (//)) (expression_statement (assignment_expression (index_expression (index_expression (identifier) ([) (integer_literal) (])) ([) (integer_literal) (])) (=) (integer_literal)) (;)) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (identifier)) (block ({) (line_comment (//)) (expression_statement (if_expression (if) (binary_expression (binary_expression (index_expression (index_expression (identifier) ([) (integer_literal) (])) ([) (identifier) (])) (==) (integer_literal)) (||) (binary_expression (index_expression (index_expression (identifier) ([) (integer_literal) (])) ([) (binary_expression (identifier) (-) (integer_literal)) (])) (==) (integer_literal))) (block ({) (expression_statement (assignment_expression (index_expression (index_expression (identifier) ([) (integer_literal) (])) ([) (identifier) (])) (=) (integer_literal)) (;)) (})) (else_clause (else) (block ({) (expression_statement (assignment_expression (index_expression (index_expression (identifier) ([) (integer_literal) (])) ([) (identifier) (])) (=) (integer_literal)) (;)) (}))))) (})))) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (identifier)) (block ({) (line_comment (//)) (expression_statement (if_expression (if) (binary_expression (binary_expression (index_expression (index_expression (identifier) ([) (identifier) (])) ([) (integer_literal) (])) (==) (integer_literal)) (||) (binary_expression (index_expression (index_expression (identifier) ([) (binary_expression (identifier) (-) (integer_literal)) (])) ([) (integer_literal) (])) (==) (integer_literal))) (block ({) (expression_statement (assignment_expression (index_expression (index_expression (identifier) ([) (identifier) (])) ([) (integer_literal) (])) (=) (integer_literal)) (;)) (})) (else_clause (else) (block ({) (expression_statement (assignment_expression (index_expression (index_expression (identifier) ([) (identifier) (])) ([) (integer_literal) (])) (=) (integer_literal)) (;)) (}))))) (})))) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (identifier)) (block ({) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (identifier)) (block ({) (line_comment (//)) (expression_statement (if_expression (if) (binary_expression (index_expression (index_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (==) (integer_literal)) (block ({) (expression_statement (assignment_expression (index_expression (index_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (=) (integer_literal)) (;)) (})) (else_clause (else) (block ({) (line_comment (//)) (expression_statement (assignment_expression (index_expression (index_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (=) (binary_expression (index_expression (index_expression (identifier) ([) (binary_expression (identifier) (-) (integer_literal)) (])) ([) (identifier) (])) (+) (index_expression (index_expression (identifier) ([) (identifier) (])) ([) (binary_expression (identifier) (-) (integer_literal)) (])))) (;)) (}))))) (})))) (})))) (index_expression (index_expression (identifier) ([) (binary_expression (identifier) (-) (integer_literal)) (])) ([) (binary_expression (identifier) (-) (integer_literal)) (])) (}))) (}))))