(translation_unit (function_definition (type_identifier) (identifier) (compound_statement ({) (ERROR (binary_expression (binary_expression (identifier) (ERROR (:) (primitive_type) (identifier) (() (identifier)) (<) (identifier)) (<) (binary_expression (identifier) (>>) (pointer_expression (&) (identifier)))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ()))) ())) (compound_statement ({) (comment) (return_statement (return) (number_literal) (;)) (}))) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (argument_list (() ())))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (field_expression (subscript_expression (identifier) ([) (number_literal) (])) (.) (field_identifier)) (argument_list (() ())))) (;)) (expression_statement (binary_expression (binary_expression (identifier) (<) (identifier)) (<) (binary_expression (identifier) (>>) (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (binary_expression (identifier) (<) (identifier)) (>) (parenthesized_expression (() (comma_expression (identifier) (,) (number_literal)) ()))) ()))))) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (number_literal) (])) ([) (number_literal) (])) (=) (subscript_expression (subscript_expression (identifier) ([) (number_literal) (])) ([) (number_literal) (]))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (comment) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (number_literal) (])) (=) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) ([) (number_literal) (])) (+) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (number_literal) (])))) (;)) (}))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (comment) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (number_literal) (])) ([) (identifier) (])) (=) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (number_literal) (])) ([) (binary_expression (identifier) (-) (number_literal)) (])) (+) (subscript_expression (subscript_expression (identifier) ([) (number_literal) (])) ([) (identifier) (])))) (;)) (}))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (comment) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (=) (call_expression (identifier) (argument_list (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) ([) (identifier) (])) (+) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (]))) (,) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (binary_expression (identifier) (-) (number_literal)) (])) (+) (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (]))) ())))) (;)) (}))) (}))) (return_statement (return) (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) ([) (binary_expression (identifier) (-) (number_literal)) (])) (;)) (})) (}))) (expression_statement (;)))