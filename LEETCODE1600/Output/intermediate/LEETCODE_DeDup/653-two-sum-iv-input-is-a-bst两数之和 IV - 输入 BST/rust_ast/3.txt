(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (>))) (>)))) (,) (parameter (identifier) (:) (primitive_type)) ())) (->) (primitive_type) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (boolean_literal (false)) (;)) (expression_statement (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (reference_expression (&) (identifier)) (,) (reference_expression (&) (identifier)) (,) (identifier) (,) (reference_expression (&) (mutable_specifier) (identifier)) ()))) (;)) (identifier) (}))) (function_item (fn) (identifier) (parameters (() (parameter (identifier) (:) (reference_type (&) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (>))) (>))))) (,) (parameter (identifier) (:) (reference_type (&) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (>))) (>))))) (,) (parameter (identifier) (:) (primitive_type)) (,) (parameter (identifier) (:) (reference_type (&) (mutable_specifier) (primitive_type))) ())) (block ({) (expression_statement (if_expression (if) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (block ({) (expression_statement (return_expression (return)) (;)) (})))) (expression_statement (if_expression (if) (unary_expression (*) (identifier)) (block ({) (expression_statement (return_expression (return)) (;)) (})))) (let_declaration (let) (identifier) (=) (call_expression (field_expression (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (;)) (let_declaration (let) (identifier) (=) (binary_expression (identifier) (-) (field_expression (identifier) (.) (field_identifier))) (;)) (expression_statement (if_expression (if) (binary_expression (identifier) (<=) (field_expression (identifier) (.) (field_identifier))) (block ({) (expression_statement (if_expression (if) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (reference_expression (&) (field_expression (identifier) (.) (field_identifier))) (,) (identifier) ()))) (block ({) (expression_statement (assignment_expression (unary_expression (*) (identifier)) (=) (boolean_literal (true))) (;)) (})))) (})) (else_clause (else) (block ({) (expression_statement (if_expression (if) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (identifier) (,) (identifier) ()))) (block ({) (expression_statement (assignment_expression (unary_expression (*) (identifier)) (=) (boolean_literal (true))) (;)) (})))) (}))))) (expression_statement (if_expression (if) (unary_expression (*) (identifier)) (block ({) (expression_statement (return_expression (return)) (;)) (})))) (expression_statement (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (reference_expression (&) (field_expression (identifier) (.) (field_identifier))) (,) (identifier) (,) (identifier) (,) (identifier) ()))) (;)) (expression_statement (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (reference_expression (&) (field_expression (identifier) (.) (field_identifier))) (,) (identifier) (,) (identifier) (,) (identifier) ()))) (;)) (}))) (function_item (fn) (identifier) (parameters (() (parameter (identifier) (:) (reference_type (&) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (>))) (>))))) (,) (parameter (identifier) (:) (primitive_type)) ())) (->) (primitive_type) (block ({) (expression_statement (if_expression (if) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (block ({) (expression_statement (return_expression (return) (boolean_literal (false))) (;)) (})))) (let_declaration (let) (identifier) (=) (call_expression (field_expression (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (;)) (expression_statement (if_expression (if) (binary_expression (field_expression (identifier) (.) (field_identifier)) (==) (identifier)) (block ({) (expression_statement (return_expression (return) (boolean_literal (true))) (;)) (})))) (expression_statement (if_expression (if) (binary_expression (identifier) (<) (field_expression (identifier) (.) (field_identifier))) (block ({) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (reference_expression (&) (field_expression (identifier) (.) (field_identifier))) (,) (identifier) ()))) (})) (else_clause (else) (block ({) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (reference_expression (&) (field_expression (identifier) (.) (field_identifier))) (,) (identifier) ()))) (}))))) (}))) (}))))