(translation_unit (comment) (type_definition (typedef) (struct_specifier (struct) (type_identifier) (field_declaration_list ({) (field_declaration (primitive_type) (field_identifier) (;)) (field_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (field_identifier)) (;)) (}))) (type_identifier) (;)) (comment) (function_definition (type_identifier) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ())))) (compound_statement ({) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (type_identifier) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (sizeof_expression (sizeof) (parenthesized_expression (() (identifier) ()))) ()))))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (number_literal)) (;)) (return_statement (return) (identifier) (;)) (}))) (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (identifier)) (;)) (}))) (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (!=) (number_literal)) ())) (compound_statement ({) (expression_statement (update_expression (++) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (}))) (return_statement (return) (binary_expression (identifier) (-) (number_literal)) (;)) (}))) (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (!=) (number_literal)) ())) (compound_statement ({) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (}))) (}))) (function_definition (primitive_type) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ())))) (compound_statement ({) (comment) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (call_expression (identifier) (argument_list (() (number_literal) ())))) (;)) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (call_expression (identifier) (argument_list (() (number_literal) ())))) (;)) (comment) (while_statement (while) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (!=) (char_literal (') (escape_sequence) ('))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (char_literal (') (character) ('))) ())) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) ()))) (;)) (else_clause (else) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) ()))) (;)))) (expression_statement (update_expression (++) (identifier)) (;)) (}))) (while_statement (while) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (!=) (char_literal (') (escape_sequence) ('))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (char_literal (') (character) ('))) ())) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) ()))) (;)) (else_clause (else) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) ()))) (;)))) (expression_statement (update_expression (++) (identifier)) (;)) (}))) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (call_expression (identifier) (argument_list (() (number_literal) ())))) (;)) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (comment) (while_statement (while) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (!=) (number_literal)) (&&) (binary_expression (identifier) (!=) (number_literal))) ())) (compound_statement ({) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (conditional_expression (identifier) (?) (binary_expression (binary_expression (field_expression (identifier) (->) (field_identifier)) (+) (field_expression (identifier) (->) (field_identifier))) (+) (number_literal)) (:) (binary_expression (field_expression (identifier) (->) (field_identifier)) (+) (field_expression (identifier) (->) (field_identifier))))) (;)) (comment) (expression_statement (assignment_expression (identifier) (=) (conditional_expression (binary_expression (identifier) (>) (number_literal)) (?) (number_literal) (:) (number_literal))) (;)) (comment) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (identifier) (%) (number_literal)) ()))) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (}))) (comment) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (!=) (number_literal)) ())) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (conditional_expression (identifier) (?) (binary_expression (field_expression (identifier) (->) (field_identifier)) (+) (number_literal)) (:) (field_expression (identifier) (->) (field_identifier)))) (;)) (expression_statement (assignment_expression (identifier) (=) (conditional_expression (binary_expression (identifier) (>) (number_literal)) (?) (number_literal) (:) (number_literal))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (identifier) (%) (number_literal)) ()))) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (}))) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (!=) (number_literal)) ())) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (conditional_expression (identifier) (?) (binary_expression (field_expression (identifier) (->) (field_identifier)) (+) (number_literal)) (:) (field_expression (identifier) (->) (field_identifier)))) (;)) (expression_statement (assignment_expression (identifier) (=) (conditional_expression (binary_expression (identifier) (>) (number_literal)) (?) (number_literal) (:) (number_literal))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (identifier) (%) (number_literal)) ()))) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (}))) (comment) (if_statement (if) (parenthesized_expression (() (identifier) ())) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) ()))) (;))) (comment) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ()))) ()))))) (;)) (declaration (type_identifier) (init_declarator (pointer_declarator (*) (identifier)) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (!=) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (identifier) (++)) (])) (=) (binary_expression (char_literal (') (character) (')) (+) (field_expression (identifier) (->) (field_identifier)))) (;)) (expression_statement (assignment_expression (identifier) (=) (field_expression (identifier) (->) (field_identifier))) (;)) (}))) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (char_literal (') (escape_sequence) ('))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (return_statement (return) (identifier) (;)) (}))) (comment))