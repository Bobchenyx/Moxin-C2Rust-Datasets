(translation_unit (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (>) (identifier)) ())) (return_statement (return) (field_expression (identifier) (->) (field_identifier)) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (unary_expression (!) (field_expression (identifier) (->) (field_identifier))) (&&) (unary_expression (!) (field_expression (identifier) (->) (field_identifier)))) ())) (return_statement (return) (number_literal) (;))) (declaration (primitive_type) (identifier) (,) (identifier) (,) (identifier) (;)) (if_statement (if) (parenthesized_expression (() (field_expression (identifier) (->) (field_identifier)) ())) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) (,) (identifier) ())))) (;))) (if_statement (if) (parenthesized_expression (() (field_expression (identifier) (->) (field_identifier)) ())) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) (,) (identifier) ())))) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (number_literal)) (&&) (binary_expression (identifier) (==) (number_literal))) ())) (return_statement (return) (number_literal) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (return_statement (return) (identifier) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (return_statement (return) (identifier) (;))) (expression_statement (assignment_expression (identifier) (=) (conditional_expression (binary_expression (identifier) (<) (identifier)) (?) (identifier) (:) (identifier))) (;)) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (unary_expression (!) (field_expression (identifier) (->) (field_identifier))) (&&) (unary_expression (!) (field_expression (identifier) (->) (field_identifier)))) ())) (return_statement (return) (number_literal) (;))) (comment) (return_statement (return) (call_expression (identifier) (argument_list (() (identifier) (,) (field_expression (identifier) (->) (field_identifier)) ()))) (;)) (}))))