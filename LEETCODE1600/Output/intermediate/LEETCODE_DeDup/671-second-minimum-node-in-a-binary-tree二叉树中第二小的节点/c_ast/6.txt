(translation_unit (comment) (preproc_function_def (#define) (identifier) (preproc_params (() (identifier) (,) (identifier) ())) (preproc_arg)) (preproc_function_def (#define) (identifier) (preproc_params (() (identifier) (,) (identifier) ())) (preproc_arg)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (null (NULL))) ())) (return_statement (return) (identifier) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (>) (identifier)) ())) (return_statement (return) (field_expression (identifier) (->) (field_identifier)) (;))) (declaration (primitive_type) (identifier) (,) (identifier) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) (,) (identifier) ())))) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) (,) (identifier) ())))) (;)) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (>) (identifier)) (&&) (binary_expression (identifier) (>) (identifier))) ())) (return_statement (return) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ()))) (;)) (else_clause (else) (return_statement (return) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ()))) (;)))) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (struct_specifier (struct) (type_identifier)) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (identifier) (,) (identifier) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (null (NULL))) (||) (binary_expression (field_expression (identifier) (->) (field_identifier)) (==) (null (NULL)))) ())) (return_statement (return) (number_literal) (;))) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) (,) (field_expression (identifier) (->) (field_identifier)) ())))) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) (,) (field_expression (identifier) (->) (field_identifier)) ())))) (;)) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (identifier)) (&&) (binary_expression (identifier) (==) (field_expression (identifier) (->) (field_identifier)))) ())) (return_statement (return) (number_literal) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ()))) (==) (field_expression (identifier) (->) (field_identifier))) ())) (return_statement (return) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ()))) (;)) (else_clause (else) (return_statement (return) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ()))) (;)))) (}))))