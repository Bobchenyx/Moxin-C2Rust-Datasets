(translation_unit (type_definition (typedef) (struct_specifier (struct) (type_identifier) (field_declaration_list ({) (field_declaration (primitive_type) (array_declarator (parenthesized_declarator (() (pointer_declarator (*) (field_identifier)) ())) ([) (number_literal) (])) (;)) (field_declaration (primitive_type) (field_identifier) (;)) (field_declaration (primitive_type) (field_identifier) (;)) (}))) (pointer_declarator (*) (type_identifier)) (;)) (function_definition (type_identifier) (function_declarator (identifier) (parameter_list (() ()))) (compound_statement ({) (declaration (type_identifier) (init_declarator (identifier) (=) (cast_expression (() (type_descriptor (type_identifier)) ()) (call_expression (identifier) (argument_list (() (sizeof_expression (sizeof) (() (type_descriptor (struct_specifier (struct) (type_identifier))) ())) ()))))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (number_literal)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (number_literal)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_array_declarator (abstract_parenthesized_declarator (() (abstract_pointer_declarator (*)) ())) ([) (number_literal) (]))) ()) (call_expression (identifier) (argument_list (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (*) (number_literal)) (,) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) ()))))) (;)) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (field_expression (identifier) (->) (field_identifier)) (])) ([) (number_literal) (])) (=) (identifier)) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (update_expression (field_expression (identifier) (->) (field_identifier)) (++)) (])) ([) (number_literal) (])) (=) (identifier)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (field_expression (identifier) (->) (field_identifier)) (==) (field_expression (identifier) (->) (field_identifier))) ())) (compound_statement ({) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (*=) (number_literal)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_array_declarator (abstract_parenthesized_declarator (() (abstract_pointer_declarator (*)) ())) ([) (number_literal) (]))) ()) (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) (,) (binary_expression (binary_expression (field_expression (identifier) (->) (field_identifier)) (*) (number_literal)) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ()))) ()))))) (;)) (}))) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (subscript_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (update_expression (--) (parenthesized_expression (() (field_expression (identifier) (->) (field_identifier)) ()))) (])) ([) (number_literal) (]))) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (subscript_expression (subscript_expression (field_expression (identifier) (->) (field_identifier)) ([) (field_expression (identifier) (->) (field_identifier)) (])) ([) (number_literal) (]))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (field_expression (identifier) (->) (field_identifier)) (*) (number_literal)) (<) (field_expression (identifier) (->) (field_identifier))) ())) (compound_statement ({) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (/=) (number_literal)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (->) (field_identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_array_declarator (abstract_parenthesized_declarator (() (abstract_pointer_declarator (*)) ())) ([) (number_literal) (]))) ()) (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) (,) (binary_expression (binary_expression (field_expression (identifier) (->) (field_identifier)) (*) (number_literal)) (*) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ()))) ()))))) (;)) (}))) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (identifier)) ()))) (compound_statement ({) (return_statement (return) (binary_expression (field_expression (identifier) (->) (field_identifier)) (==) (number_literal)) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (identifier)) ()))) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (field_expression (identifier) (->) (field_identifier)) ()))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (type_identifier) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() ())))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) ()))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (,) (identifier) (,) (identifier) (;)) (while_statement (while) (parenthesized_expression (() (unary_expression (!) (call_expression (identifier) (argument_list (() (identifier) ())))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (pointer_expression (&) (identifier)) (,) (pointer_expression (&) (identifier)) ()))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (==) (number_literal)) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (=) (number_literal)) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (<) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (-) (number_literal))) (&&) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (binary_expression (identifier) (+) (number_literal)) (])) (==) (number_literal))) ())) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (binary_expression (identifier) (+) (number_literal)) ()))) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (>) (number_literal)) (&&) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (binary_expression (identifier) (-) (number_literal)) (])) (==) (number_literal))) ())) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (binary_expression (identifier) (-) (number_literal)) ()))) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (<) (binary_expression (identifier) (-) (number_literal))) (&&) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (])) ([) (identifier) (])) (==) (number_literal))) ())) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (identifier) (+) (number_literal)) (,) (identifier) ()))) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (>) (number_literal)) (&&) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) ([) (identifier) (])) (==) (number_literal))) ())) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (identifier) (-) (number_literal)) (,) (identifier) ()))) (;))) (}))) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (identifier) (,) (identifier) (,) (identifier) (,) (init_declarator (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (subscript_expression (identifier) ([) (identifier) (]))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (==) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) (,) (identifier) (,) (identifier) ())))) (;)) (expression_statement (assignment_expression (identifier) (=) (parenthesized_expression (() (conditional_expression (binary_expression (identifier) (>) (identifier)) (?) (identifier) (:) (identifier)) ()))) (;)) (}))) (})))) (return_statement (return) (identifier) (;)) (}))))