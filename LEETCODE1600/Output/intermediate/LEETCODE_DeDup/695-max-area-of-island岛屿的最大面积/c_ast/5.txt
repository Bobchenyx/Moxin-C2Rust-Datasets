(translation_unit (preproc_def (#define) (identifier) (preproc_arg)) (type_definition (typedef) (struct_specifier (struct) (type_identifier) (field_declaration_list ({) (field_declaration (primitive_type) (field_identifier) (;)) (field_declaration (primitive_type) (field_identifier) (;)) (}))) (type_identifier) (;)) (declaration (type_identifier) (array_declarator (identifier) ([) (identifier) (])) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() ()))) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (number_literal) (,) (sizeof_expression (sizeof) (parenthesized_expression (() (identifier) ()))) ()))) (;)) (return_statement (return) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (identifier)) ())) (return_statement (return) (true) (;))) (return_statement (return) (false) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ())) (%) (identifier))) ())) (return_statement (return) (true) (;))) (return_statement (return) (false) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_identifier) (identifier)) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (call_expression (identifier) (argument_list (() ()))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (string_literal (") (string_content) (escape_sequence) (escape_sequence) (")) ()))) (;)) (return_statement (return) (;)) (}))) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ())) (%) (identifier))) (;)) (}))) (function_definition (type_identifier) (function_declarator (identifier) (parameter_list (() ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (if_statement (if) (parenthesized_expression (() (call_expression (identifier) (argument_list (() ()))) ())) (compound_statement ({) (expression_statement (call_expression (identifier) (argument_list (() (string_literal (") (string_content) (escape_sequence) (escape_sequence) (")) ()))) (;)) (}))) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (parenthesized_expression (() (binary_expression (identifier) (+) (number_literal)) ())) (%) (identifier))) (;)) (return_statement (return) (subscript_expression (identifier) ([) (identifier) (])) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>=) (identifier)) ())) (compound_statement ({) (return_statement (return) (binary_expression (identifier) (-) (identifier)) (;)) (}))) (return_statement (return) (binary_expression (binary_expression (identifier) (-) (identifier)) (+) (identifier)) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (identifier))) (=) (null (NULL))) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ())) (*) (parenthesized_expression (() (identifier) ()))) ())))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (parenthesized_expression (() (pointer_expression (*) (identifier)) ()))) ())))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) (,) (number_literal) (,) (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (parenthesized_expression (() (pointer_expression (*) (identifier)) ()))) ()))) (;)) (}))) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (pointer_expression (*) (identifier))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (==) (number_literal)) (&&) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (==) (number_literal))) ())) (compound_statement ({) (declaration (type_identifier) (identifier) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (field_expression (identifier) (.) (field_identifier)) (])) ([) (field_expression (identifier) (.) (field_identifier)) (])) (=) (number_literal)) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (false) (==) (call_expression (identifier) (argument_list (() ())))) ())) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() ())))) (;)) (declaration (type_identifier) (identifier) (;)) (declaration (type_identifier) (identifier) (;)) (comment) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() ())))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (field_expression (identifier) (.) (field_identifier)) (-) (number_literal)) (>) (number_literal)) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (field_expression (identifier) (.) (field_identifier)) (-) (number_literal)) (])) ([) (field_expression (identifier) (.) (field_identifier)) (])) (==) (number_literal)) (&&) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (field_expression (identifier) (.) (field_identifier)) (-) (number_literal)) (])) ([) (field_expression (identifier) (.) (field_identifier)) (])) (==) (number_literal))) ())) (compound_statement ({) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (binary_expression (field_expression (identifier) (.) (field_identifier)) (-) (number_literal))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (field_expression (identifier) (.) (field_identifier))) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (field_expression (identifier) (.) (field_identifier)) (])) ([) (field_expression (identifier) (.) (field_identifier)) (])) (=) (number_literal)) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (comment) (}))) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (field_expression (identifier) (.) (field_identifier)) (+) (number_literal)) (<) (identifier)) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (field_expression (identifier) (.) (field_identifier)) (+) (number_literal)) (])) ([) (field_expression (identifier) (.) (field_identifier)) (])) (==) (number_literal)) (&&) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (binary_expression (field_expression (identifier) (.) (field_identifier)) (+) (number_literal)) (])) ([) (field_expression (identifier) (.) (field_identifier)) (])) (==) (number_literal))) ())) (compound_statement ({) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (binary_expression (field_expression (identifier) (.) (field_identifier)) (+) (number_literal))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (field_expression (identifier) (.) (field_identifier))) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (field_expression (identifier) (.) (field_identifier)) (])) ([) (field_expression (identifier) (.) (field_identifier)) (])) (=) (number_literal)) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (comment) (}))) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (field_expression (identifier) (.) (field_identifier)) (-) (number_literal)) (>) (number_literal)) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (subscript_expression (identifier) ([) (field_expression (identifier) (.) (field_identifier)) (])) ([) (binary_expression (field_expression (identifier) (.) (field_identifier)) (-) (number_literal)) (])) (==) (number_literal)) (&&) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (field_expression (identifier) (.) (field_identifier)) (])) ([) (binary_expression (field_expression (identifier) (.) (field_identifier)) (-) (number_literal)) (])) (==) (number_literal))) ())) (compound_statement ({) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (field_expression (identifier) (.) (field_identifier))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (binary_expression (field_expression (identifier) (.) (field_identifier)) (-) (number_literal))) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (field_expression (identifier) (.) (field_identifier)) (])) ([) (field_expression (identifier) (.) (field_identifier)) (])) (=) (number_literal)) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (comment) (}))) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (field_expression (identifier) (.) (field_identifier)) (+) (number_literal)) (<) (pointer_expression (*) (identifier))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (subscript_expression (identifier) ([) (field_expression (identifier) (.) (field_identifier)) (])) ([) (binary_expression (field_expression (identifier) (.) (field_identifier)) (+) (number_literal)) (])) (==) (number_literal)) (&&) (binary_expression (subscript_expression (subscript_expression (identifier) ([) (field_expression (identifier) (.) (field_identifier)) (])) ([) (binary_expression (field_expression (identifier) (.) (field_identifier)) (+) (number_literal)) (])) (==) (number_literal))) ())) (compound_statement ({) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (field_expression (identifier) (.) (field_identifier))) (;)) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (binary_expression (field_expression (identifier) (.) (field_identifier)) (+) (number_literal))) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (field_expression (identifier) (.) (field_identifier)) (])) ([) (field_expression (identifier) (.) (field_identifier)) (])) (=) (number_literal)) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (comment) (}))) (}))) (}))) (}))) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (}))) (}))) (}))) (}))) (return_statement (return) (identifier) (;)) (}))))