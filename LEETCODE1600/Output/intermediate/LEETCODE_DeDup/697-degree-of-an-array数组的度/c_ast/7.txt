(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (number_literal)) (||) (binary_expression (identifier) (==) (number_literal))) ())) (return_statement (return) (identifier) (;))) (comment) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (number_literal) (,) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) ()))))) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (number_literal) (,) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) ()))))) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (number_literal) (,) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) ()))))) (;)) (declaration (primitive_type) (identifier) (,) (identifier) (,) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (subscript_expression (identifier) ([) (identifier) (]))) (;)) (comment) (expression_statement (update_expression (subscript_expression (identifier) ([) (identifier) (])) (++)) (;)) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (>) (identifier)) ())) (expression_statement (assignment_expression (identifier) (=) (subscript_expression (identifier) ([) (identifier) (]))) (;))) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (number_literal)) ())) (comment) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (identifier)) (;))) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (identifier)) (;)) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>) (identifier)) ())) (comment) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;))) (}))) (declaration (primitive_type) (init_declarator (identifier) (=) (identifier)) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<=) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (identifier)) ())) (compound_statement ({) (comment) (expression_statement (assignment_expression (identifier) (=) (binary_expression (binary_expression (number_literal) (+) (subscript_expression (identifier) ([) (identifier) (]))) (-) (subscript_expression (identifier) ([) (identifier) (])))) (;)) (expression_statement (assignment_expression (identifier) (=) (conditional_expression (binary_expression (identifier) (<) (identifier)) (?) (identifier) (:) (identifier))) (;)) (}))) (}))) (return_statement (return) (identifier) (;)) (}))))