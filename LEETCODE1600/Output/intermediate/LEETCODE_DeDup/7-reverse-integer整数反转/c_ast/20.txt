(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (identifier) (,) (identifier) (,) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (return_statement (return) (number_literal) (;))) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (comment) (}))) (for_statement (for) (() (assignment_expression (identifier) (=) (identifier)) (;) (binary_expression (identifier) (>) (number_literal)) (;) (assignment_expression (identifier) (/=) (number_literal)) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (%) (number_literal)) (+) (identifier)) ()))) (;)) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (identifier) (/) (number_literal)) (>) (number_literal)) (&&) (binary_expression (identifier) (>) (number_literal))) ())) (compound_statement ({) (comment) (return_statement (return) (number_literal) (;)) (}))) (expression_statement (assignment_expression (identifier) (*=) (number_literal)) (;)) (}))) (expression_statement (assignment_expression (identifier) (+=) (identifier)) (;)) (if_statement (if) (parenthesized_expression (() (identifier) ())) (expression_statement (assignment_expression (identifier) (=) (unary_expression (-) (identifier))) (;))) (return_statement (return) (identifier) (;)) (}))) (}))))