(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (sized_type_specifier (long) (primitive_type)) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (sized_type_specifier (long) (primitive_type)) (init_declarator (identifier) (=) (identifier)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (number_literal) (-) (identifier))) (;)) (}))) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (>=) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (binary_expression (identifier) (*) (number_literal)) (+) (parenthesized_expression (() (binary_expression (identifier) (%) (number_literal)) ())))) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (/) (number_literal))) (;)) (}))) (expression_statement (assignment_expression (identifier) (=) (binary_expression (binary_expression (identifier) (*) (number_literal)) (+) (identifier))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (number_literal) (-) (identifier))) (;)) (}))) (declaration (primitive_type) (identifier) (;)) (declaration (sized_type_specifier (long) (primitive_type)) (init_declarator (identifier) (=) (number_literal)) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (number_literal)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (*) (number_literal))) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (>) (binary_expression (identifier) (-) (number_literal))) (||) (binary_expression (identifier) (<) (unary_expression (-) (identifier)))) ())) (return_statement (return) (number_literal) (;))) (return_statement (return) (cast_expression (() (type_descriptor (primitive_type)) ()) (identifier)) (;)) (}))))