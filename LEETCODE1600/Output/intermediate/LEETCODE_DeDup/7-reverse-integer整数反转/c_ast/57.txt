(translation_unit (preproc_def (#define) (identifier) (preproc_arg)) (preproc_def (#define) (identifier) (preproc_arg)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (identifier) (,) (identifier) (,) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (sized_type_specifier (long) (primitive_type)) (init_declarator (identifier) (=) (identifier)) (,) (init_declarator (identifier) (=) (number_literal)) (;)) (while_statement (while) (parenthesized_expression (() (identifier) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (/) (number_literal))) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (comment) (}))) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<=) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (binary_expression (identifier) (/) (cast_expression (() (type_descriptor (primitive_type)) ()) (parenthesized_expression (() (binary_expression (call_expression (identifier) (argument_list (() (number_literal) (,) (binary_expression (identifier) (-) (number_literal)) ()))) (+) (number_literal)) ())))) (%) (number_literal))) (;)) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (number_literal)) (&&) (binary_expression (identifier) (==) (number_literal))) ())) (comment) (continue_statement (continue) (;))) (expression_statement (assignment_expression (identifier) (+=) (binary_expression (identifier) (*) (cast_expression (() (type_descriptor (sized_type_specifier (long) (primitive_type))) ()) (parenthesized_expression (() (binary_expression (call_expression (identifier) (argument_list (() (number_literal) (,) (binary_expression (identifier) (-) (identifier)) ()))) (+) (number_literal)) ()))))) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (<=) (identifier)) (&&) (binary_expression (identifier) (>=) (identifier))) ())) (comment) (return_statement (return) (identifier) (;)) (else_clause (else) (return_statement (return) (number_literal) (;)))) (}))))