(translation_unit (comment) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (sized_type_specifier (unsigned) (long)) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (expression_statement (assignment_expression (identifier) (=) (conditional_expression (binary_expression (identifier) (>=) (binary_expression (identifier) (-) (identifier))) (?) (identifier) (:) (binary_expression (identifier) (-) (identifier)))) (;)) (comment) (comment) (comment) (comment) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (+) (number_literal))) (,) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<=) (identifier)) (;) (comma_expression (update_expression (++) (identifier)) (,) (update_expression (++) (identifier))) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (*=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (>>=) (conditional_expression (binary_expression (binary_expression (identifier) (%) (number_literal)) (==) (number_literal)) (?) (number_literal) (:) (number_literal))) (;)) (}))) (comment) (comment) (comment) (comment) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<=) (binary_expression (identifier) (-) (identifier))) (;) (comma_expression (update_expression (++) (identifier)) (,) (update_expression (++) (identifier))) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (<<=) (conditional_expression (binary_expression (binary_expression (identifier) (%) (number_literal)) (==) (number_literal)) (?) (number_literal) (:) (number_literal))) (;)) (expression_statement (assignment_expression (identifier) (/=) (identifier)) (;)) (}))) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (comment) (comment) (comment) (comment) (declaration (sized_type_specifier (unsigned) (long)) (init_declarator (identifier) (=) (conditional_expression (binary_expression (identifier) (&) (number_literal)) (?) (number_literal) (:) (number_literal))) (;)) (comment) (comment) (comment) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (identifier)) (,) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (update_expression (--) (identifier)) (>) (update_expression (++) (identifier))) (;) ()) (expression_statement (assignment_expression (identifier) (+=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ())))) (;))) (return_statement (return) (identifier) (;)) (}))))