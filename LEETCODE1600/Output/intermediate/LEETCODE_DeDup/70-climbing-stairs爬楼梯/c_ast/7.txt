(translation_unit (declaration (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type)) (,) (parameter_declaration (primitive_type) (abstract_pointer_declarator (*))) ()))) (;)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (identifier) (,) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) ()))))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ())))) (;)) (expression_statement (call_expression (identifier) (argument_list (() (identifier) ()))) (;)) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (return_statement (return) (number_literal) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (return_statement (return) (number_literal) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (>) (number_literal)) ())) (return_statement (return) (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (;))) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (=) (binary_expression (call_expression (identifier) (argument_list (() (binary_expression (identifier) (-) (number_literal)) (,) (identifier) ()))) (+) (call_expression (identifier) (argument_list (() (binary_expression (identifier) (-) (number_literal)) (,) (identifier) ()))))) (;)) (return_statement (return) (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (;)) (}))))