(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (primitive_type)) ())) (->) (primitive_type) (block ({) (let_declaration (let) (identifier) (=) (type_cast_expression (parenthesized_expression (() (binary_expression (identifier) (+) (integer_literal)) ())) (as) (primitive_type)) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (macro_invocation (identifier) (!) (token_tree ([) (integer_literal) (;) (identifier) (]))) (;)) (line_comment (//)) (expression_statement (assignment_expression (index_expression (identifier) ([) (integer_literal) (])) (=) (integer_literal)) (;)) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (identifier)) (block ({) (expression_statement (compound_assignment_expr (index_expression (identifier) ([) (identifier) (])) (+=) (index_expression (identifier) ([) (binary_expression (identifier) (-) (integer_literal)) (]))) (;)) (expression_statement (if_expression (if) (binary_expression (identifier) (>) (integer_literal)) (block ({) (expression_statement (compound_assignment_expr (index_expression (identifier) ([) (identifier) (])) (+=) (index_expression (identifier) ([) (binary_expression (identifier) (-) (integer_literal)) (]))) (;)) (})))) (})))) (index_expression (identifier) ([) (binary_expression (identifier) (-) (integer_literal)) (])) (}))) (}))))