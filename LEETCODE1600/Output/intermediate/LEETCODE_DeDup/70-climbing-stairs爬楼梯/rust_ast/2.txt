(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (primitive_type)) ())) (->) (primitive_type) (block ({) (expression_statement (if_expression (if) (binary_expression (identifier) (==) (integer_literal)) (block ({) (expression_statement (return_expression (return) (integer_literal)) (;)) (})))) (let_declaration (let) (mutable_specifier) (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (=) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() ()))) (;)) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (binary_expression (identifier) (+) (integer_literal))) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (integer_literal) ()))) (;)) (})))) (expression_statement (assignment_expression (index_expression (identifier) ([) (integer_literal) (])) (=) (integer_literal)) (;)) (expression_statement (assignment_expression (index_expression (identifier) ([) (integer_literal) (])) (=) (integer_literal)) (;)) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (type_cast_expression (identifier) (as) (primitive_type))) (block ({) (let_declaration (let) (identifier) (:) (primitive_type) (=) (unary_expression (*) (parenthesized_expression (() (reference_expression (&) (index_expression (identifier) ([) (binary_expression (identifier) (-) (integer_literal)) (]))) ()))) (;)) (let_declaration (let) (identifier) (:) (primitive_type) (=) (unary_expression (*) (parenthesized_expression (() (reference_expression (&) (index_expression (identifier) ([) (binary_expression (identifier) (-) (integer_literal)) (]))) ()))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (:) (reference_type (&) (mutable_specifier) (primitive_type)) (=) (reference_expression (&) (mutable_specifier) (index_expression (identifier) ([) (identifier) (]))) (;)) (expression_statement (assignment_expression (unary_expression (*) (identifier)) (=) (binary_expression (identifier) (+) (identifier))) (;)) (})))) (unary_expression (*) (reference_expression (&) (index_expression (identifier) ([) (binary_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (-) (integer_literal)) (])))) (}))) (}))))