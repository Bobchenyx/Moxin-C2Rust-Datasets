(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (type_identifier)) ())) (->) (type_identifier) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (=) (macro_invocation (identifier) (!) (token_tree ([) (]))) (;)) (let_declaration (let) (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (string_literal (") (string_content) (")) ()))) (;)) (expression_statement (for_expression (for) (identifier) (in) (identifier) (block ({) (expression_statement (if_expression (if) (binary_expression (identifier) (==) (string_literal (") ("))) (block ({) (expression_statement (continue_expression (continue)) (;)) (})) (else_clause (else) (if_expression (if) (binary_expression (identifier) (==) (string_literal (") (string_content) ("))) (block ({) (expression_statement (continue_expression (continue)) (;)) (})) (else_clause (else) (if_expression (if) (binary_expression (identifier) (==) (string_literal (") (string_content) ("))) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (;)) (})) (else_clause (else) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) ()))) (;)) (}))))))))) (})))) (let_declaration (let) (mutable_specifier) (identifier) (=) (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (string_literal (") (string_content) (")) ()))) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (reference_expression (&) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (string_literal (") (string_content) (")) ())))) ()))) (;)) (identifier) (}))) (}))))