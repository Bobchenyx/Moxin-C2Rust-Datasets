(translation_unit (preproc_function_def (#define) (identifier) (preproc_params (() (identifier) (,) (identifier) ())) (preproc_arg)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (ERROR (})) (enum_specifier (enum) (type_identifier) (enumerator_list ({) (enumerator (identifier) (=) (number_literal)) (,) (enumerator (identifier)) (,) (enumerator (identifier)) (,) (}))) (;) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (comment) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (compound_statement ({) (while_statement (while) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (identifier)) (&&) (binary_expression (identifier) (<) (identifier))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (while_statement (while) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (!=) (identifier)) (&&) (binary_expression (identifier) (<) (identifier))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (--)) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (parenthesized_expression (() (subscript_expression (identifier) ([) (identifier) (])) ())) (,) (parenthesized_expression (() (subscript_expression (identifier) ([) (identifier) (])) ())) ()))) (;)) (}))) (comment) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (compound_statement ({) (while_statement (while) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (identifier)) (&&) (binary_expression (identifier) (<) (identifier))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (while_statement (while) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (!=) (identifier)) (&&) (binary_expression (identifier) (<) (identifier))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (--)) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (parenthesized_expression (() (subscript_expression (identifier) ([) (identifier) (])) ())) (,) (parenthesized_expression (() (subscript_expression (identifier) ([) (identifier) (])) ())) ()))) (;)) (}))) (}))))