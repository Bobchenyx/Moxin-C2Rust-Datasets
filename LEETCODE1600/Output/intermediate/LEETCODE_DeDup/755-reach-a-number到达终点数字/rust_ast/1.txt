(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (primitive_type)) ())) (->) (primitive_type) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (identifier) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (expression_statement (if_expression (if) (binary_expression (identifier) (<) (integer_literal)) (block ({) (expression_statement (assignment_expression (identifier) (=) (unary_expression (-) (identifier))) (;)) (})))) (expression_statement (while_expression (while) (binary_expression (identifier) (<) (identifier)) (block ({) (expression_statement (compound_assignment_expr (identifier) (+=) (integer_literal)) (;)) (expression_statement (compound_assignment_expr (identifier) (+=) (identifier)) (;)) (})))) (expression_statement (if_expression (if) (binary_expression (binary_expression (parenthesized_expression (() (binary_expression (identifier) (-) (identifier)) ())) (%) (integer_literal)) (==) (integer_literal)) (block ({) (identifier) (})) (else_clause (else) (if_expression (if) (binary_expression (binary_expression (identifier) (%) (integer_literal)) (==) (integer_literal)) (block ({) (binary_expression (identifier) (+) (integer_literal)) (})) (else_clause (else) (block ({) (binary_expression (identifier) (+) (integer_literal)) (}))))))) (}))) (}))))