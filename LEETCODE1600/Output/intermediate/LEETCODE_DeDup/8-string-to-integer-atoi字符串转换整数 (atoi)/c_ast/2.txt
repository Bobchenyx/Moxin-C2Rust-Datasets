(translation_unit (preproc_function_def (#define) (identifier) (preproc_params (() (identifier) ())) (preproc_arg)) (preproc_function_def (#define) (identifier) (preproc_params (() (identifier) (,) (identifier) ())) (preproc_arg)) (preproc_function_def (#define) (identifier) (preproc_params (() (identifier) (,) (identifier) ())) (preproc_arg)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (;)) (while_statement (while) (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (unary_expression (!) (identifier)) (&&) (binary_expression (pointer_expression (*) (identifier)) (==) (char_literal (') (character) (')))) ())) (expression_statement (;)) (comment) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (unary_expression (!) (identifier)) (&&) (binary_expression (pointer_expression (*) (identifier)) (==) (char_literal (') (character) (')))) ())) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (comment) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (unary_expression (!) (identifier)) (&&) (binary_expression (pointer_expression (*) (identifier)) (==) (char_literal (') (character) (')))) ())) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (comment) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (unary_expression (!) (identifier)) (&&) (call_expression (identifier) (argument_list (() (pointer_expression (*) (identifier)) ())))) ())) (compound_statement ({) (comment) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (binary_expression (binary_expression (binary_expression (identifier) (*) (number_literal)) (+) (pointer_expression (*) (identifier))) (-) (char_literal (') (character) (')))) (;)) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (unary_expression (!) (identifier)) ())) (return_statement (return) (number_literal) (;)) (comment) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (number_literal) (==) (identifier)) (&&) (call_expression (identifier) (argument_list (() (pointer_expression (*) (identifier)) ())))) (&&) (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (pointer_expression (*) (identifier)) (-) (char_literal (') (character) ('))) ())))) ())) (comment) (expression_statement (assignment_expression (identifier) (=) (binary_expression (binary_expression (identifier) (*) (number_literal)) (+) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (-) (char_literal (') (character) ('))) ())))) (;)) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (number_literal) (==) (identifier)) (&&) (call_expression (identifier) (argument_list (() (pointer_expression (*) (identifier)) ())))) (&&) (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (char_literal (') (character) (')) (-) (pointer_expression (*) (identifier))) ())))) ())) (comment) (expression_statement (assignment_expression (identifier) (=) (binary_expression (binary_expression (identifier) (*) (number_literal)) (+) (parenthesized_expression (() (binary_expression (char_literal (') (character) (')) (-) (pointer_expression (*) (identifier))) ())))) (;)) (else_clause (else) (if_statement (if) (parenthesized_expression (() (unary_expression (!) (call_expression (identifier) (argument_list (() (pointer_expression (*) (identifier)) ())))) ())) (return_statement (return) (identifier) (;)) (comment) (else_clause (else) (if_statement (if) (parenthesized_expression (() (unary_expression (!) (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (pointer_expression (*) (identifier)) (-) (char_literal (') (character) ('))) ())))) ())) (return_statement (return) (identifier) (;)) (comment) (else_clause (else) (if_statement (if) (parenthesized_expression (() (unary_expression (!) (call_expression (identifier) (argument_list (() (identifier) (,) (binary_expression (char_literal (') (character) (')) (-) (pointer_expression (*) (identifier))) ())))) ())) (return_statement (return) (identifier) (;))))))))))))))))))))) (comment) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (return_statement (return) (identifier) (;)) (}))))