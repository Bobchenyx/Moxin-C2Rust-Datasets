(translation_unit (preproc_include (#include) (system_lib_string)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (sized_type_specifier (long)) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (identifier)) (=) (null (NULL))) (;)) (declaration (primitive_type) (array_declarator (identifier) ([) (number_literal) (])) (;)) (expression_statement (comma_expression (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (number_literal)) (,) (comma_expression (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (number_literal)) (,) (comma_expression (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (number_literal)) (,) (comma_expression (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (number_literal)) (,) (comma_expression (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (number_literal)) (,) (comma_expression (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (number_literal)) (,) (comma_expression (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (number_literal)) (,) (comma_expression (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (number_literal)) (,) (comma_expression (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (number_literal)) (,) (assignment_expression (subscript_expression (identifier) ([) (number_literal) (])) (=) (number_literal))))))))))) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (char_literal (') (character) ('))) ())) (expression_statement (update_expression (identifier) (++)) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (parenthesized_expression (() (binary_expression (binary_expression (binary_expression (pointer_expression (*) (identifier)) (<) (number_literal)) (&&) (binary_expression (pointer_expression (*) (identifier)) (!=) (number_literal))) (&&) (binary_expression (pointer_expression (*) (identifier)) (!=) (number_literal))) ())) (||) (binary_expression (pointer_expression (*) (identifier)) (>) (number_literal))) (||) (binary_expression (pointer_expression (*) (identifier)) (==) (char_literal (') (escape_sequence) (')))) ())) (return_statement (return) (number_literal) (;))) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (pointer_expression (*) (identifier)) (==) (number_literal)) (||) (binary_expression (pointer_expression (*) (identifier)) (==) (number_literal))) ())) (for_statement (for) (() (assignment_expression (identifier) (+=) (number_literal)) (;) (binary_expression (binary_expression (pointer_expression (*) (identifier)) (>=) (number_literal)) (&&) (binary_expression (pointer_expression (*) (identifier)) (<=) (number_literal))) (;) (assignment_expression (identifier) (=) (binary_expression (binary_expression (identifier) (*) (number_literal)) (+) (subscript_expression (identifier) ([) (pointer_expression (*) (update_expression (identifier) (++))) (])))) ()) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>) (call_expression (identifier) (argument_list (() (number_literal) (,) (number_literal) ())))) ())) (if_statement (if) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (number_literal)) ())) (return_statement (return) (unary_expression (-) (call_expression (identifier) (argument_list (() (number_literal) (,) (number_literal) ())))) (;)) (else_clause (else) (return_statement (return) (call_expression (identifier) (argument_list (() (number_literal) (,) (number_literal) ()))) (;))))))) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (number_literal)) ())) (expression_statement (assignment_expression (identifier) (=) (unary_expression (-) (identifier))) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<) (number_literal)) ())) (return_statement (return) (unary_expression (-) (call_expression (identifier) (argument_list (() (number_literal) (,) (number_literal) ())))) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (pointer_expression (*) (identifier)) (>=) (number_literal)) (&&) (binary_expression (pointer_expression (*) (identifier)) (<=) (number_literal))) ())) (for_statement (for) (() (;) (binary_expression (binary_expression (pointer_expression (*) (identifier)) (>=) (number_literal)) (&&) (binary_expression (pointer_expression (*) (identifier)) (<=) (number_literal))) (;) (assignment_expression (identifier) (=) (binary_expression (binary_expression (identifier) (*) (number_literal)) (+) (subscript_expression (identifier) ([) (pointer_expression (*) (update_expression (identifier) (++))) (])))) ()) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>) (binary_expression (call_expression (identifier) (argument_list (() (number_literal) (,) (number_literal) ()))) (-) (number_literal))) ())) (return_statement (return) (binary_expression (call_expression (identifier) (argument_list (() (number_literal) (,) (number_literal) ()))) (-) (number_literal)) (;))))) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>=) (number_literal)) ())) (return_statement (return) (binary_expression (call_expression (identifier) (argument_list (() (number_literal) (,) (number_literal) ()))) (-) (number_literal)) (;)) (else_clause (else) (return_statement (return) (identifier) (;)))) (}))))