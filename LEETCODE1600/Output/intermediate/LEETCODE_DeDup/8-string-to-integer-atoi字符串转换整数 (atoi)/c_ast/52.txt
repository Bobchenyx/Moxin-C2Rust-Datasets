(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (while_statement (while) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (number_literal)) ())) (comment) (expression_statement (update_expression (++) (identifier)) (;))) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (number_literal)) ())) (compound_statement ({) (comment) (expression_statement (update_expression (++) (identifier)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (number_literal)) ())) (comment) (expression_statement (update_expression (++) (identifier)) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (pointer_expression (*) (identifier)) (<) (number_literal)) (||) (binary_expression (pointer_expression (*) (identifier)) (>) (number_literal))) ())) (comment) (return_statement (return) (number_literal) (;))) (expression_statement (assignment_expression (identifier) (=) (binary_expression (pointer_expression (*) (identifier)) (-) (number_literal))) (;)) (comment) (expression_statement (update_expression (++) (identifier)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (binary_expression (pointer_expression (*) (identifier)) (>) (number_literal)) (&&) (binary_expression (pointer_expression (*) (identifier)) (<) (number_literal))) ())) (compound_statement ({) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (>) (number_literal)) (||) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (number_literal)) (&&) (binary_expression (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (-) (number_literal)) ())) (>) (number_literal))) ()))) ())) (comment) (return_statement (return) (number_literal) (;))) (expression_statement (assignment_expression (identifier) (=) (binary_expression (binary_expression (binary_expression (identifier) (*) (number_literal)) (-) (number_literal)) (+) (pointer_expression (*) (identifier)))) (;)) (comment) (expression_statement (update_expression (++) (identifier)) (;)) (}))) (return_statement (return) (identifier) (;)) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (number_literal)) ())) (compound_statement ({) (comment) (expression_statement (update_expression (++) (identifier)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (number_literal)) ())) (comment) (expression_statement (update_expression (++) (identifier)) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (pointer_expression (*) (identifier)) (<) (number_literal)) (||) (binary_expression (pointer_expression (*) (identifier)) (>) (number_literal))) ())) (comment) (return_statement (return) (number_literal) (;))) (expression_statement (assignment_expression (identifier) (=) (binary_expression (number_literal) (-) (pointer_expression (*) (identifier)))) (;)) (expression_statement (update_expression (++) (identifier)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (binary_expression (pointer_expression (*) (identifier)) (>) (number_literal)) (&&) (binary_expression (pointer_expression (*) (identifier)) (<) (number_literal))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (<) (number_literal)) (||) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (number_literal)) (&&) (binary_expression (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (-) (number_literal)) ())) (>) (number_literal))) ()))) ())) (return_statement (return) (number_literal) (;))) (expression_statement (assignment_expression (identifier) (=) (binary_expression (binary_expression (binary_expression (identifier) (*) (number_literal)) (+) (number_literal)) (-) (pointer_expression (*) (identifier)))) (;)) (comment) (expression_statement (update_expression (++) (identifier)) (;)) (}))) (return_statement (return) (identifier) (;)) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (pointer_expression (*) (identifier)) (>) (number_literal)) (&&) (binary_expression (pointer_expression (*) (identifier)) (<) (number_literal))) ())) (compound_statement ({) (comment) (while_statement (while) (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (==) (number_literal)) ())) (expression_statement (update_expression (++) (identifier)) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (pointer_expression (*) (identifier)) (<) (number_literal)) (||) (binary_expression (pointer_expression (*) (identifier)) (>) (number_literal))) ())) (return_statement (return) (number_literal) (;))) (expression_statement (assignment_expression (identifier) (=) (binary_expression (pointer_expression (*) (identifier)) (-) (number_literal))) (;)) (expression_statement (update_expression (++) (identifier)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (binary_expression (pointer_expression (*) (identifier)) (>) (number_literal)) (&&) (binary_expression (pointer_expression (*) (identifier)) (<) (number_literal))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (>) (number_literal)) (||) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (==) (number_literal)) (&&) (binary_expression (parenthesized_expression (() (binary_expression (pointer_expression (*) (identifier)) (-) (number_literal)) ())) (>) (number_literal))) ()))) ())) (return_statement (return) (number_literal) (;))) (expression_statement (assignment_expression (identifier) (=) (binary_expression (binary_expression (binary_expression (identifier) (*) (number_literal)) (-) (number_literal)) (+) (pointer_expression (*) (identifier)))) (;)) (expression_statement (update_expression (++) (identifier)) (;)) (}))) (return_statement (return) (identifier) (;)) (}))))))) (return_statement (return) (identifier) (;)) (}))))