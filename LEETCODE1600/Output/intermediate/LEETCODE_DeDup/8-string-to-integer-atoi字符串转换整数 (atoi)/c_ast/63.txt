(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (identifier) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (comment) (declaration (primitive_type) (identifier) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) ())))) (;)) (if_statement (if) (parenthesized_expression (() (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ()))) ())) (return_statement (return) (number_literal) (;))) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (update_expression (++) (identifier)) ())))) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (})) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (update_expression (++) (identifier)) ())))) (;))))) (while_statement (while) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (>=) (number_literal)) (&&) (binary_expression (identifier) (<) (number_literal))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (*) (identifier)) (<) (binary_expression (binary_expression (identifier) (*) (identifier)) (/) (number_literal))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (break_statement (break) (;)) (}))) (expression_statement (assignment_expression (identifier) (*=) (number_literal)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (*) (identifier)) (<) (binary_expression (binary_expression (identifier) (*) (identifier)) (+) (identifier))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (number_literal)) (;)) (break_statement (break) (;)) (}))) (expression_statement (assignment_expression (identifier) (-=) (binary_expression (identifier) (*) (identifier))) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (update_expression (++) (identifier)) ())))) (;)) (}))) (if_statement (if) (parenthesized_expression (() (identifier) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (return_statement (return) (identifier) (;)) (else_clause (else) (return_statement (return) (identifier) (;)))) (})) (else_clause (else) (return_statement (return) (identifier) (;)))) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (!=) (char_literal (') (escape_sequence) ('))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (char_literal (') (character) ('))) ())) (expression_statement (update_expression (identifier) (++)) (;)) (else_clause (else) (break_statement (break) (;)))) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (char_literal (') (escape_sequence) ('))) ())) (return_statement (return) (number_literal) (;)) (else_clause (else) (return_statement (return) (identifier) (;)))) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (switch_statement (switch) (parenthesized_expression (() (subscript_expression (identifier) ([) (identifier) (])) ())) (compound_statement ({) (case_statement (case) (char_literal (') (character) (')) (:) (return_statement (return) (number_literal) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (return_statement (return) (number_literal) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (return_statement (return) (number_literal) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (return_statement (return) (number_literal) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (return_statement (return) (number_literal) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (return_statement (return) (number_literal) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (return_statement (return) (number_literal) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (return_statement (return) (number_literal) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (return_statement (return) (number_literal) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (return_statement (return) (number_literal) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (return_statement (return) (number_literal) (;))) (case_statement (case) (char_literal (') (character) (')) (:) (return_statement (return) (number_literal) (;))) (case_statement (default) (:) (return_statement (return) (number_literal) (;))) (}))) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (number_literal)) ())) (return_statement (return) (number_literal) (;)) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) ()))) (==) (number_literal)) ())) (return_statement (return) (number_literal) (;)) (else_clause (else) (return_statement (return) (number_literal) (;)))))) (}))))