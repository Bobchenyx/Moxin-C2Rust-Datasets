(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (type_qualifier (const)) (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (type_qualifier (const)) (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (identifier))) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*) (abstract_pointer_declarator (*)))) ()) (identifier))) (;)) (declaration (primitive_type) (init_declarator (pointer_declarator (*) (pointer_declarator (*) (identifier))) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*) (abstract_pointer_declarator (*)))) ()) (identifier))) (;)) (return_statement (return) (binary_expression (call_expression (identifier) (argument_list (() (pointer_expression (*) (identifier)) ()))) (-) (call_expression (identifier) (argument_list (() (pointer_expression (*) (identifier)) ())))) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (identifier) (,) (identifier) (,) (init_declarator (identifier) (=) (number_literal)) (,) (identifier) (;)) (declaration (primitive_type) (pointer_declarator (*) (identifier)) (;)) (comment) (expression_statement (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ())) (,) (identifier) ()))) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (binary_expression (identifier) (-) (number_literal))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ())))) (;)) (expression_statement (assignment_expression (identifier) (+=) (identifier)) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (number_literal))) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (comment) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) (,) (subscript_expression (identifier) ([) (identifier) (])) ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (!=) (null (NULL))) (&&) (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (==) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ()))))) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (+=) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ())))) (;)) (expression_statement (assignment_expression (identifier) (+=) (number_literal)) (;)) (break_statement (break) (;)) (}))) (}))) (}))) (expression_statement (assignment_expression (identifier) (+=) (call_expression (identifier) (argument_list (() (subscript_expression (identifier) ([) (identifier) (])) ())))) (;)) (return_statement (return) (binary_expression (binary_expression (binary_expression (identifier) (-) (identifier)) (+) (identifier)) (-) (identifier)) (;)) (}))))