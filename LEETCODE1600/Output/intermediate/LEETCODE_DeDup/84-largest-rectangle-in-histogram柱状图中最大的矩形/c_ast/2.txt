(translation_unit (preproc_def (#define) (identifier) (preproc_arg)) (struct_specifier (struct) (type_identifier) (field_declaration_list ({) (field_declaration (primitive_type) (array_declarator (field_identifier) ([) (identifier) (])) (;)) (comment) (field_declaration (primitive_type) (array_declarator (field_identifier) ([) (identifier) (])) (;)) (comment) (field_declaration (primitive_type) (field_identifier) (;)) (}))) (;) (declaration (struct_specifier (struct) (type_identifier)) (identifier) (;)) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (identifier)) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (identifier) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (binary_expression (field_expression (identifier) (.) (field_identifier)) (>) (number_literal)) (&&) (binary_expression (subscript_expression (identifier) ([) (subscript_expression (field_expression (identifier) (.) (field_identifier)) ([) (field_expression (identifier) (.) (field_identifier)) (])) (])) (>) (identifier))) ())) (compound_statement ({) (comment) (expression_statement (assignment_expression (identifier) (=) (binary_expression (subscript_expression (identifier) ([) (subscript_expression (field_expression (identifier) (.) (field_identifier)) ([) (field_expression (identifier) (.) (field_identifier)) (])) (])) (*) (parenthesized_expression (() (binary_expression (identifier) (-) (subscript_expression (field_expression (identifier) (.) (field_identifier)) ([) (field_expression (identifier) (.) (field_identifier)) (]))) ())))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (}))) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (subscript_expression (field_expression (identifier) (.) (field_identifier)) ([) (field_expression (identifier) (.) (field_identifier)) (]))) (;)) (comment) (expression_statement (update_expression (field_expression (identifier) (.) (field_identifier)) (--)) (;)) (}))) (return_statement (return) (identifier) (;)) (}))) (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (identifier) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<=) (number_literal)) ())) (compound_statement ({) (return_statement (return) (number_literal) (;)) (}))) (expression_statement (call_expression (identifier) (argument_list (() (pointer_expression (&) (identifier)) (,) (number_literal) (,) (sizeof_expression (sizeof) (() (type_descriptor (struct_specifier (struct) (type_identifier))) ())) ()))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) (,) (pointer_expression (&) (identifier)) (,) (subscript_expression (identifier) ([) (identifier) (])) ())))) (;)) (comment) (expression_statement (assignment_expression (subscript_expression (field_expression (identifier) (.) (field_identifier)) ([) (update_expression (++) (field_expression (identifier) (.) (field_identifier))) (])) (=) (identifier)) (;)) (comment) (expression_statement (assignment_expression (subscript_expression (field_expression (identifier) (.) (field_identifier)) ([) (field_expression (identifier) (.) (field_identifier)) (])) (=) (identifier)) (;)) (comment) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (==) (binary_expression (identifier) (-) (number_literal))) ())) (compound_statement ({) (comment) (expression_statement (assignment_expression (identifier) (=) (call_expression (identifier) (argument_list (() (identifier) (,) (identifier) (,) (identifier) (,) (pointer_expression (&) (identifier)) (,) (number_literal) ())))) (;)) (}))) (}))) (return_statement (return) (identifier) (;)) (}))))