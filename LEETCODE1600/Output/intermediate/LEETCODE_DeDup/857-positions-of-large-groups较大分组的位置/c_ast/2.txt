(translation_unit (comment) (preproc_def (#define) (identifier) (preproc_arg)) (function_definition (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier)))) ()))))) (compound_statement ({) (declaration (primitive_type) (init_declarator (array_declarator (identifier) ([) (number_literal) (])) (=) (initializer_list ({) (number_literal) (}))) (;)) (for_statement (for) (() (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (binary_expression (identifier) (<) (call_expression (identifier) (argument_list (() (identifier) ())))) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (expression_statement (update_expression (subscript_expression (identifier) ([) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (-) (char_literal (') (character) ('))) (])) (++)) (;)) (}))) (declaration (primitive_type) (pointer_declarator (*) (pointer_declarator (*) (identifier))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (expression_statement (assignment_expression (identifier) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*) (abstract_pointer_declarator (*)))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ())) (*) (identifier)) ()))))) (;)) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (identifier)) ()))))) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (call_expression (identifier) (argument_list (() (identifier) ()))) (==) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) ([) (identifier) (])) (=) (number_literal)) (;)) (}))) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (identifier) (<) (call_expression (identifier) (argument_list (() (identifier) ())))) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (-) (char_literal (') (character) ('))) (])) (>=) (number_literal)) ())) (compound_statement ({) (comment) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (while_statement (while) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (subscript_expression (identifier) ([) (identifier) (]))) (&&) (binary_expression (identifier) (<) (call_expression (identifier) (argument_list (() (identifier) ()))))) ())) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (-) (identifier)) (>=) (number_literal)) ())) (compound_statement ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (-) (number_literal))) (;)) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (identifier) (])) (=) (cast_expression (() (type_descriptor (primitive_type) (abstract_pointer_declarator (*))) ()) (call_expression (identifier) (argument_list (() (binary_expression (sizeof_expression (sizeof) (() (type_descriptor (primitive_type)) ())) (*) (number_literal)) ()))))) (;)) (expression_statement (assignment_expression (subscript_expression (parenthesized_expression (() (pointer_expression (*) (identifier)) ())) ([) (identifier) (])) (=) (number_literal)) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (number_literal) (])) (=) (identifier)) (;)) (expression_statement (assignment_expression (subscript_expression (subscript_expression (identifier) ([) (identifier) (])) ([) (number_literal) (])) (=) (identifier)) (;)) (expression_statement (update_expression (identifier) (++)) (;)) (}))) (})) (else_clause (else) (compound_statement ({) (expression_statement (update_expression (identifier) (++)) (;)) (})))) (}))) (expression_statement (assignment_expression (pointer_expression (*) (identifier)) (=) (identifier)) (;)) (return_statement (return) (identifier) (;)) (}))))