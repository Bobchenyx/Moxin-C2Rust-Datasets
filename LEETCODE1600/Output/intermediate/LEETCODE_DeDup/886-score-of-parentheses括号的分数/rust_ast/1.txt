(source_file (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (reference_type (&) (mutable_specifier) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))))) (,) (parameter (identifier) (:) (reference_type (&) (mutable_specifier) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))))) ())) (block ({) (expression_statement (loop_expression (loop) (block ({) (expression_statement (match_expression (match) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (match_block ({) (match_arm (match_pattern (or_pattern (|) (tuple_struct_pattern (identifier) (() (char_literal) ())))) (=>) (block ({) (expression_statement (break_expression (break)) (;)) (})) (,)) (match_arm (match_pattern (or_pattern (|) (tuple_struct_pattern (identifier) (() (char_literal) ())))) (=>) (block ({) (let_declaration (let) (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (;)) (let_declaration (let) (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (;)) (expression_statement (match_expression (match) (tuple_expression (() (identifier) (,) (identifier) ())) (match_block ({) (match_arm (match_pattern (tuple_pattern (() (tuple_struct_pattern (identifier) (() (identifier) ())) (,) (tuple_struct_pattern (identifier) (() (identifier) ())) ()))) (=>) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (binary_expression (identifier) (*) (identifier)) ()))) (,)) (match_arm (match_pattern (_)) (=>) (macro_invocation (identifier) (!) (token_tree (() (string_literal (") (string_content) (")) ())))) (})))) (empty_statement (;)) (})) (,)) (match_arm (match_pattern (or_pattern (|) (tuple_struct_pattern (identifier) (() (char_literal) ())))) (=>) (block ({) (let_declaration (let) (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (;)) (let_declaration (let) (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (;)) (expression_statement (match_expression (match) (tuple_expression (() (identifier) (,) (identifier) ())) (match_block ({) (match_arm (match_pattern (tuple_pattern (() (tuple_struct_pattern (identifier) (() (identifier) ())) (,) (tuple_struct_pattern (identifier) (() (identifier) ())) ()))) (=>) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (binary_expression (identifier) (+) (identifier)) ()))) (,)) (match_arm (match_pattern (_)) (=>) (macro_invocation (identifier) (!) (token_tree (() (string_literal (") (string_content) (")) ())))) (})))) (empty_statement (;)) (})) (,)) (match_arm (match_pattern (or_pattern (|) (tuple_struct_pattern (identifier) (() (_) ())))) (=>) (block ({) (expression_statement (macro_invocation (identifier) (!) (token_tree (() (string_literal (") (string_content) (")) ()))) (;)) (})) (,)) (match_arm (match_pattern (or_pattern (|) (_))) (=>) (block ({) (expression_statement (break_expression (break)) (;)) (}))) (})))) (})))) (}))) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (type_identifier)) ())) (->) (primitive_type) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (=) (macro_invocation (identifier) (!) (token_tree ([) (]))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (=) (macro_invocation (identifier) (!) (token_tree ([) (]))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (;)) (expression_statement (while_expression (while) (let_condition (let) (tuple_struct_pattern (identifier) (() (identifier) ())) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ())))) (block ({) (expression_statement (match_expression (match) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (match_block ({) (match_arm (match_pattern (or_pattern (|) (tuple_struct_pattern (identifier) (() (reference_pattern (&) (identifier)) ())))) (=>) (block ({) (expression_statement (match_expression (match) (tuple_expression (() (identifier) (,) (identifier) ())) (match_block ({) (match_arm (match_pattern (or_pattern (|) (tuple_pattern (() (char_literal) (,) (char_literal) ())))) (=>) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (integer_literal) ()))) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (char_literal) ()))) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (char_literal) ()))) (;)) (line_comment (//)) (})) (,)) (match_arm (match_pattern (or_pattern (|) (tuple_pattern (() (char_literal) (,) (char_literal) ())))) (=>) (block ({) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (integer_literal) ()))) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (char_literal) ()))) (;)) (line_comment (//)) (})) (,)) (match_arm (match_pattern (or_pattern (|) (tuple_pattern (() (char_literal) (,) (char_literal) ())))) (=>) (block ({) (expression_statement (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (reference_expression (&) (mutable_specifier) (identifier)) (,) (reference_expression (&) (mutable_specifier) (identifier)) ()))) (;)) (expression_statement (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() (char_literal) ()))) (;)) (line_comment (//)) (})) (,)) (match_arm (match_pattern (or_pattern (|) (tuple_pattern (() (char_literal) (,) (char_literal) ())))) (=>) (block ({) (expression_statement (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (reference_expression (&) (mutable_specifier) (identifier)) (,) (reference_expression (&) (mutable_specifier) (identifier)) ()))) (;)) (line_comment (//)) (})) (,)) (match_arm (match_pattern (or_pattern (|) (_))) (=>) (block ({) (expression_statement (macro_invocation (identifier) (!) (token_tree (() (string_literal (") (string_content) (")) ()))) (;)) (}))) (})))) (})) (,)) (match_arm (match_pattern (or_pattern (|) (identifier))) (=>) (block ({) (expression_statement (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (reference_expression (&) (mutable_specifier) (identifier)) (,) (reference_expression (&) (mutable_specifier) (identifier)) ()))) (;)) (line_comment (//)) (}))) (})))) (})))) (empty_statement (;)) (expression_statement (call_expression (scoped_identifier (identifier) (::) (identifier)) (arguments (() (reference_expression (&) (mutable_specifier) (identifier)) (,) (reference_expression (&) (mutable_specifier) (identifier)) ()))) (;)) (call_expression (field_expression (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (.) (field_identifier)) (arguments (() ()))) (}))))