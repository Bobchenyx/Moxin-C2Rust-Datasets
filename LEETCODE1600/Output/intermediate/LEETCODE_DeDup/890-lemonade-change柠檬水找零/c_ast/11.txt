(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (,) (identifier) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (number_literal)) ())) (expression_statement (update_expression (identifier) (++)) (;)) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (==) (number_literal)) ())) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>) (number_literal)) ())) (expression_statement (comma_expression (update_expression (identifier) (--)) (,) (update_expression (identifier) (++))) (;)) (else_clause (else) (return_statement (return) (false) (;)))) (})) (else_clause (else) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (identifier) (>) (number_literal)) (&&) (binary_expression (identifier) (>) (number_literal))) ())) (expression_statement (comma_expression (update_expression (identifier) (--)) (,) (comma_expression (update_expression (identifier) (--)) (,) (update_expression (identifier) (++)))) (;)) (else_clause (else) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (>=) (number_literal)) ())) (expression_statement (comma_expression (assignment_expression (identifier) (-=) (number_literal)) (,) (update_expression (identifier) (++))) (;)) (else_clause (else) (return_statement (return) (false) (;)))))) (})))))) (}))) (return_statement (return) (true) (;)) (}))))