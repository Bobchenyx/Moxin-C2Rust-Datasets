(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (>)))) ())) (->) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (>))) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>))) (>))) (=) (macro_invocation (identifier) (!) (token_tree ([) (identifier) (!) (token_tree ([) (integer_literal) (;) (identifier) (.) (identifier) (token_tree (() ())) (])) (;) (identifier) (token_tree ([) (integer_literal) (])) (.) (identifier) (token_tree (() ())) (]))) (;)) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (call_expression (field_expression (index_expression (identifier) ([) (integer_literal) (])) (.) (field_identifier)) (arguments (() ())))) (block ({) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ())))) (block ({) (expression_statement (assignment_expression (index_expression (index_expression (identifier) ([) (identifier) (])) ([) (identifier) (])) (=) (index_expression (index_expression (identifier) ([) (identifier) (])) ([) (identifier) (]))) (;)) (})))) (})))) (parenthesized_expression (() (identifier) ())) (}))) (}))))