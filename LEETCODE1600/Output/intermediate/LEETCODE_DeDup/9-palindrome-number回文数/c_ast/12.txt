(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (declaration (primitive_type) (init_declarator (array_declarator (identifier) ([) (number_literal) (])) (=) (initializer_list ({) (number_literal) (}))) (;)) (declaration (primitive_type) (init_declarator (identifier) (=) (number_literal)) (,) (init_declarator (identifier) (=) (number_literal)) (;)) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<) (number_literal)) ())) (comment) (compound_statement ({) (return_statement (return) (false) (;)) (})) (else_clause (else) (compound_statement ({) (while_statement (while) (parenthesized_expression (() (binary_expression (number_literal) (!=) (identifier)) ())) (compound_statement ({) (expression_statement (assignment_expression (subscript_expression (identifier) ([) (update_expression (identifier) (++)) (])) (=) (binary_expression (identifier) (%) (number_literal))) (;)) (comment) (expression_statement (assignment_expression (identifier) (/=) (number_literal)) (;)) (comment) (}))) (expression_statement (;)) (expression_statement (update_expression (identifier) (--)) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<=) (identifier)) (;) (update_expression (identifier) (++)) ()) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (!=) (subscript_expression (identifier) ([) (update_expression (identifier) (--)) (]))) ())) (compound_statement ({) (return_statement (return) (false) (;)) (}))) (}))) (return_statement (return) (true) (;)) (})))) (}))))