(source_file (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (line_comment (//)) (use_declaration (use) (scoped_identifier (scoped_identifier (identifier) (::) (identifier)) (::) (identifier)) (;)) (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (>)))) ())) (->) (generic_type (type_identifier) (type_arguments (<) (generic_type (type_identifier) (type_arguments (<) (type_identifier) (>))) (>))) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (reference_expression (&) (identifier)) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (reference_expression (&) (identifier)) (;)) (expression_statement (while_expression (while) (let_condition (let) (tuple_struct_pattern (identifier) (() (ref_pattern (ref) (identifier)) ())) (=) (unary_expression (*) (identifier))) (block ({) (expression_statement (assignment_expression (identifier) (=) (reference_expression (&) (field_expression (identifier) (.) (field_identifier)))) (;)) (expression_statement (if_expression (if) (let_condition (let) (tuple_struct_pattern (identifier) (() (ref_pattern (ref) (identifier)) ())) (=) (identifier)) (block ({) (expression_statement (assignment_expression (identifier) (=) (reference_expression (&) (field_expression (identifier) (.) (field_identifier)))) (;)) (})) (else_clause (else) (block ({) (expression_statement (break_expression (break)) (;)) (}))))) (expression_statement (if_expression (if) (let_condition (let) (tuple_struct_pattern (identifier) (() (ref_pattern (ref) (identifier)) ())) (=) (unary_expression (*) (identifier))) (block ({) (expression_statement (if_expression (if) (call_expression (field_expression (field_expression (identifier) (.) (field_identifier)) (.) (field_identifier)) (arguments (() ()))) (block ({) (expression_statement (assignment_expression (identifier) (=) (reference_expression (&) (field_expression (identifier) (.) (field_identifier)))) (;)) (})))) (})))) (})))) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (}))) (}))))