(source_file (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (type_identifier)) ())) (->) (primitive_type) (block ({) (let_declaration (let) (identifier) (=) (closure_expression (closure_parameters (|) (identifier) (,) (identifier) (|)) (binary_expression (binary_expression (binary_expression (parenthesized_expression (() (binary_expression (identifier) (-) (char_literal)) ())) (*) (integer_literal)) (+) (parenthesized_expression (() (binary_expression (identifier) (-) (char_literal)) ()))) (<=) (integer_literal))) (;)) (let_declaration (let) (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (;)) (expression_statement (if_expression (if) (binary_expression (index_expression (identifier) ([) (integer_literal) (])) (==) (char_literal)) (block ({) (expression_statement (return_expression (return) (integer_literal)) (;)) (})))) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (expression_statement (for_expression (for) (identifier) (in) (range_expression (integer_literal) (..) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ())))) (block ({) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (expression_statement (if_expression (if) (binary_expression (binary_expression (index_expression (identifier) ([) (identifier) (])) (==) (char_literal)) (&&) (parenthesized_expression (() (binary_expression (binary_expression (index_expression (identifier) ([) (binary_expression (identifier) (-) (integer_literal)) (])) (==) (char_literal)) (||) (binary_expression (index_expression (identifier) ([) (binary_expression (identifier) (-) (integer_literal)) (])) (>=) (char_literal))) ()))) (block ({) (expression_statement (return_expression (return) (integer_literal)) (;)) (})))) (expression_statement (if_expression (if) (binary_expression (index_expression (identifier) ([) (identifier) (])) (==) (char_literal)) (block ({) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (})) (else_clause (else) (block ({) (expression_statement (assignment_expression (identifier) (=) (binary_expression (identifier) (+) (if_expression (if) (binary_expression (call_expression (identifier) (arguments (() (index_expression (identifier) ([) (binary_expression (identifier) (-) (integer_literal)) (])) (,) (index_expression (identifier) ([) (identifier) (])) ()))) (&&) (binary_expression (index_expression (identifier) ([) (binary_expression (identifier) (-) (integer_literal)) (])) (!=) (char_literal))) (block ({) (identifier) (})) (else_clause (else) (block ({) (integer_literal) (})))))) (;)) (}))))) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (})))) (identifier) (}))) (}))))