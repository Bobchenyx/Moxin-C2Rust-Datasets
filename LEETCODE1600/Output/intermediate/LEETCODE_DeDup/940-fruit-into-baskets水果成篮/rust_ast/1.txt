(source_file (attribute_item (#) ([) (attribute (identifier) (token_tree (() (identifier) (,) (identifier) ()))) (])) (struct_item (struct) (type_identifier) (field_declaration_list ({) (field_declaration (field_identifier) (:) (primitive_type)) (,) (field_declaration (field_identifier) (:) (primitive_type)) (,) (}))) (impl_item (impl) (type_identifier) (declaration_list ({) (function_item (visibility_modifier (pub)) (fn) (identifier) (parameters (() (parameter (identifier) (:) (generic_type (type_identifier) (type_arguments (<) (primitive_type) (>)))) ())) (->) (primitive_type) (block ({) (let_declaration (let) (identifier) (=) (call_expression (field_expression (identifier) (.) (field_identifier)) (arguments (() ()))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (struct_expression (type_identifier) (field_initializer_list ({) (field_initializer (field_identifier) (:) (type_cast_expression (identifier) (as) (primitive_type))) (,) (field_initializer (field_identifier) (:) (integer_literal)) (,) (}))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (struct_expression (type_identifier) (field_initializer_list ({) (field_initializer (field_identifier) (:) (type_cast_expression (identifier) (as) (primitive_type))) (,) (field_initializer (field_identifier) (:) (integer_literal)) (,) (}))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (struct_expression (type_identifier) (field_initializer_list ({) (field_initializer (field_identifier) (:) (type_cast_expression (identifier) (as) (primitive_type))) (,) (field_initializer (field_identifier) (:) (integer_literal)) (,) (}))) (;)) (let_declaration (let) (mutable_specifier) (identifier) (=) (integer_literal) (;)) (expression_statement (for_expression (for) (identifier) (in) (identifier) (block ({) (line_comment (//)) (expression_statement (if_expression (if) (binary_expression (identifier) (==) (field_expression (identifier) (.) (field_identifier))) (block ({) (expression_statement (compound_assignment_expr (field_expression (identifier) (.) (field_identifier)) (+=) (integer_literal)) (;)) (})) (else_clause (else) (if_expression (if) (binary_expression (identifier) (==) (field_expression (identifier) (.) (field_identifier))) (block ({) (expression_statement (compound_assignment_expr (field_expression (identifier) (.) (field_identifier)) (+=) (integer_literal)) (;)) (})) (else_clause (else) (block ({) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (integer_literal)) (;)) (}))))))) (let_declaration (let) (identifier) (=) (binary_expression (field_expression (identifier) (.) (field_identifier)) (+) (field_expression (identifier) (.) (field_identifier))) (;)) (expression_statement (if_expression (if) (binary_expression (identifier) (<) (identifier)) (block ({) (expression_statement (assignment_expression (identifier) (=) (identifier)) (;)) (})))) (expression_statement (if_expression (if) (binary_expression (identifier) (==) (field_expression (identifier) (.) (field_identifier))) (block ({) (expression_statement (compound_assignment_expr (field_expression (identifier) (.) (field_identifier)) (+=) (integer_literal)) (;)) (})) (else_clause (else) (block ({) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (identifier)) (;)) (expression_statement (assignment_expression (field_expression (identifier) (.) (field_identifier)) (=) (integer_literal)) (;)) (}))))) (})))) (identifier) (}))) (}))))