(translation_unit (function_definition (primitive_type) (function_declarator (identifier) (parameter_list (() (parameter_declaration (primitive_type) (pointer_declarator (*) (identifier))) (,) (parameter_declaration (primitive_type) (identifier)) ()))) (compound_statement ({) (if_statement (if) (parenthesized_expression (() (binary_expression (identifier) (<) (number_literal)) ())) (return_statement (return) (false) (;))) (if_statement (if) (parenthesized_expression (() (binary_expression (binary_expression (subscript_expression (identifier) ([) (number_literal) (])) (>=) (subscript_expression (identifier) ([) (number_literal) (]))) (||) (binary_expression (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])) (>=) (subscript_expression (identifier) ([) (binary_expression (identifier) (-) (number_literal)) (])))) ())) (comment) (return_statement (return) (false) (;))) (declaration (primitive_type) (identifier) (;)) (for_statement (for) (() (assignment_expression (identifier) (=) (number_literal)) (;) (binary_expression (identifier) (<) (binary_expression (identifier) (-) (number_literal))) (;) (update_expression (identifier) (++)) ()) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (>=) (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (]))) ())) (comment) (break_statement (break) (;)))) (for_statement (for) (() (identifier) (;) (binary_expression (identifier) (<) (binary_expression (identifier) (-) (number_literal))) (;) (update_expression (identifier) (++)) ()) (if_statement (if) (parenthesized_expression (() (binary_expression (subscript_expression (identifier) ([) (identifier) (])) (<=) (subscript_expression (identifier) ([) (binary_expression (identifier) (+) (number_literal)) (]))) ())) (return_statement (return) (false) (;)))) (return_statement (return) (true) (;)) (}))))